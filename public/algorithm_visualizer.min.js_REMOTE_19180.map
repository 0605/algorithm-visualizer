{"version":3,"sources":["algorithm_visualizer.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_$","$","extend","cache","lastFileUsed","files","assertFileName","name","getCachedFile","updateCachedFile","updates","getLastFileUsed","setLastFileUsed","file","2","Editor","TracerManager","DOM","_require","showLoadingSlider","hideLoadingSlider","_require2","Cache","getFileDir","state","each","isLoading","editor","tracerManager","categories","initState","App","this","getIsLoading","setIsLoading","loading","getEditor","getCategories","getCategory","setCategories","updateCategory","getTracerManager","init","setup","prototype","../dom/loading_slider","../dom/setup","../editor","../tracer_manager","../utils","./cache","3","4","showAlgorithm","showCategories","showDescription","showFiles","showFirstAlgorithm","./show_algorithm","./show_categories","./show_description","./show_files","./show_first_algorithm","5","removeClass","addClass","6","setupDividers","setupDocument","setupFilesBar","setupInterval","setupModuleContainer","setupPoweredBy","setupScratchPaper","setupSideMenu","setupTopMenu","setupWindow","click","stopPropagation","./setup_dividers","./setup_document","./setup_files_bar","./setup_interval","./setup_module_container","./setup_powered_by","./setup_scratch_paper","./setup_side_menu","./setup_top_menu","./setup_window","7","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","err","Array","isArray","Object","TypeError","appInstance","addDividerToDom","divider","_divider","vertical","$first","$second","$parent","parent","thickness","$divider","dragging","_left","css","top","bottom","left","width","x","mousedown","_ref","pageX","document","mousemove","_ref2","new_left","position","percent","Math","min","max","resize","scroll","mouseup","_top","height","right","y","_ref3","pageY","_ref4","new_top","append","dividers","../../app","8","on","preventDefault","window","open","attr","alert","command","9","definitelyBigger","$wrapper","clipWidth","scrollLeft","children","get","reverse","outerWidth","$left","$right","lefter","righter","toggleClass","10","Toast","parseFloat","Number","minInterval","maxInterval","startInterval","stepInterval","normalize","sec","interval","message","$interval","val","step","_normalize","_normalize2","seconds","showInfoToast","../toast","11","$module_container","findOwner","mousewheel","12","13","Server","category","algorithm","loadAlgorithm","then","data","../../server","../show_algorithm","14","sidemenu_percent","$sidemenu","$workspace","hasClass","15","select","$icon","find","shareScratchPaper","url","execute","console","error","showErrorToast","isPause","resumeStep","pauseStep","prevStep","nextStep","16","17","isScratchPaper","$menu","category_name","algorithm_name","categoryObj","list","html","empty","clearContent","../app","18","addAlgorithmToCategoryDOM","subList","$algorithm","addCategoryToDOM","_appInstance$getCateg","categoryName","categorySubList","$category","../server","19","_typeof","obj","constructor","$container","key","$ul","forEach","li","prop","20","addFileToDOM","explanation","$file","loadFile","first","21","22","showToast","type","$toast","setTimeout","fadeOut","remove","23","id","ace","edit","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","setTheme","session","setMode","$blockScrolling","Infinity","24","deallocateAll","eval","visualize","removeUnallocated","executeData","algoData","executeDataAndCode","algoCode","25","_this","dataEditor","createEditor","codeEditor","setData","setValue","setCode","setContent","clearData","clearCode","getValue","Executor","./create","./executor","26","RSVP","AppConstructor","Helpers","modules","ajaxSetup","dataType","reason","assert","app","loadCategories","gistID","getParameterByName","loadScratchPaper","./app","./app/constructor","./dom","./module","./server","./server/helpers","rsvp","27","Array1DTracer","Array2DTracer","apply","arguments","Array2D","create","_notify","idx","v","_denotify","_select","_selectRow","_deselect","_deselectRow","D","Array1D","random","N","randomSorted","./array2d","28","Tracer","refineByType","$table","capsule","manager","pushStep","sx","sy","ex","ey","pushSelectingStep","_selectCol","_deselectCol","_separate","_separateRow","_separateCol","_deseparate","_deseparateRow","_deseparateCol","args","slice","shift","mode","coord","processStep","options","$row","eq","$col","text","colorClass","selected","notified","paintColor","deseparate","separate","viewX","viewY","paddingH","paddingV","fontSize","j","getCellCss","refresh","clear","clearColor","deseparateAll","padding","toFixed","font-size","dragX","dragY","originalEvent","delta","wheelDelta","detail","weight","ratio","keys","join","after","M","map","sort","b","../tracer_manager/util","./tracer","29","ChartTracer","C","color","labels","String","datasets","backgroundColor","scales","yAxes","ticks","beginAtZero","chart","Chart","config","toString","update","30","CoordinateSystemTracer","DirectedGraphTracer","DirectedGraph","tracer","settings","defaultEdgeType","funcEdgesDef","edge","source","target","context","getColor","drawEdge","graph","nodes","edges","label","size","read","camera","goTo","angle","visit","targetNode","visited","edgeId","dropEdge","addEdge","logTracer","print","v1","v2","temp","drawOnHover","node","setLineDash","nodeIdx","substring","ends","split","prefix","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","CoordinateSystem","./directed_graph","31","sigma","renderer","container","minArrowSize","maxEdgeSize","labelThreshold","font","defaultLabelColor","zoomMin","zoomMax","skipErrors","minNodeSize","maxNodeSize","labelSize","labelSizeRatio","funcLabelsDef","drawLabel","funcHoversDef","funcEdgesArrow","drawArrow","plugins","dragNodes","renderers","_setTreeData","G","root","_visit","_leave","setTreeData","maxDepth","chk","getDepth","depth","place","wgap","dfs","vgap","cnt","unitAngle","PI","currentAngle","sin","cos","clearGraphColor","default","edgeColor","defaultNodeColor","defaultEdgeColor","fillStyle","textAlign","fillText","round","tSize","sX","sY","tX","tY","atan2","dist","aSize","d","sqrt","pow","aX","aY","vX","vY","closePath","fill","canvas","def","func","hovers","arrow","32","LogTracer","_require3","_require4","_require5","UndirectedGraph","UndirectedGraphTracer","_require6","WeightedDirectedGraph","WeightedDirectedGraphTracer","_require7","WeightedUndirectedGraph","WeightedUndirectedGraphTracer","./array1d","./chart","./coordinate_system","./log_tracer","./undirected_graph","./weighted_directed_graph","./weighted_undirected_graph","33","_print","msg","scrollToEnd","duration","animate","scrollTop","scrollHeight","34","_toConsumableArray","arr2","from","allocate","setName","isNew","toJSON","fromJSON","_setData","_len","_key","_clear","_wait","newStep","$name","defaultName","lastData","attach","35","36","edgeLabelSize","defaultEdgeLabelSize","edgeLabelSizePowRatio","drawNodeWeight","drawEdgeWeight","_weight","clearWeights","dX","dY","save","active","textBaseline","translate","rotate","restore","37","38","request","./request","39","40","JSON","stringify","41","ajax","defaults","Promise","resolve","reject","callbacks","success","response","opts","42","checkLoading","location","href","regex","replace","RegExp","results","exec","_results","../dom/toast","43","./load_algorithm","./load_categories","./load_file","./load_scratch_paper","./share_scratch_paper","44","Utils","getJSON","dir","getAlgorithmDir","./ajax/get_json","45","46","loadDataAndCode","hash","loadFileAndUpdateContent","content","cachedContentExists","cachedFile","./ajax/get","./helpers","47","extractGistCode","CREDIT.md","48","postJSON","_appInstance$getEdito","gist","description","public","data.js","code.js","_location","protocol","host","pathname","./ajax/post_json","49","tm","../module/tracer","./manager","50","stepLimit","timer","pause","capsules","add","allocated","newTracer","selectedCapsule","count","reset","changed","grep","removed","setInterval","traces","traceIndex","stepCnt","clearTimeout","len","last","isNaN","trace","virtual","finalIndex","functionName","51","parse","52","./from_json","./refine_by_type","./to_json","53","item","refineNumber","refineString","str","num","54","55","56","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","Item","fun","array","noop","process","nextTick","title","browser","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","57","global","lib$rsvp$utils$$objectOrFunction","lib$rsvp$utils$$isFunction","lib$rsvp$utils$$isMaybeThenable","lib$rsvp$utils$$F","lib$rsvp$events$$indexOf","callback","lib$rsvp$events$$callbacksFor","object","_promiseCallbacks","lib$rsvp$config$$configure","lib$rsvp$config$$config","lib$rsvp$instrument$$scheduleFlush","entry","lib$rsvp$instrument$$queue","payload","guid","childGuid","childId","stack","lib$rsvp$instrument$$instrument","eventName","promise","child","_guidKey","_id","_result","_label","timeStamp","lib$rsvp$utils$$now","lib$rsvp$then$$then","onFulfillment","onRejection","_state","lib$rsvp$$internal$$FULFILLED","lib$rsvp$$internal$$REJECTED","instrument","lib$rsvp$instrument$$default","_onError","lib$rsvp$$internal$$noop","result","async","lib$rsvp$$internal$$invokeCallback","lib$rsvp$$internal$$subscribe","lib$rsvp$promise$resolve$$resolve","Constructor","lib$rsvp$$internal$$resolve","lib$rsvp$enumerator$$makeSettledResult","lib$rsvp$enumerator$$Enumerator","input","abortOnReject","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","lib$rsvp$$internal$$fulfill","_enumerate","lib$rsvp$$internal$$reject","_validationError","lib$rsvp$promise$all$$all","entries","lib$rsvp$enumerator$$default","lib$rsvp$promise$race$$race","lib$rsvp$utils$$isArray","lib$rsvp$$internal$$PENDING","lib$rsvp$promise$reject$$reject","lib$rsvp$promise$$needsResolver","lib$rsvp$promise$$needsNew","lib$rsvp$promise$$Promise","resolver","lib$rsvp$promise$$counter","_subscribers","lib$rsvp$$internal$$initializePromise","lib$rsvp$$internal$$withOwnPromise","lib$rsvp$$internal$$getThen","lib$rsvp$$internal$$GET_THEN_ERROR","lib$rsvp$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$rsvp$$internal$$handleForeignThenable","thenable","sealed","lib$rsvp$$internal$$handleOwnThenable","lib$rsvp$$internal$$handleMaybeThenable","maybeThenable","lib$rsvp$then$$default","lib$rsvp$promise$resolve$$default","lib$rsvp$$internal$$publishRejection","lib$rsvp$$internal$$publish","subscribers","settled","lib$rsvp$$internal$$ErrorObject","lib$rsvp$$internal$$tryCatch","lib$rsvp$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","resolved","lib$rsvp$all$settled$$AllSettled","_superConstructor","lib$rsvp$all$settled$$allSettled","lib$rsvp$promise$$default","lib$rsvp$all$$all","all","lib$rsvp$asap$$asap","arg","lib$rsvp$asap$$queue","lib$rsvp$asap$$len","lib$rsvp$asap$$scheduleFlush","lib$rsvp$asap$$useNextTick","match","setImmediate","lib$rsvp$asap$$flush","lib$rsvp$asap$$useVertxTimer","lib$rsvp$asap$$vertxNext","lib$rsvp$asap$$useMutationObserver","iterations","observer","lib$rsvp$asap$$BrowserMutationObserver","createTextNode","observe","characterData","lib$rsvp$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$rsvp$asap$$useSetTimeout","lib$rsvp$asap$$attemptVertex","vertx","runOnLoop","runOnContext","lib$rsvp$defer$$defer","deferred","lib$rsvp$filter$$filter","promises","filterFn","values","filtered","newLength","lib$rsvp$promise$hash$$PromiseHash","lib$rsvp$hash$settled$$HashSettled","lib$rsvp$hash$settled$$hashSettled","lib$rsvp$hash$$hash","lib$rsvp$promise$hash$$default","lib$rsvp$map$$map","mapFn","lib$rsvp$node$$Result","lib$rsvp$node$$getThen","lib$rsvp$node$$ERROR","lib$rsvp$node$$tryApply","lib$rsvp$node$$makeObject","_","argumentNames","lib$rsvp$node$$arrayResult","lib$rsvp$node$$wrapThenable","onFulFillment","lib$rsvp$node$$denodeify","nodeFunc","fn","self","promiseInput","lib$rsvp$node$$needsPromiseInput","lib$rsvp$node$$GET_THEN_ERROR","p","lib$rsvp$node$$handlePromiseInput","lib$rsvp$node$$handleValueInput","__proto__","lib$rsvp$race$$race","race","lib$rsvp$reject$$reject","lib$rsvp$resolve$$resolve","lib$rsvp$rethrow$$rethrow","lib$rsvp$$async","lib$rsvp$$on","lib$rsvp$$off","lib$rsvp$utils$$_isArray","Date","now","getTime","lib$rsvp$utils$$o_create","lib$rsvp$events$$default","mixin","allCallbacks","index","splice","trigger","_eachEntry","_settleMaybeThenable","c","_settledAt","_makeResult","_willSettleAt","enumerator","lib$rsvp$promise$all$$default","lib$rsvp$promise$race$$default","lib$rsvp$promise$reject$$default","lib$rsvp$promise$$guidKey","cast","catch","finally","lib$rsvp$all$settled$$default","lib$rsvp$all$$default","lib$rsvp$asap$$default","lib$rsvp$asap$$browserWindow","lib$rsvp$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$rsvp$asap$$isNode","lib$rsvp$asap$$isWorker","Uint8ClampedArray","importScripts","lib$rsvp$defer$$default","lib$rsvp$filter$$default","hasOwnProperty","lib$rsvp$platform$$platform","lib$rsvp$hash$settled$$default","lib$rsvp$hash$$default","lib$rsvp$map$$default","lib$rsvp$node$$default","lib$rsvp$platform$$default","lib$rsvp$race$$default","lib$rsvp$reject$$default","lib$rsvp$resolve$$default","lib$rsvp$rethrow$$default","cb","lib$rsvp$$callbacks","lib$rsvp$$eventName","lib$rsvp$umd$$RSVP","allSettled","hashSettled","denodeify","filter","rethrow","defer","EventTarget","configure","define","_process"],"mappings":"CAOA,QAAUA,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIK,GAAE,GAAIC,OAAM,uBAAuBN,EAAE,IAAK,MAAMK,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEX,EAAEG,IAAIS,WAAYb,GAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGS,QAAkD,IAAI,GAA1CL,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKa,GAAG,SAAST,EAAQU,EAAOJ,GACvd,YAEA,IAAIK,GAAKC,EACLC,EAASF,EAAGE,OAGZC,GACFC,aAAc,GACdC,UAGEC,EAAiB,SAAwBC,GAC3C,IAAKA,EACH,KAAM,oBAOVR,GAAOJ,SACLa,cAAe,SAAuBD,GAEpC,MADAD,GAAeC,GACRJ,EAAME,MAAME,IAErBE,iBAAkB,SAA0BF,EAAMG,GAChDJ,EAAeC,GACVJ,EAAME,MAAME,KACfJ,EAAME,MAAME,OAEdL,EAAOC,EAAME,MAAME,GAAOG,IAE5BC,gBAAiB,WACf,MAAOR,GAAMC,cAEfQ,gBAAiB,SAAyBC,GACxCV,EAAMC,aAAeS,SAInBC,GAAG,SAASzB,EAAQU,EAAOJ,GACjC,YAEA,IAAIoB,GAAS1B,EAAQ,aACjB2B,EAAgB3B,EAAQ,qBACxB4B,EAAM5B,EAAQ,gBAEd6B,EAAW7B,EAAQ,yBAEnB8B,EAAoBD,EAASC,kBAC7BC,EAAoBF,EAASE,kBAE7BC,EAAYhC,EAAQ,YAKpBiC,GAHaD,EAAUE,WAGflC,EAAQ,YAEhBW,EAAKC,EAILuB,GAHOxB,EAAGyB,MAIZC,UAAW,KACXC,OAAQ,KACRC,cAAe,KACfC,WAAY,OAGVC,EAAY,SAAmBF,GACjCJ,EAAME,WAAY,EAClBF,EAAMG,OAAS,GAAIZ,GAAOa,GAC1BJ,EAAMI,cAAgBA,EACtBJ,EAAMK,eAMJE,EAAM,WAERC,KAAKC,aAAe,WAClB,MAAOT,GAAME,WAGfM,KAAKE,aAAe,SAAUC,GAC5BX,EAAME,UAAYS,EACdA,EACFhB,IAEAC,KAIJY,KAAKI,UAAY,WACf,MAAOZ,GAAMG,QAGfK,KAAKK,cAAgB,WACnB,MAAOb,GAAMK,YAGfG,KAAKM,YAAc,SAAU/B,GAC3B,MAAOiB,GAAMK,WAAWtB,IAG1ByB,KAAKO,cAAgB,SAAUV,GAC7BL,EAAMK,WAAaA,GAGrBG,KAAKQ,eAAiB,SAAUjC,EAAMG,GACpCT,EAAEC,OAAOsB,EAAMK,WAAWtB,GAAOG,IAGnCsB,KAAKS,iBAAmB,WACtB,MAAOjB,GAAMI,cAGf,IAAIA,GAAgBZ,EAAc0B,MAElCZ,GAAUF,GACVX,EAAI0B,MAAMf,GAGZG,GAAIa,UAAYtB,EAEhBvB,EAAOJ,QAAUoC,IAEdc,wBAAwB,EAAEC,eAAe,EAAEC,YAAY,GAAGC,oBAAoB,GAAGC,WAAW,GAAGC,UAAU,IAAIC,GAAG,SAAS9D,EAAQU,EAAOJ,GAC3I,YAOAI,GAAOJ,gBAEDyD,GAAG,SAAS/D,EAAQU,EAAOJ,GACjC,YAEA,IAAI0D,GAAgBhE,EAAQ,oBACxBiE,EAAiBjE,EAAQ,qBACzBkE,EAAkBlE,EAAQ,sBAC1BmE,EAAYnE,EAAQ,gBACpBoE,EAAqBpE,EAAQ,yBAEjCU,GAAOJ,SACL0D,cAAeA,EACfC,eAAgBA,EAChBC,gBAAiBA,EACjBC,UAAWA,EACXC,mBAAoBA,KAGnBC,mBAAmB,GAAGC,oBAAoB,GAAGC,qBAAqB,GAAGC,eAAe,GAAGC,yBAAyB,KAAKC,GAAG,SAAS1E,EAAQU,EAAOJ,GACnJ,YAEA,IAAIwB,GAAoB,WACtBlB,EAAE,mBAAmB+D,YAAY,WAG/B5C,EAAoB,WACtBnB,EAAE,mBAAmBgE,SAAS,UAGhClE,GAAOJ,SACLwB,kBAAmBA,EACnBC,kBAAmBA,QAGf8C,GAAG,SAAS7E,EAAQU,EAAOJ,GACjC,YAEA,IAAIwE,GAAgB9E,EAAQ,oBACxB+E,EAAgB/E,EAAQ,oBACxBgF,EAAgBhF,EAAQ,qBACxBiF,EAAgBjF,EAAQ,oBACxBkF,EAAuBlF,EAAQ,4BAC/BmF,EAAiBnF,EAAQ,sBACzBoF,EAAoBpF,EAAQ,yBAC5BqF,EAAgBrF,EAAQ,qBACxBsF,EAAetF,EAAQ,oBACvBuF,EAAcvF,EAAQ,kBAKtBsD,EAAQ,WAEV1C,EAAE,cAAc4E,MAAM,SAAUhG,GAC9BA,EAAEiG,oBAIJX,IAGAC,IAGAC,IAGAC,IAGAC,IAGAC,IAGAC,IAGAC,IAGAC,IAGAC,IAGF7E,GAAOJ,SACLgD,MAAOA,KAGNoC,mBAAmB,EAAEC,mBAAmB,EAAEC,oBAAoB,EAAEC,mBAAmB,GAAGC,2BAA2B,GAAGC,qBAAqB,GAAGC,wBAAwB,GAAGC,oBAAoB,GAAGC,mBAAmB,GAAGC,iBAAiB,KAAKC,GAAG,SAASpG,EAAQU,EAAOJ,GACxQ,YAEA,IAAI+F,GAAiB,WAAc,QAASC,GAAcC,EAAKtG,GAAK,GAAIuG,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAKC,MAAW,KAAM,IAAK,GAAiCC,GAA7BC,EAAKP,EAAIQ,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAAoBV,EAAKW,KAAKN,EAAGO,QAAYnH,GAAKuG,EAAKhG,SAAWP,GAA3DwG,GAAK,IAAoE,MAAOY,GAAOX,GAAK,EAAMC,EAAKU,EAAO,QAAU,KAAWZ,GAAMK,EAAG,WAAWA,EAAG,YAAe,QAAU,GAAIJ,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAKtG,GAAK,GAAIqH,MAAMC,QAAQhB,GAAQ,MAAOA,EAAY,IAAIQ,OAAOC,WAAYQ,QAAOjB,GAAQ,MAAOD,GAAcC,EAAKtG,EAAa,MAAM,IAAIwH,WAAU,4DAEllBC,EAAc1H,EAAQ,aAEtB2H,EAAkB,SAAyBC,GAC7C,GAAIC,GAAWxB,EAAeuB,EAAS,GAEnCE,EAAWD,EAAS,GACpBE,EAASF,EAAS,GAClBG,EAAUH,EAAS,GAEnBI,EAAUF,EAAOG,SACjBC,EAAY,EAEZC,EAAWxH,EAAE,yBAEbyH,GAAW,CACXP,IACF,WACEM,EAASxD,SAAS,WAElB,IAAI0D,IAASH,EAAY,CACzBC,GAASG,KACPC,IAAK,EACLC,OAAQ,EACRC,KAAMJ,EACNK,MAAOR,GAGT,IAAIS,GAAI,MACRR,GAASS,UAAU,SAAUC,GAC3B,GAAIC,GAAQD,EAAKC,KAEjBH,GAAIG,EACJV,GAAW,IAGbzH,EAAEoI,UAAUC,UAAU,SAAUC,GAC9B,GAAIH,GAAQG,EAAMH,KAElB,IAAIV,EAAU,CACZ,GAAIc,GAAWnB,EAAQoB,WAAWV,KAAOK,EAAQH,EAC7CS,EAAUF,EAAWlB,EAAQU,QAAU,GAC3CU,GAAUC,KAAKC,IAAI,GAAID,KAAKE,IAAI,GAAIH,IACpCtB,EAAOQ,IAAI,QAAS,IAAMc,EAAU,KACpCrB,EAAQO,IAAI,OAAQc,EAAU,KAC9BT,EAAIG,EACJrB,EAAYtE,mBAAmBqG,SAC/B7I,EAAE,yBAAyB8I,YAI/B9I,EAAEoI,UAAUW,QAAQ,SAAUnK,GAC5B6I,GAAW,QAIf,WAEED,EAASxD,SAAS,aAClB,IAAIgF,IAAQzB,EAAY,CACxBC,GAASG,KACPC,IAAKoB,EACLC,OAAQ1B,EACRO,KAAM,EACNoB,MAAO,GAGT,IAAIC,GAAI,MACR3B,GAASS,UAAU,SAAUmB,GAC3B,GAAIC,GAAQD,EAAMC,KAElBF,GAAIE,EACJ5B,GAAW,IAGbzH,EAAEoI,UAAUC,UAAU,SAAUiB,GAC9B,GAAID,GAAQC,EAAMD,KAElB,IAAI5B,EAAU,CACZ,GAAI8B,GAAUnC,EAAQoB,WAAWZ,IAAMyB,EAAQF,EAC3CV,EAAUc,EAAUlC,EAAQ4B,SAAW,GAC3CR,GAAUC,KAAKC,IAAI,GAAID,KAAKE,IAAI,GAAIH,IACpCtB,EAAOQ,IAAI,SAAU,IAAMc,EAAU,KACrCrB,EAAQO,IAAI,MAAOc,EAAU,KAC7BU,EAAIE,EACJvC,EAAYtE,mBAAmBqG,YAInC7I,EAAEoI,UAAUW,QAAQ,SAAUnK,GAC5B6I,GAAW,OAKjBL,EAAQoC,OAAOhC,GAGjB1H,GAAOJ,QAAU,WAEf,IAAK,GADD+J,KAAa,IAAKzJ,EAAE,aAAcA,EAAE,gBAAiB,IAAKA,EAAE,qBAAsBA,EAAE,uBAAwB,IAAKA,EAAE,mBAAoBA,EAAE,qBACpIX,EAAI,EAAGA,EAAIoK,EAAS7J,OAAQP,IACnC0H,EAAgB0C,EAASpK,OAI1BqK,YAAY,IAAIC,GAAG,SAASvK,EAAQU,EAAOJ,GAC9C,YAEA,IAAIoH,GAAc1H,EAAQ,YAE1BU,GAAOJ,QAAU,WACfM,EAAEoI,UAAUwB,GAAG,QAAS,IAAK,SAAUhL,GACrCA,EAAEiL,iBAEGC,OAAOC,KAAK/J,EAAEgG,QAAWgE,KAAK,QAAS,WAC1CC,MAAM,uCAIVjK,EAAEoI,UAAUW,QAAQ,SAAUnK,GAC5BkI,EAAYtE,mBAAmB0H,QAAQ,UAAWtL,QAInD8K,YAAY,IAAIS,GAAG,SAAS/K,EAAQU,EAAOJ,GAC9C,YAEA,IAAI0K,GAAmB,SAA0BpC,EAAGmB,GAClD,MAAOnB,GAAImB,EAAI,EAGjBrJ,GAAOJ,QAAU,WAEfM,EAAE,0BAA0B4E,MAAM,WAChC,GAAIyF,GAAWrK,EAAE,yBACbsK,EAAYD,EAAStC,QACrBwC,EAAaF,EAASE,YAE1BvK,GAAEqK,EAASG,SAAS,UAAUC,MAAMC,WAAWlJ,KAAK,WAClD,GAAIsG,GAAO9H,EAAE+B,MAAMyG,WAAWV,KAC1BoB,EAAQpB,EAAO9H,EAAE+B,MAAM4I,YAC3B,OAAI,GAAI7C,GACNuC,EAASE,WAAWA,EAAarB,EAAQoB,IAClC,GAFT,WAOJtK,EAAE,2BAA2B4E,MAAM,WACjC,GAAIyF,GAAWrK,EAAE,yBACbsK,EAAYD,EAAStC,QACrBwC,EAAaF,EAASE,YAE1BF,GAASG,SAAS,UAAUhJ,KAAK,WAC/B,GAAIsG,GAAO9H,EAAE+B,MAAMyG,WAAWV,KAC1BoB,EAAQpB,EAAO9H,EAAE+B,MAAM4I,YAC3B,OAAgBzB,GAAZoB,GACFD,EAASE,WAAWA,EAAazC,IAC1B,GAFT,WAOJ9H,EAAE,yBAAyB8I,OAAO,WAEhC,GAAIuB,GAAWrK,EAAE,yBACbsK,EAAYD,EAAStC,QACrB6C,EAAQP,EAASG,SAAS,sBAC1BK,EAASR,EAASG,SAAS,qBAC3B1C,EAAO8C,EAAMpC,WAAWV,KACxBoB,EAAQ2B,EAAOrC,WAAWV,KAAO+C,EAAOF,YAE5C,IAAIP,EAAiB,EAAGtC,IAASsC,EAAiBE,EAAWpB,GAAQ,CACnE,GAAIqB,GAAaF,EAASE,YAE1B,YADAF,GAASE,WAAWA,EAAaD,EAAYpB,GAI/C,GAAI4B,GAASV,EAAiB,EAAGtC,GAC7BiD,EAAUX,EAAiBlB,EAAOoB,EACtCD,GAASW,YAAY,cAAeF,GACpCT,EAASW,YAAY,eAAgBD,GACrC/K,EAAE,0BAA0BgK,KAAK,YAAac,GAC9C9K,EAAE,2BAA2BgK,KAAK,YAAae,WAI7CE,IAAI,SAAS7L,EAAQU,EAAOJ,GAClC,YAEA,IAAI+F,GAAiB,WAAc,QAASC,GAAcC,EAAKtG,GAAK,GAAIuG,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAKC,MAAW,KAAM,IAAK,GAAiCC,GAA7BC,EAAKP,EAAIQ,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAAoBV,EAAKW,KAAKN,EAAGO,QAAYnH,GAAKuG,EAAKhG,SAAWP,GAA3DwG,GAAK,IAAoE,MAAOY,GAAOX,GAAK,EAAMC,EAAKU,EAAO,QAAU,KAAWZ,GAAMK,EAAG,WAAWA,EAAG,YAAe,QAAU,GAAIJ,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAKtG,GAAK,GAAIqH,MAAMC,QAAQhB,GAAQ,MAAOA,EAAY,IAAIQ,OAAOC,WAAYQ,QAAOjB,GAAQ,MAAOD,GAAcC,EAAKtG,EAAa,MAAM,IAAIwH,WAAU,4DAEllBC,EAAc1H,EAAQ,aACtB8L,EAAQ9L,EAAQ,YAEhB+L,EAAaC,OAAOD,WAGpBE,EAAc,GACdC,EAAc,GACdC,EAAgB,GAChBC,EAAe,GAEfC,EAAY,SAAmBC,GAEjC,GAAIC,GAAW,OACXC,EAAU,MAYd,OAXUP,GAANK,GACFC,EAAWN,EACXO,EAAU,eAAiBF,EAAM,2DAA6DL,EAAc,eACnGK,EAAMJ,GACfK,EAAWL,EACXM,EAAU,eAAiBF,EAAM,4DAA8DJ,EAAc,gBAE7GK,EAAWD,EACXE,EAAU,4BAA8BF,EAAM,gBAGxCC,EAAUC,GAGpB9L,GAAOJ,QAAU,WAEf,GAAImM,GAAY7L,EAAE,YAClB6L,GAAUC,IAAIP,GACdM,EAAU7B,MACRpB,IAAK0C,EACL3C,IAAK0C,EACLU,KAAMP,IAGRxL,EAAE,aAAa4J,GAAG,SAAU,WAC1B,GAAIjI,GAAgBmF,EAAYtE,mBAE5BwJ,EAAaP,EAAUN,EAAWnL,EAAE+B,MAAM+J,QAE1CG,EAAcxG,EAAeuG,EAAY,GAEzCE,EAAUD,EAAY,GACtBL,EAAUK,EAAY,EAG1BjM,GAAE+B,MAAM+J,IAAII,GACZvK,EAAcgK,SAAqB,IAAVO,EACzBhB,EAAMiB,cAAcP,QAIrBlC,YAAY,EAAE0C,WAAW,KAAKC,IAAI,SAASjN,EAAQU,EAAOJ,GAC7D,YAEA,IAAIoH,GAAc1H,EAAQ,YAE1BU,GAAOJ,QAAU,WAEf,GAAI4M,GAAoBtM,EAAE,oBAE1BsM,GAAkB1C,GAAG,YAAa,kBAAmB,SAAUhL,GAC7DkI,EAAYtE,mBAAmB+J,UAAUxK,MAAMkG,UAAUrJ,KAG3D0N,EAAkB1C,GAAG,YAAa,kBAAmB,SAAUhL,GAC7DkI,EAAYtE,mBAAmB+J,UAAUxK,MAAMsG,UAAUzJ,KAG3D0N,EAAkB1C,GAAG,4BAA6B,kBAAmB,SAAUhL,GAC7EkI,EAAYtE,mBAAmB+J,UAAUxK,MAAMyK,WAAW5N,QAI3D8K,YAAY,IAAI+C,IAAI,SAASrN,EAAQU,EAAOJ,GAC/C,YAEAI,GAAOJ,QAAU,WACfM,EAAE,eAAe4E,MAAM,WACrB5E,EAAE,2BAA2BgL,YAAY,oBAIvC0B,IAAI,SAAStN,EAAQU,EAAOJ,GAClC,YAEA,IAAIiN,GAASvN,EAAQ,gBACjBgE,EAAgBhE,EAAQ,oBAE5BU,GAAOJ,QAAU,WACfM,EAAE,kBAAkB4E,MAAM,WACxB,GAAIgI,GAAW,KACXC,EAAY,eAChBF,GAAOG,cAAcF,EAAUC,GAAWE,KAAK,SAAUC,GACvD5J,EAAcwJ,EAAUC,EAAWG,UAKtCC,eAAe,GAAGC,oBAAoB,KAAKC,IAAI,SAAS/N,EAAQU,EAAOJ,GAC1E,YAEA,IAAIoH,GAAc1H,EAAQ,aAEtBgO,EAAmB,MAEvBtN,GAAOJ,QAAU,WACfM,EAAE,eAAe4E,MAAM,WACrB,GAAIyI,GAAYrN,EAAE,aACdsN,EAAatN,EAAE,aAEnBqN,GAAUrC,YAAY,UACtBhL,EAAE,iBAAiBgL,YAAY,6BAE3BqC,EAAUE,SAAS,WACrBF,EAAU1F,IAAI,QAAS,IAAMyF,EAAmB,KAChDE,EAAW3F,IAAI,OAAQyF,EAAmB,OAE1CA,EAAmBE,EAAW9E,WAAWV,KAAO9H,EAAE,QAAQ+H,QAAU,IACpEsF,EAAU1F,IAAI,QAAS,GACvB2F,EAAW3F,IAAI,OAAQ,IAGzBb,EAAYtE,mBAAmBqG,cAIhCa,YAAY,IAAI8D,IAAI,SAASpO,EAAQU,EAAOJ,GAC/C,YAEA,IAAIoH,GAAc1H,EAAQ,aACtBuN,EAASvN,EAAQ,gBACjB8L,EAAQ9L,EAAQ,WAEpBU,GAAOJ,QAAU,WAGfM,EAAE,WAAW+I,QAAQ,WACnB/I,EAAE+B,MAAM0L,WAGVzN,EAAE,cAAc4E,MAAM,WAEpB,GAAI8I,GAAQ1N,EAAE+B,MAAM4L,KAAK,YACzBD,GAAM1J,SAAS,0BAEf2I,EAAOiB,oBAAoBb,KAAK,SAAUc,GACxCH,EAAM3J,YAAY,0BAClB/D,EAAE,WAAW+D,YAAY,YACzB/D,EAAE,WAAW8L,IAAI+B,GACjB3C,EAAMiB,cAAc,kCAMxBnM,EAAE,YAAY4E,MAAM,WAClB5E,EAAE,cAAc4E,OAChB,IAAI6B,GAAMK,EAAY3E,YAAY2L,SAC9BrH,KACFsH,QAAQC,MAAMvH,GACdyE,EAAM+C,eAAexH,MAGzBzG,EAAE,cAAc4E,MAAM,WAChBkC,EAAYtE,mBAAmB0L,UACjCpH,EAAYtE,mBAAmB2L,aAE/BrH,EAAYtE,mBAAmB4L,cAGnCpO,EAAE,aAAa4E,MAAM,WACnBkC,EAAYtE,mBAAmB4L,YAC/BtH,EAAYtE,mBAAmB6L,aAEjCrO,EAAE,aAAa4E,MAAM,WACnBkC,EAAYtE,mBAAmB4L,YAC/BtH,EAAYtE,mBAAmB8L,aAKjCtO,EAAE,aAAa4E,MAAM,WACnB5E,EAAE,yBAAyB+D,YAAY,UACvC/D,EAAE,aAAagE,SAAS,UACxBhE,EAAE,qBAAqB+D,YAAY,UACnC/D,EAAE+B,MAAMiC,SAAS,YAGnBhE,EAAE,cAAc4E,MAAM,WACpB5E,EAAE,yBAAyB+D,YAAY,UACvC/D,EAAE,eAAegE,SAAS,UAC1BhE,EAAE,qBAAqB+D,YAAY,UACnC/D,EAAE+B,MAAMiC,SAAS,eAIlB0F,YAAY,EAAEuD,eAAe,GAAGb,WAAW,KAAKmC,IAAI,SAASnP,EAAQU,EAAOJ,GAC/E,YAEA,IAAIoH,GAAc1H,EAAQ,YAE1BU,GAAOJ,QAAU,WACfM,EAAE8J,QAAQjB,OAAO,WACf/B,EAAYtE,mBAAmBqG,cAIhCa,YAAY,IAAI8E,IAAI,SAASpP,EAAQU,EAAOJ,GAC/C,YAEA,IAAIoH,GAAc1H,EAAQ,UAEtB6B,EAAW7B,EAAQ,YAEnBqP,EAAiBxN,EAASwN,eAG1BnL,EAAkBlE,EAAQ,sBAC1BmE,EAAYnE,EAAQ,eAExBU,GAAOJ,QAAU,SAAUkN,EAAUC,EAAWG,GAC9C,GAAI0B,GAAQ,OACRC,EAAgB,OAChBC,EAAiB,MAErB,IAAIH,EAAe7B,EAAUC,GAC3B6B,EAAQ1O,EAAE,kBACV2O,EAAgB,GAChBC,EAAiB,oBACZ,CACLF,EAAQ1O,EAAE,mBAAqB4M,EAAW,sBAAwBC,EAAY,KAC9E,IAAIgC,GAAc/H,EAAYzE,YAAYuK,EAC1C+B,GAAgBE,EAAYvO,KAC5BsO,EAAiBC,EAAYC,KAAKjC,GAGpC7M,EAAE,oBAAoB+D,YAAY,UAClC2K,EAAM1K,SAAS,UACfhE,EAAE,aAAa4E,QAEf5E,EAAE,aAAa+O,KAAKJ,GACpB3O,EAAE,cAAc+O,KAAKH,GACrB5O,EAAE,wBAAwBgP,QAC1BhP,EAAE,yBAAyBgP,QAC3BhP,EAAE,gBAAgB+O,KAAK,IAEvBjI,EAAYnG,gBAAgB,MAC5BmG,EAAY3E,YAAY8M,cAExB,IAAI7O,GAAQ4M,EAAK5M,YAGV4M,GAAK5M,MAEZkD,EAAgB0J,GAChBzJ,EAAUqJ,EAAUC,EAAWzM,MAG9B8O,SAAS,EAAElM,WAAW,GAAGW,qBAAqB,GAAGC,eAAe,KAAKuL,IAAI,SAAS/P,EAAQU,EAAOJ,GACpG,YAEA,IAAIoH,GAAc1H,EAAQ,UACtBuN,EAASvN,EAAQ,aACjBgE,EAAgBhE,EAAQ,oBAExBW,EAAKC,EACLwB,EAAOzB,EAAGyB,KAGV4N,EAA4B,SAAmCxC,EAAUyC,EAASxC,GACpF,GAAIyC,GAAatP,EAAE,oCAAoCwJ,OAAO6F,EAAQxC,IAAY7C,KAAK,iBAAkB6C,GAAW7C,KAAK,gBAAiB4C,GAAUhI,MAAM,WACxJ+H,EAAOG,cAAcF,EAAUC,GAAWE,KAAK,SAAUC,GACvD5J,EAAcwJ,EAAUC,EAAWG,MAIvChN,GAAE,SAASwJ,OAAO8F,IAGhBC,EAAmB,SAA0B3C,GAC/C,GAAI4C,GAAwB1I,EAAYzE,YAAYuK,GAEhD6C,EAAeD,EAAsBlP,KACrCoP,EAAkBF,EAAsBV,KAGxCa,EAAY3P,EAAE,6BAA6BwJ,OAAO,uCAAuCA,OAAOiG,EAEpGE,GAAU/K,MAAM,WACd5E,EAAE,mBAAqB4M,EAAW,MAAM5B,YAAY,YACpDhL,EAAE+B,MAAM4L,KAAK,QAAQ3C,YAAY,kCAGnChL,EAAE,SAASwJ,OAAOmG,GAElBnO,EAAKkO,EAAiB,SAAU7C,GAC9BuC,EAA0BxC,EAAU8C,EAAiB7C,KAIzD/M,GAAOJ,QAAU,WACf8B,EAAKsF,EAAY1E,gBAAiBmN,MAGjCL,SAAS,EAAEU,YAAY,GAAGnM,mBAAmB,KAAKoM,IAAI,SAASzQ,EAAQU,EAAOJ,GACjF,YAEA,IAAIoQ,GAA4B,kBAAX3J,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU2J,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX5J,SAAyB4J,EAAIC,cAAgB7J,OAAS,eAAkB4J,IAEtOpJ,EAAUD,MAAMC,QAChB5G,EAAKC,EACLwB,EAAOzB,EAAGyB,IAGd1B,GAAOJ,QAAU,SAAUsN,GACzB,GAAIiD,GAAajQ,EAAE,uBACnBiQ,GAAWjB,QAEXxN,EAAKwL,EAAM,SAAUkD,EAAK1J,GAEpB0J,GACFD,EAAWzG,OAAOxJ,EAAE,QAAQ+O,KAAKmB,IAGd,gBAAV1J,GACTyJ,EAAWzG,OAAOxJ,EAAE,OAAO+O,KAAKvI,IACvBG,EAAQH,IACjB,WAEE,GAAI2J,GAAMnQ,EAAE,OACZiQ,GAAWzG,OAAO2G,GAElB3J,EAAM4J,QAAQ,SAAUC,GACtBF,EAAI3G,OAAOxJ,EAAE,QAAQ+O,KAAKsB,SAG6C,YAAhD,mBAAV7J,GAAwB,YAAcsJ,EAAQtJ,MAC/D,WAEE,GAAI2J,GAAMnQ,EAAE,OACZiQ,GAAWzG,OAAO2G,GAElB3O,EAAKgF,EAAO,SAAU8J,GACpBH,EAAI3G,OAAOxJ,EAAE,QAAQwJ,OAAOxJ,EAAE,YAAY+O,KAAKuB,IAAO9G,OAAO,IAAMhD,EAAM8J,kBAO7EC,IAAI,SAASnR,EAAQU,EAAOJ,GAClC,YAEA,IAAIiN,GAASvN,EAAQ,aAEjBW,EAAKC,EACLwB,EAAOzB,EAAGyB,KAGVgP,EAAe,SAAsB5D,EAAUC,EAAWjM,EAAM6P,GAClE,GAAIC,GAAQ1Q,EAAE,YAAYwJ,OAAO5I,GAAMgE,MAAM,WAC3C+H,EAAOgE,SAAS/D,EAAUC,EAAWjM,EAAM6P,GAC3CzQ,EAAE,kCAAkC+D,YAAY,UAChD/D,EAAE+B,MAAMiC,SAAS,WAEnBhE,GAAE,yBAAyBwJ,OAAOkH,GAGpC5Q,GAAOJ,QAAU,SAAUkN,EAAUC,EAAWzM,GAC9CJ,EAAE,yBAAyBgP,QAE3BxN,EAAKpB,EAAO,SAAUQ,EAAM6P,GAC1BD,EAAa5D,EAAUC,EAAWjM,EAAM6P,KAG1CzQ,EAAE,kCAAkC4Q,QAAQhM,QAC5C5E,EAAE,yBAAyB8I,YAG1B8G,YAAY,KAAKiB,IAAI,SAASzR,EAAQU,EAAOJ,GAChD,YAIAI,GAAOJ,QAAU,WACfM,EAAE,yBAAyB4Q,QAAQhM,QACnC5E,EAAE,mCAAmC4Q,QAAQhM,cAGzCkM,IAAI,SAAS1R,EAAQU,EAAOJ,GAClC,YAEA,IAAIqR,GAAY,SAAmB/D,EAAMgE,GACvC,GAAIC,GAASjR,EAAE,qBAAuBgR,EAAO,MAAMxH,OAAOwD,EAE1DhN,GAAE,oBAAoBwJ,OAAOyH,GAC7BC,WAAW,WACTD,EAAOE,QAAQ,WACbF,EAAOG,YAER,MAGDnD,EAAiB,SAAwBxH,GAC3CsK,EAAUtK,EAAK,UAGb0F,EAAgB,SAAuB1F,GACzCsK,EAAUtK,EAAK,QAGjB3G,GAAOJ,SACLuO,eAAgBA,EAChB9B,cAAeA,QAGXkF,IAAI,SAASjS,EAAQU,EAAOJ,GAClC,YAEAI,GAAOJ,QAAU,SAAU4R,GACzB,GAAI5P,GAAS6P,IAAIC,KAAKF,EAYtB,OAVA5P,GAAO+P,YACLC,2BAA2B,EAC3BC,gBAAgB,EAChBC,0BAA0B,IAG5BlQ,EAAOmQ,SAAS,qCAChBnQ,EAAOoQ,QAAQC,QAAQ,uBACvBrQ,EAAOsQ,gBAAkBC,EAAAA,EAElBvQ,QAGHwQ,IAAI,SAAS9S,QAAQU,OAAOJ,SAClC,YAEA,IAAIoO,SAAU,QAASA,SAAQnM,cAAenC,MAE5C,IACEmC,cAAcwQ,gBACdC,KAAK5S,MACLmC,cAAc0Q,YACd,MAAO5L,KACP,MAAOA,KACP,QACA9E,cAAc2Q,sBAIdC,YAAc,SAAqB5Q,EAAe6Q,GACpD,MAAO1E,SAAQnM,EAAe6Q,IAG5BC,mBAAqB,SAA4B9Q,EAAe6Q,EAAUE,GAC5E,MAAO5E,SAAQnM,EAAe6Q,EAAW,IAAME,GAGjD5S,QAAOJ,SACL6S,YAAaA,YACbE,mBAAoBA,yBAGhBE,IAAI,SAASvT,EAAQU,EAAOJ,GAClC,YAMA,SAASoB,GAAOa,GACd,GAAIiR,GAAQ7Q,IAEZ,KAAKJ,EACH,KAAM,iDAGR4P,KAAInS,QAAQ,0BAEZ2C,KAAK8Q,WAAaC,EAAa,QAC/B/Q,KAAKgR,WAAaD,EAAa,QAI/B/Q,KAAKiR,QAAU,SAAUhG,GACvB4F,EAAMC,WAAWI,SAASjG,EAAM,KAGlCjL,KAAKmR,QAAU,SAAU1T,GACvBoT,EAAMG,WAAWE,SAASzT,EAAM,KAGlCuC,KAAKoR,WAAa,SAAUjL,GAC1B,GAAI8E,GAAO9E,EAAK8E,KACZxN,EAAO0I,EAAK1I,IAEhBoT,GAAMI,QAAQhG,GACd4F,EAAMM,QAAQ1T,IAKhBuC,KAAKqR,UAAY,WACfR,EAAMC,WAAWI,SAAS,KAG5BlR,KAAKsR,UAAY,WACfT,EAAMG,WAAWE,SAAS,KAG5BlR,KAAKkN,aAAe,WAClB2D,EAAMQ,YACNR,EAAMS,aAGRtR,KAAK+L,QAAU,WACb,GAAId,GAAO4F,EAAMC,WAAWS,WACxB9T,EAAOoT,EAAMG,WAAWO,UAC5B,OAAOC,GAASd,mBAAmB9Q,EAAeqL,EAAMxN,IAK1DuC,KAAK8Q,WAAWjJ,GAAG,SAAU,WAC3B,GAAIoD,GAAO4F,EAAMC,WAAWS,WACxBnT,EAAe2G,EAAYpG,iBAC3BP,IACF2G,EAAYtG,iBAAiBL,GAC3B6M,KAAMA,IAGVuG,EAAShB,YAAY5Q,EAAeqL,KAGtCjL,KAAKgR,WAAWnJ,GAAG,SAAU,WAC3B,GAAIpK,GAAOoT,EAAMG,WAAWO,WACxBnT,EAAe2G,EAAYpG,iBAC3BP,IACF2G,EAAYtG,iBAAiBL,GAC3BX,KAAMA,MAzEd,GAAIsH,GAAc1H,EAAQ,UACtB0T,EAAe1T,EAAQ,YACvBmU,EAAWnU,EAAQ,aA6EvBU,GAAOJ,QAAUoB,IAEdoO,SAAS,EAAEsE,WAAW,GAAGC,aAAa,KAAKC,IAAI,SAAStU,EAAQU,EAAOJ,GAC1E,YAEA,IAAIiU,GAAOvU,EAAQ,QACf0H,EAAc1H,EAAQ,SACtBwU,EAAiBxU,EAAQ,qBACzB4B,EAAM5B,EAAQ,SACduN,EAASvN,EAAQ,YACjByU,EAAUzU,EAAQ,oBAElB0U,EAAU1U,EAAQ,YAElBW,EAAKC,EACLC,EAASF,EAAGE,MAGhBD,GAAE+T,WACA7T,OAAO,EACP8T,SAAU,SAIZL,EAAK/J,GAAG,QAAS,SAAUqK,GACzBlG,QAAQmG,QAAO,EAAOD,KAGxBjU,EAAE,WAGA,GAAImU,GAAM,GAAIP,EACd3T,IAAO,EAAM6G,EAAaqN,GAG1BlU,GAAO,EAAM6J,OAAQgK,GAErBnH,EAAOyH,iBAAiBrH,KAAK,SAAUC,GACrClG,EAAYxE,cAAc0K,GAC1BhM,EAAIqC,gBAIJ,IAAIgR,GAASR,EAAQS,mBAAmB,gBACpCD,GACF1H,EAAO4H,iBAAiBF,GAAQtH,KAAK,SAAU7E,GAC7C,GAAI0E,GAAW1E,EAAK0E,SAChBC,EAAY3E,EAAK2E,UACjBG,EAAO9E,EAAK8E,IAEhBhM,GAAIoC,cAAcwJ,EAAUC,EAAWG,KAGzChM,EAAIwC,2BAKPgR,QAAQ,EAAEC,oBAAoB,EAAEC,QAAQ,EAAEC,WAAW,GAAGC,WAAW,GAAGC,mBAAmB,GAAGC,KAAO,KAAKC,IAAI,SAAS3V,EAAQU,EAAOJ,GACvI,YAQA,SAASsV,KACL,MAAOC,GAAcC,MAAMnT,KAAMoT,WAPrC,GAAIlU,GAAW7B,EAAQ,aAEnBgW,EAAUnU,EAASmU,QACnBH,EAAgBhU,EAASgU,aAO7BD,GAAcrS,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAOJ,EAActS,YACjEqN,YAAagF,EACbM,QAAS,SAAiBC,EAAKC,GAE3B,MADAP,GAActS,UAAU2S,QAAQ3V,KAAKoC,KAAM,EAAGwT,EAAKC,GAC5CzT,MAEX0T,UAAW,SAAmBF,GAE1B,MADAN,GAActS,UAAU8S,UAAU9V,KAAKoC,KAAM,EAAGwT,GACzCxT,MAEX2T,QAAS,SAAiB1W,EAAGJ,GAMzB,MALUoH,UAANpH,EACAqW,EAActS,UAAU+S,QAAQ/V,KAAKoC,KAAM,EAAG/C,GAE9CiW,EAActS,UAAUgT,WAAWhW,KAAKoC,KAAM,EAAG/C,EAAGJ,GAEjDmD,MAEX6T,UAAW,SAAmB5W,EAAGJ,GAM7B,MALUoH,UAANpH,EACAqW,EAActS,UAAUiT,UAAUjW,KAAKoC,KAAM,EAAG/C,GAEhDiW,EAActS,UAAUkT,aAAalW,KAAKoC,KAAM,EAAG/C,EAAGJ,GAEnDmD,MAEXiR,QAAS,SAAiB8C,GACtB,MAAOb,GAActS,UAAUqQ,QAAQrT,KAAKoC,MAAO+T,MAI3D,IAAIC,IACAC,OAAQ,SAAgBC,EAAGtN,EAAKC,GAC5B,MAAOwM,GAAQY,OAAO,EAAGC,EAAGtN,EAAKC,GAAK,IAE1CsN,aAAc,SAAsBD,EAAGtN,EAAKC,GACxC,MAAOwM,GAAQc,aAAa,EAAGD,EAAGtN,EAAKC,GAAK,IAIpD9I,GAAOJ,SACHqW,QAASA,EACTf,cAAeA,KAGhBmB,YAAY,KAAKC,IAAI,SAAShX,EAAQU,EAAOJ,GAChD,YASA,SAASuV,KACL,MAAIoB,GAAOnB,MAAMnT,KAAMoT,YACnBF,EAActS,UAAUF,KAAK9C,KAAKoC,OAC3B,IAEJ,EAZX,GAAIsU,GAASjX,EAAQ,YAEjB6B,EAAW7B,EAAQ,0BAEnBkX,EAAerV,EAASqV,YAW5BrB,GAActS,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAOgB,EAAO1T,YAC1DqN,YAAaiF,EACbxS,KAAM,WACFV,KAAKwU,OAASxU,KAAKyU,QAAQD,OAASvW,EAAE,4BACtC+B,KAAKkO,WAAWzG,OAAOzH,KAAKwU,SAEhCjB,QAAS,SAAiBtN,EAAGmB,EAAGqM,GAO5B,MANAzT,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,SACNhJ,EAAGA,EACHmB,EAAGA,EACHqM,EAAGA,IAEAzT,MAEX0T,UAAW,SAAmBzN,EAAGmB,GAM7B,MALApH,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,WACNhJ,EAAGA,EACHmB,EAAGA,IAEApH,MAEX2T,QAAS,SAAiBiB,EAAIC,EAAIC,EAAIC,GAElC,MADA/U,MAAKgV,kBAAkB,SAAU,KAAM5B,WAChCpT,MAEX4T,WAAY,SAAoB3N,EAAG4O,EAAIE,GAEnC,MADA/U,MAAKgV,kBAAkB,SAAU,MAAO5B,WACjCpT,MAEXiV,WAAY,SAAoB7N,EAAGwN,EAAIE,GAEnC,MADA9U,MAAKgV,kBAAkB,SAAU,MAAO5B,WACjCpT,MAEX6T,UAAW,SAAmBe,EAAIC,EAAIC,EAAIC,GAEtC,MADA/U,MAAKgV,kBAAkB,WAAY,KAAM5B,WAClCpT,MAEX8T,aAAc,SAAsB7N,EAAG4O,EAAIE,GAEvC,MADA/U,MAAKgV,kBAAkB,WAAY,MAAO5B,WACnCpT,MAEXkV,aAAc,SAAsB9N,EAAGwN,EAAIE,GAEvC,MADA9U,MAAKgV,kBAAkB,WAAY,MAAO5B,WACnCpT,MAEXmV,UAAW,SAAmBlP,EAAGmB,GAM7B,MALApH,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,WACNhJ,EAAGA,EACHmB,EAAGA,IAEApH,MAEXoV,aAAc,SAAsBnP,GAEhC,MADAjG,MAAKmV,UAAUlP,EAAG,IACXjG,MAEXqV,aAAc,SAAsBjO,GAEhC,MADApH,MAAKmV,UAAU,GAAI/N,GACZpH,MAEXsV,YAAa,SAAqBrP,EAAGmB,GAMjC,MALApH,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,aACNhJ,EAAGA,EACHmB,EAAGA,IAEApH,MAEXuV,eAAgB,SAAwBtP,GAEpC,MADAjG,MAAKsV,YAAYrP,EAAG,IACbjG,MAEXwV,eAAgB,SAAwBpO,GAEpC,MADApH,MAAKsV,YAAY,GAAIlO,GACdpH,MAEXgV,kBAAmB,WACf,GAAIS,GAAO9Q,MAAM/D,UAAU8U,MAAM9X,KAAKwV,WAClCnE,EAAOwG,EAAKE,QACZC,EAAOH,EAAKE,OAChBF,GAAO9Q,MAAM/D,UAAU8U,MAAM9X,KAAK6X,EAAKE,QACvC,IAAIE,EACJ,QAAQD,GACJ,IAAK,MACDC,GACI5P,EAAGwP,EAAK,GACRZ,GAAIY,EAAK,GACTV,GAAIU,EAAK,GAEb,MACJ,KAAK,MACDI,GACIzO,EAAGqO,EAAK,GACRb,GAAIa,EAAK,GACTX,GAAIW,EAAK,GAEb,MACJ,SAEQI,EADY5R,SAAZwR,EAAK,IAAgCxR,SAAZwR,EAAK,IAE1BxP,EAAGwP,EAAK,GACRrO,EAAGqO,EAAK,KAIRb,GAAIa,EAAK,GACTZ,GAAIY,EAAK,GACTX,GAAIW,EAAK,GACTV,GAAIU,EAAK,IAIzB,GAAIzL,IACAiF,KAAMA,EAEVhR,GAAEC,OAAO8L,EAAM6L,GACf7V,KAAK0U,QAAQC,SAAS3U,KAAKyU,QAASzK,IAExC8L,YAAa,SAAqB9L,EAAM+L,GACpC,OAAQ/L,EAAKiF,MACT,IAAK,SACD,GAAe,IAAXjF,EAAKyJ,GAAWzJ,EAAKyJ,EAAG,CACxB,GAAIuC,GAAOhW,KAAKwU,OAAO5I,KAAK,aAAaqK,GAAGjM,EAAK/D,GAC7CiQ,EAAOF,EAAKpK,KAAK,aAAaqK,GAAGjM,EAAK5C,EAC1C8O,GAAKC,KAAK5B,EAAavK,EAAKyJ,IAEpC,IAAK,WACL,IAAK,SACL,IAAK,WACD,GAAI2C,GAA0B,UAAbpM,EAAKiF,MAAiC,YAAbjF,EAAKiF,KAAqBjP,KAAKoW,WAAWC,SAAWrW,KAAKoW,WAAWE,SAC3GrU,EAAwB,UAAb+H,EAAKiF,MAAiC,UAAbjF,EAAKiF,KACzC2F,EAAK5K,EAAK4K,GACVC,EAAK7K,EAAK6K,GACVC,EAAK9K,EAAK8K,GACVC,EAAK/K,EAAK+K,EACH9Q,UAAP2Q,IAAkBA,EAAK5K,EAAK/D,GACrBhC,SAAP4Q,IAAkBA,EAAK7K,EAAK5C,GACrBnD,SAAP6Q,IAAkBA,EAAK9K,EAAK/D,GACrBhC,SAAP8Q,IAAkBA,EAAK/K,EAAK5C,GAChCpH,KAAKuW,WAAW3B,EAAIC,EAAIC,EAAIC,EAAIqB,EAAYnU,EAC5C,MACJ,KAAK,WACDjC,KAAKwW,WAAWxM,EAAK/D,EAAG+D,EAAK5C,GAC7BpH,KAAKyW,SAASzM,EAAK/D,EAAG+D,EAAK5C,EAC3B,MACJ,KAAK,aACDpH,KAAKwW,WAAWxM,EAAK/D,EAAG+D,EAAK5C,EAC7B,MACJ,SACIkN,EAAO1T,UAAUkV,YAAYlY,KAAKoC,KAAMgK,EAAM+L,KAG1D9E,QAAS,SAAiB8C,GAMtB,GALA/T,KAAK0W,MAAQ1W,KAAK2W,MAAQ,EAC1B3W,KAAK4W,SAAW,EAChB5W,KAAK6W,SAAW,EAChB7W,KAAK8W,SAAW,GAEZxC,EAAO1T,UAAUqQ,QAAQkC,MAAMnT,KAAMoT,WAMrC,MALApT,MAAKwU,OAAO5I,KAAK,aAAanM,KAAK,SAAUnC,GACzCW,EAAE+B,MAAM4L,KAAK,aAAanM,KAAK,SAAUsX,GACrC9Y,EAAE+B,MAAMmW,KAAK5B,EAAaR,EAAEzW,GAAGyZ,UAGhC,CAGX/W,MAAKwU,OAAOvH,OACZ,KAAK,GAAI3P,GAAI,EAAGA,EAAIyW,EAAElW,OAAQP,IAAK,CAC/B,GAAI0Y,GAAO/X,EAAE,yBACb+B,MAAKwU,OAAO/M,OAAOuO,EACnB,KAAK,GAAIe,GAAI,EAAGA,EAAIhD,EAAEzW,GAAGO,OAAQkZ,IAAK,CAClC,GAAIb,GAAOjY,EAAE,0BAA0B2H,IAAI5F,KAAKgX,cAAcb,KAAK5B,EAAaR,EAAEzW,GAAGyZ,IACrFf,GAAKvO,OAAOyO,IAKpB,MAFAlW,MAAK8G,UAEE,GAEXA,OAAQ,WACJwN,EAAO1T,UAAUkG,OAAOlJ,KAAKoC,MAE7BA,KAAKiX,WAETC,MAAO,WACH5C,EAAO1T,UAAUsW,MAAMtZ,KAAKoC,MAE5BA,KAAKmX,aACLnX,KAAKoX,iBAETJ,WAAY,WACR,OACIK,QAASrX,KAAK6W,SAASS,QAAQ,GAAK,MAAQtX,KAAK4W,SAASU,QAAQ,GAAK,KACvEC,YAAavX,KAAK8W,SAASQ,QAAQ,GAAK,OAGhDL,QAAS,WACL3C,EAAO1T,UAAUqW,QAAQrZ,KAAKoC,KAE9B,IAAIsF,GAAUtF,KAAKwU,OAAOjP,SACtBM,EAAMP,EAAQ4B,SAAW,EAAIlH,KAAKwU,OAAOtN,SAAW,EAAIlH,KAAK2W,MAC7D5Q,EAAOT,EAAQU,QAAU,EAAIhG,KAAKwU,OAAOxO,QAAU,EAAIhG,KAAK0W,KAChE1W,MAAKwU,OAAO5O,IAAI,aAAcC,GAC9B7F,KAAKwU,OAAO5O,IAAI,cAAeG,IAEnCG,UAAW,SAAmBrJ,GAC1ByX,EAAO1T,UAAUsF,UAAUtI,KAAKoC,KAAMnD,GAEtCmD,KAAKwX,MAAQ3a,EAAEuJ,MACfpG,KAAKyX,MAAQ5a,EAAEyK,MACftH,KAAK0F,UAAW,GAEpBY,UAAW,SAAmBzJ,GAC1ByX,EAAO1T,UAAU0F,UAAU1I,KAAKoC,KAAMnD,GAElCmD,KAAK0F,WACL1F,KAAK0W,OAAS7Z,EAAEuJ,MAAQpG,KAAKwX,MAC7BxX,KAAK2W,OAAS9Z,EAAEyK,MAAQtH,KAAKyX,MAC7BzX,KAAKwX,MAAQ3a,EAAEuJ,MACfpG,KAAKyX,MAAQ5a,EAAEyK,MACftH,KAAKiX,YAGbjQ,QAAS,SAAiBnK,GACtByX,EAAO1T,UAAUoG,QAAQpJ,KAAKoC,KAAMnD,GAEpCmD,KAAK0F,UAAW,GAEpB+E,WAAY,SAAoB5N,GAC5ByX,EAAO1T,UAAU6J,WAAW7M,KAAKoC,KAAMnD,GAEvCA,EAAEiL,iBACFjL,EAAIA,EAAE6a,aACN,IAAIC,GAAyB1T,SAAjBpH,EAAE+a,YAA4B/a,EAAE+a,YAA2B3T,SAAbpH,EAAEgb,SAAyBhb,EAAEgb,OACnFC,EAAS,KACTC,EAAQJ,EAAQ,EAAI,EAAIG,EAASA,CACjC9X,MAAK8W,SAAW,GAAa,EAARiB,GACrB/X,KAAK8W,SAAW,IAAMiB,EAAQ,IAClC/X,KAAK6W,UAAYkB,EACjB/X,KAAK4W,UAAYmB,EACjB/X,KAAK8W,UAAYiB,EACjB/X,KAAKwU,OAAO5I,KAAK,aAAahG,IAAI5F,KAAKgX,cACvChX,KAAKiX,YAETV,WAAY,SAAoB3B,EAAIC,EAAIC,EAAIC,EAAIqB,EAAYnU,GACxD,IAAK,GAAI3E,GAAIsX,EAASE,GAALxX,EAASA,IAEtB,IAAK,GADD0Y,GAAOhW,KAAKwU,OAAO5I,KAAK,aAAaqK,GAAG3Y,GACnCyZ,EAAIlC,EAASE,GAALgC,EAASA,IAAK,CAC3B,GAAIb,GAAOF,EAAKpK,KAAK,aAAaqK,GAAGc,EACjC9U,GAAUiU,EAAKjU,SAASmU,GAAiBF,EAAKlU,YAAYoU,KAI1Ee,WAAY,WACRnX,KAAKwU,OAAO5I,KAAK,aAAa5J,YAAY6C,OAAOmT,KAAKhY,KAAKoW,YAAY6B,KAAK,OAEhF7B,YACIC,SAAU,WACVC,SAAU,YAEdG,SAAU,SAAkBxQ,EAAGmB,GAC3BpH,KAAKwU,OAAO5I,KAAK,aAAanM,KAAK,SAAUnC,GACzC,GAAI0Y,GAAO/X,EAAE+B,KACT1C,IAAK2I,GACL+P,EAAKkC,MAAMja,EAAE,gCAAgCgK,KAAK,WAAY3K,IAElE0Y,EAAKpK,KAAK,aAAanM,KAAK,SAAUsX,GAClC,GAAIb,GAAOjY,EAAE+B,KACT+W,IAAK3P,GACL8O,EAAKgC,MAAMja,EAAE,gCAAgCgK,KAAK,WAAY8O,SAK9EP,WAAY,SAAoBvQ,EAAGmB,GAC/BpH,KAAKwU,OAAO5I,KAAK,aAAe3F,EAAI,KAAKoJ,SACzCrP,KAAKwU,OAAO5I,KAAK,aAAexE,EAAI,KAAKiI,UAE7C+H,cAAe,WACXpX,KAAKwU,OAAO5I,KAAK,oCAAoCyD,WAI7D,IAAIgE,IACAY,OAAQ,SAAgBC,EAAGiE,EAAGvR,EAAKC,GAC1BqN,IAAGA,EAAI,IACPiE,IAAGA,EAAI,IACAlU,SAAR2C,IAAmBA,EAAM,GACjB3C,SAAR4C,IAAmBA,EAAM,EAE7B,KAAK,GADDkN,MACKzW,EAAI,EAAO4W,EAAJ5W,EAAOA,IAAK,CACxByW,EAAEvP,QACF,KAAK,GAAIuS,GAAI,EAAOoB,EAAJpB,EAAOA,IACnBhD,EAAEzW,GAAGkH,MAAMmC,KAAKsN,UAAYpN,EAAMD,EAAM,GAAK,GAAKA,GAG1D,MAAOmN,IAEXI,aAAc,SAAsBD,EAAGiE,EAAGvR,EAAKC,GAC3C,MAAO7G,MAAKiU,OAAOC,EAAGiE,EAAGvR,EAAKC,GAAKuR,IAAI,SAAUxU,GAC7C,MAAOA,GAAIyU,KAAK,SAAUjb,EAAGkb,GACzB,MAAOlb,GAAIkb,OAM3Bva,GAAOJ,SACH0V,QAASA,EACTH,cAAeA,KAGhBqF,yBAAyB,GAAGC,WAAW,KAAKC,IAAI,SAASpb,EAAQU,EAAOJ,GAC3E,YAIA,SAAS+a,KACL,MAAIpE,GAAOnB,MAAMnT,KAAMoT,YACnBsF,EAAY9X,UAAUF,KAAK9C,KAAKoC,KAAMoT,YAC/B,IAEJ,EAPX,GAAIkB,GAASjX,EAAQ,WAUrBqb,GAAY9X,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAOgB,EAAO1T,YACxDqN,YAAayK,EACbhY,KAAM,WACFV,KAAKsI,SAAWtI,KAAKyU,QAAQnM,SAAWrK,EAAE,uBAC1C+B,KAAKkO,WAAWzG,OAAOzH,KAAKsI,WAEhC2I,QAAS,SAAiB0H,GACtB,GAAIrE,EAAO1T,UAAUqQ,QAAQkC,MAAMnT,KAAMoT,WAAY,OAAO,CAG5D,KAAK,GADDwF,MACKtb,EAAI,EAAGA,EAAIqb,EAAE9a,OAAQP,IAC1Bsb,EAAMpU,KAAK,yBACd,IAAIyG,IACDgE,KAAM,MACNhE,MACI4N,OAAQF,EAAEP,IAAIU,QACdC,WACIC,gBAAiBJ,EACjB3N,KAAM0N,KAGd5C,SACIkD,QACIC,QACIC,OACIC,aAAa,OAMjCpZ,MAAKqZ,MAAQrZ,KAAKyU,QAAQ4E,MAAQ,GAAIC,OAAMtZ,KAAKsI,SAAU2C,IAE/DsI,QAAS,SAAiBtW,EAAGwW,GAMzB,MALAzT,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,SACNhS,EAAGA,EACHwW,EAAGA,IAEAzT,MAEX0T,UAAW,SAAmBzW,GAK1B,MAJA+C,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,WACNhS,EAAGA,IAEA+C,MAEX2T,QAAS,SAAiB1W,EAAGJ,GAMzB,MALAmD,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,SACNhS,EAAGA,EACHJ,EAAGA,IAEAmD,MAEX6T,UAAW,SAAmB5W,EAAGJ,GAM7B,MALAmD,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,WACNhS,EAAGA,EACHJ,EAAGA,IAEAmD,MAEX8V,YAAa,SAAqB9L,EAAM+L,GACpC,OAAQ/L,EAAKiF,MACT,IAAK,SACGjF,EAAKyJ,IACLzT,KAAKqZ,MAAME,OAAOtO,KAAK8N,SAAS,GAAG9N,KAAKjB,EAAK/M,GAAK+M,EAAKyJ,EACvDzT,KAAKqZ,MAAME,OAAOtO,KAAK4N,OAAO7O,EAAK/M,GAAK+M,EAAKyJ,EAAE+F,WAEvD,KAAK,WACL,IAAK,WACD,GAAIZ,GAAqB,YAAb5O,EAAKiF,MAAmC,YAAbjF,EAAKiF,KAAqB,yBAA2B,oBAChG,KAAK,SACD,GAAchL,SAAV2U,EAAqB,GAAIA,GAAQ,oBACrC,IAAe3U,SAAX+F,EAAKnN,EAAiB,IAAK,GAAIS,GAAI0M,EAAK/M,EAAGK,GAAK0M,EAAKnN,EAAGS,IACxD0C,KAAKqZ,MAAME,OAAOtO,KAAK8N,SAAS,GAAGC,gBAAgB1b,GAAKsb,MACrD5Y,MAAKqZ,MAAME,OAAOtO,KAAK8N,SAAS,GAAGC,gBAAgBhP,EAAK/M,GAAK2b,CACpE5Y,MAAKqZ,MAAMI,QACX,MACJ,SACInF,EAAO1T,UAAUkV,YAAYlY,KAAKoC,KAAMgK,EAAM+L,OAK9DhY,EAAOJ,QAAU+a,IAEdF,WAAW,KAAKkB,IAAI,SAASrc,EAAQU,EAAOJ,GAC/C,YAQA,SAASgc,KACL,MAAIC,GAAoBzG,MAAMnT,KAAMoT,YAChCuG,EAAuB/Y,UAAUF,KAAK9C,KAAKoC,OACpC,IAEJ,EAXX,GAAId,GAAW7B,EAAQ,oBAGnBuc,GADgB1a,EAAS2a,cACH3a,EAAS0a,oBAWnCD,GAAuB/Y,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAOsG,EAAoBhZ,YAChFqN,YAAa0L,EACbjZ,KAAM,WACF,GAAIoZ,GAAS9Z,IAEbA,MAAK/C,EAAE8c,UACHC,gBAAiB,MACjBC,aAAc,SAAsBC,EAAMC,EAAQC,EAAQC,EAASN,GAC/D,GAAInB,GAAQkB,EAAOQ,SAASJ,EAAMC,EAAQC,EAAQL,EAClDD,GAAOS,SAASL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAIlE9I,QAAS,SAAiB0H,GACtB,GAAIrE,OAAO1T,UAAUqQ,QAAQkC,MAAMnT,KAAMoT,WAAY,OAAO,CAE5DpT,MAAKwa,MAAMtD,OAGX,KAAK,GAFDuD,MACAC,KACKpd,EAAI,EAAGA,EAAIqb,EAAE9a,OAAQP,IAC1Bmd,EAAMjW,MACF+K,GAAIvP,KAAKjD,EAAEO,GACX2I,EAAG0S,EAAErb,GAAG,GACR8J,EAAGuR,EAAErb,GAAG,GACRqd,MAAO,GAAKrd,EACZsd,KAAM,EACNhC,MAAO5Y,KAAK4Y,MAAL5Y,YAcf,OAZCA,MAAKwa,MAAMK,MACRJ,MAAOA,EACPC,MAAOA,IAEX1a,KAAK/C,EAAE6d,OAAOC,MACV9U,EAAG,EACHmB,EAAG,EACH4T,MAAO,EACPjD,MAAO,IAEX/X,KAAKiX,WAEE,GAEXnB,YAAa,SAAqB9L,EAAM+L,GACpC,OAAQ/L,EAAKiF,MACT,IAAK,QACL,IAAK,QACD,GAAIgM,GAAqB,SAAbjR,EAAKiF,KACbiM,EAAalb,KAAKwa,MAAMC,MAAMza,KAAKjD,EAAEiN,EAAKoQ,SAC1CxB,EAAQqC,EAAQjb,KAAK4Y,MAAMuC,QAAUnb,KAAK4Y,MAAM7S,IAEpD,IADAmV,EAAWtC,MAAQA,EACC3U,SAAhB+F,EAAKmQ,OAAsB,CAC3B,GAAIiB,GAASpb,KAAKnD,EAAEmN,EAAKmQ,OAAQnQ,EAAKoQ,OACtC,IAAIpa,KAAKwa,MAAME,MAAMU,GAAS,CAC1B,GAAIlB,GAAOla,KAAKwa,MAAME,MAAMU,EAC5BlB,GAAKtB,MAAQA,EACb5Y,KAAKwa,MAAMa,SAASD,GAAQE,QAAQpB,OAEpCla,MAAKwa,MAAMc,SACP/L,GAAIvP,KAAKnD,EAAEmN,EAAKoQ,OAAQpQ,EAAKmQ,QAC7BA,OAAQna,KAAKjD,EAAEiN,EAAKmQ,QACpBC,OAAQpa,KAAKjD,EAAEiN,EAAKoQ,QACpBxB,MAAOA,EACPgC,KAAM,IAIlB,GAAI5a,KAAKub,UAAW,CAChB,GAAIpB,GAASnQ,EAAKmQ,MACHlW,UAAXkW,IAAsBA,EAAS,IACnCna,KAAKub,UAAUC,MAAMP,EAAQd,EAAS,OAASnQ,EAAKoQ,OAASD,EAAS,OAASnQ,EAAKoQ,QAExF,KACJ,SACI9F,OAAO1T,UAAUkV,YAAYlY,KAAKoC,KAAMgK,EAAM+L,KAG1DlZ,EAAG,SAAW4e,EAAIC,GACd,GAAID,EAAKC,EAAI,CACT,GAAIC,GAAOF,CACXA,GAAKC,EACLA,EAAKC,EAET,MAAO,IAAMF,EAAK,IAAMC,GAE5BE,YAAa,SAAqBC,EAAMxB,EAASN,EAAUzV,GACvD,GAAIwV,GAAS9Z,IAEbqa,GAAQyB,aAAa,EAAG,GACxB,IAAIC,GAAUF,EAAKtM,GAAGyM,UAAU,EAChChc,MAAKwa,MAAME,QAAQrM,QAAQ,SAAU6L,GACjC,GAAI+B,GAAO/B,EAAK3K,GAAGyM,UAAU,GAAGE,MAAM,IACtC,IAAID,EAAK,IAAMF,EAAS,CACpB,GAAInD,GAAQ,OACRuB,EAAS0B,EACTzB,EAASN,EAAOU,MAAMC,MAAM,IAAMwB,EAAK,GAC3CnC,GAAOS,SAASL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAClDzV,GAAMA,EAAK4V,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAClD,IAAIkC,EAAK,IAAMF,EAAS,CAC3B,GAAInD,GAAQ,OACRuB,EAASL,EAAOU,MAAMC,MAAM,IAAMwB,EAAK,IACvC7B,EAASyB,CACb/B,GAAOS,SAASL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAClDzV,GAAMA,EAAK4V,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAIjEQ,SAAU,SAAkBL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAC9D,GAAIoC,GAASpC,EAAS,WAAa,GAC/Ba,EAAOV,EAAKiC,EAAS,SAAW,CAEpC9B,GAAQ+B,YAAcxD,EACtByB,EAAQgC,UAAYzB,EACpBP,EAAQiC,YACRjC,EAAQkC,OAAOpC,EAAOgC,EAAS,KAAMhC,EAAOgC,EAAS,MACrD9B,EAAQmC,OAAOpC,EAAO+B,EAAS,KAAM/B,EAAO+B,EAAS,MACrD9B,EAAQoC,WAIhB,IAAIC,IACAzI,OAAQ,SAAgBC,EAAGtN,EAAKC,GACvBqN,IAAGA,EAAI,GACPtN,IAAKA,EAAM,GACXC,IAAKA,EAAM,GAEhB,KAAK,GADD8R,GAAI,GAAIhU,OAAMuP,GACT5W,EAAI,EAAO4W,EAAJ5W,EAAOA,IACnBqb,EAAErb,GAAK,GAAIqH,OAAM,EACpB,KAAK,GAAIrH,GAAI,EAAO4W,EAAJ5W,EAAOA,IACpB,IAAK,GAAIyZ,GAAI,EAAGA,EAAI4B,EAAErb,GAAGO,OAAQkZ,IAC7B4B,EAAErb,GAAGyZ,IAAMpQ,KAAKsN,UAAYpN,EAAMD,EAAM,GAAK,GAAKA,CAEzD,OAAO+R,IAIhB5a,GAAOJ,SACH+e,iBAAkBA,EAClB/C,uBAAwBA,KAGzBgD,mBAAmB,KAAKC,IAAI,SAASvf,EAAQU,EAAOJ,GACvD,YAIA,SAASic,KACL,MAAItF,GAAOnB,MAAMnT,KAAMoT,YACnBwG,EAAoBhZ,UAAUF,KAAK9C,KAAKoC,OACjC,IAEJ,EAPX,GAAIsU,GAASjX,EAAQ,WAUrBuc,GAAoBhZ,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAOgB,EAAO1T,YAChEqN,YAAa2L,EACblZ,KAAM,WACF,GAAIoZ,GAAS9Z,IAEbA,MAAK/C,EAAI+C,KAAKyU,QAAQxX,EAAI,GAAI4f,QAC1BC,UACIC,UAAW/c,KAAKkO,WAAW,GAC3Be,KAAM,UAEV8K,UACIiD,aAAc,EACdhD,gBAAiB,QACjBiD,YAAa,IACbC,eAAgB,EAChBC,KAAM,SACNC,kBAAmB,OACnBC,QAAS,GACTC,QAAS,IACTC,YAAY,EACZC,YAAa,GACbC,YAAa,GACbC,UAAW,eACXC,eAAgB,IAChBC,cAAe,SAAuB/B,EAAMxB,EAASN,GACjDD,EAAO+D,UAAUhC,EAAMxB,EAASN,IAEpC+D,cAAe,SAAuBjC,EAAMxB,EAASN,EAAUzV,GAC3DwV,EAAO8B,YAAYC,EAAMxB,EAASN,EAAUzV,IAEhDyZ,eAAgB,SAAwB7D,EAAMC,EAAQC,EAAQC,EAASN,GACnE,GAAInB,GAAQkB,EAAOQ,SAASJ,EAAMC,EAAQC,EAAQL,EAClDD,GAAOkE,UAAU9D,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAInE8C,MAAMoB,QAAQC,UAAUle,KAAK/C,EAAG+C,KAAK/C,EAAEkhB,UAAU,IACjDne,KAAKwa,MAAQxa,KAAKyU,QAAQ+F,MAAQxa,KAAK/C,EAAEud,OAE7C4D,aAAc,SAAsBC,EAAGC,GAKnC,MAJAte,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,cACNmE,UAAWA,YAERpT,MAEXue,OAAQ,SAAgBnE,EAAQD,GAM5B,MALAna,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,QACNmL,OAAQA,EACRD,OAAQA,IAELna,MAEXwe,OAAQ,SAAgBpE,EAAQD,GAM5B,MALAna,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,QACNmL,OAAQA,EACRD,OAAQA,IAELna,MAEX8V,YAAa,SAAqB9L,EAAM+L,GACpC,OAAQ/L,EAAKiF,MACT,IAAK,cACDjP,KAAKye,YAAYtL,MAAMnT,KAAMgK,EAAKoJ,UAClC,MACJ,KAAK,QACL,IAAK,QACD,GAAI6H,GAAqB,SAAbjR,EAAKiF,KACbiM,EAAalb,KAAKwa,MAAMC,MAAMza,KAAKjD,EAAEiN,EAAKoQ,SAC1CxB,EAAQqC,EAAQjb,KAAK4Y,MAAMuC,QAAUnb,KAAK4Y,MAAM7S,IAEpD,IADAmV,EAAWtC,MAAQA,EACC3U,SAAhB+F,EAAKmQ,OAAsB,CAC3B,GAAIiB,GAASpb,KAAKnD,EAAEmN,EAAKmQ,OAAQnQ,EAAKoQ,QAClCF,EAAOla,KAAKwa,MAAME,MAAMU,EAC5BlB,GAAKtB,MAAQA,EACb5Y,KAAKwa,MAAMa,SAASD,GAAQE,QAAQpB,GAExC,GAAIla,KAAKub,UAAW,CAChB,GAAIpB,GAASnQ,EAAKmQ,MACHlW,UAAXkW,IAAsBA,EAAS,IACnCna,KAAKub,UAAUC,MAAMP,EAAQd,EAAS,OAASnQ,EAAKoQ,OAASD,EAAS,OAASnQ,EAAKoQ,QAExF,KACJ,SACI9F,EAAO1T,UAAUkV,YAAYlY,KAAKoC,KAAMgK,EAAM+L,KAG1D0I,YAAa,SAAqBJ,EAAGC,GACjC,GAAIxE,GAAS9Z,IAEbse,GAAOA,GAAQ,CACf,IAAII,GAAW,GAEXC,EAAM,GAAIha,OAAM0Z,EAAExgB,QAClB+gB,EAAW,QAASA,GAAS/C,EAAMgD,GACnC,GAAIF,EAAI9C,GAAO,KAAM,0DACrB8C,GAAI9C,IAAQ,EACGgD,EAAXH,IAAkBA,EAAWG,EACjC,KAAK,GAAIvhB,GAAI,EAAGA,EAAI+gB,EAAExC,GAAMhe,OAAQP,IAC5B+gB,EAAExC,GAAMve,IAAIshB,EAASthB,EAAGuhB,EAAQ,GAK5C,IAFAD,EAASN,EAAM,GAEXte,KAAKiR,QAAQkC,MAAMnT,KAAMoT,WAAY,OAAO,CAEhD,IAAI0L,GAAQ,SAAejD,EAAM5V,EAAGmB,GAChC,GAAIuU,GAAO7B,EAAOU,MAAMC,MAAMX,EAAO/c,EAAE8e,GACvCF,GAAK1V,EAAIA,EACT0V,EAAKvU,EAAIA,GAGT2X,EAAO,GAAKL,EAAW,GACvBM,EAAM,QAASA,GAAInD,EAAMgD,EAAOhZ,EAAKC,GACrCgZ,EAAMjD,EAAMhW,EAAMC,EAAQ+Y,EAAQE,EAElC,KAAK,GADDtW,GAAW,EACNnL,EAAI,EAAGA,EAAI+gB,EAAExC,GAAMhe,OAAQP,IAC5B+gB,EAAExC,GAAMve,IAAImL,GAIpB,KAAK,GAFDwW,IAAQnZ,EAASD,GAAO4C,EACxByW,EAAM,EACD5hB,EAAI,EAAGA,EAAI+gB,EAAExC,GAAMhe,OAAQP,IAC5B+gB,EAAExC,GAAMve,IAAI0hB,EAAI1hB,EAAGuhB,EAAQ,EAAGhZ,EAAMoZ,EAAOC,EAAKrZ,EAAMoZ,IAASC,GAG3EF,GAAIV,EAAM,EAAG,EAAG,GAEhBte,KAAKiX,WAEThG,QAAS,SAAiBoN,GACtB,GAAI/J,EAAO1T,UAAUqQ,QAAQkC,MAAMnT,KAAMoT,WAAY,OAAO,CAE5DpT,MAAKwa,MAAMtD,OAKX,KAAK,GAJDuD,MACAC,KACAyE,EAAY,EAAIxY,KAAKyY,GAAKf,EAAExgB,OAC5BwhB,EAAe,EACV/hB,EAAI,EAAGA,EAAI+gB,EAAExgB,OAAQP,IAAK,CAC/B+hB,GAAgBF,EAChB1E,EAAMjW,MACF+K,GAAIvP,KAAKjD,EAAEO,GACXqd,MAAO,GAAKrd,EACZ2I,EAAG,GAAKU,KAAK2Y,IAAID,GAAgB,EACjCjY,EAAG,GAAKT,KAAK4Y,IAAIF,GAAgB,EACjCzE,KAAM,EACNhC,MAAO5Y,KAAK4Y,MAAL5Y,YAEX,KAAK,GAAI+W,GAAI,EAAGA,EAAIsH,EAAE/gB,GAAGO,OAAQkZ,IACzBsH,EAAE/gB,GAAGyZ,IACL2D,EAAMlW,MACF+K,GAAIvP,KAAKnD,EAAES,EAAGyZ,GACdoD,OAAQna,KAAKjD,EAAEO,GACf8c,OAAQpa,KAAKjD,EAAEga,GACf6B,MAAO5Y,KAAK4Y,MAAL5Y,WACP4a,KAAM,IAkBtB,MAZA5a,MAAKwa,MAAMK,MACPJ,MAAOA,EACPC,MAAOA,IAEX1a,KAAK/C,EAAE6d,OAAOC,MACV9U,EAAG,EACHmB,EAAG,EACH4T,MAAO,EACPjD,MAAO,IAEX/X,KAAKiX,WAEE,GAEXnQ,OAAQ,WACJwN,EAAO1T,UAAUkG,OAAOlJ,KAAKoC,MAE7BA,KAAK/C,EAAEkhB,UAAU,GAAGrX,SACpB9G,KAAKiX,WAETA,QAAS,WACL3C,EAAO1T,UAAUqW,QAAQrZ,KAAKoC,MAE9BA,KAAK/C,EAAEga,WAEXC,MAAO,WACH5C,EAAO1T,UAAUsW,MAAMtZ,KAAKoC,MAE5BA,KAAKwf,mBAET5G,OACIuC,QAAS,OACTpV,KAAM,OACN0Z,UAAS,QAEbD,gBAAiB,WACb,GAAI1F,GAAS9Z,IAEbA,MAAKwa,MAAMC,QAAQpM,QAAQ,SAAUwN,GACjCA,EAAKjD,MAAQkB,EAAOlB,MAAPkB,aAEjB9Z,KAAKwa,MAAME,QAAQrM,QAAQ,SAAU6L,GACjCA,EAAKtB,MAAQkB,EAAOlB,MAAPkB,cAGrB/c,EAAG,SAAW0W,GACV,MAAO,IAAMA,GAEjB5W,EAAG,SAAW4e,EAAIC,GACd,MAAO,IAAMD,EAAK,IAAMC,GAE5BpB,SAAU,SAAkBJ,EAAMC,EAAQC,EAAQL,GAC9C,GAAInB,GAAQsB,EAAKtB,MACb8G,EAAY3F,EAAS,aACrB4F,EAAmB5F,EAAS,oBAC5B6F,EAAmB7F,EAAS,mBAChC,KAAKnB,EAAO,OAAQ8G,GAChB,IAAK,SACD9G,EAAQuB,EAAOvB,OAAS+G,CACxB,MACJ,KAAK,SACD/G,EAAQwB,EAAOxB,OAAS+G,CACxB,MACJ,SACI/G,EAAQgH,EAIhB,MAAOhH,IAEXiF,UAAW,SAAmBhC,EAAMxB,EAASN,GACzC,GAAIjD,GACAqF,EAASpC,EAAS,WAAa,GAC/Ba,EAAOiB,EAAKM,EAAS,OAErBvB,GAAOb,EAAS,mBAEf8B,EAAKlB,OAA+B,gBAAfkB,GAAKlB,QAE/B7D,EAAqC,UAA1BiD,EAAS,aAA2BA,EAAS,oBAAsBA,EAAS,kBAAoBa,EAE3GP,EAAQ8C,MAAQpD,EAAS,aAAeA,EAAS,aAAe,IAAM,IAAMjD,EAAW,MAAQiD,EAAS,QACxGM,EAAQwF,UAAuC,SAA3B9F,EAAS,cAA2B8B,EAAKjD,OAASmB,EAAS,oBAAsBA,EAAS,qBAE9GM,EAAQyF,UAAY,SACpBzF,EAAQ0F,SAASlE,EAAKlB,MAAOhU,KAAKqZ,MAAMnE,EAAKM,EAAS,MAAOxV,KAAKqZ,MAAMnE,EAAKM,EAAS,KAAOrF,EAAW,MAE5GkH,UAAW,SAAmB9D,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAChE,GAAIoC,GAASpC,EAAS,WAAa,GAC/Ba,EAAOV,EAAKiC,EAAS,SAAW,EAChC8D,EAAQ7F,EAAO+B,EAAS,QACxB+D,EAAK/F,EAAOgC,EAAS,KACrBgE,EAAKhG,EAAOgC,EAAS,KACrBiE,EAAKhG,EAAO+B,EAAS,KACrBkE,EAAKjG,EAAO+B,EAAS,KACrBnB,EAAQrU,KAAK2Z,MAAMD,EAAKF,EAAIC,EAAKF,GACjCK,EAAO,CACXL,IAAMvZ,KAAK2Y,IAAItE,GAASuF,EACxBH,GAAMzZ,KAAK2Y,IAAItE,GAASuF,EACxBJ,IAAOxZ,KAAK4Y,IAAIvE,GAASuF,EACzBF,IAAO1Z,KAAK4Y,IAAIvE,GAASuF,CACzB,IAAIC,GAAQ7Z,KAAKE,IAAW,IAAP+T,EAAYb,EAAS,iBACtC0G,EAAI9Z,KAAK+Z,KAAK/Z,KAAKga,IAAIP,EAAKF,EAAI,GAAKvZ,KAAKga,IAAIN,EAAKF,EAAI,IACvDS,EAAKV,GAAME,EAAKF,IAAOO,EAAID,EAAQP,GAASQ,EAC5CI,EAAKV,GAAME,EAAKF,IAAOM,EAAID,EAAQP,GAASQ,EAC5CK,GAAMV,EAAKF,GAAMM,EAAQC,EACzBM,GAAMV,EAAKF,GAAMK,EAAQC,CAE7BpG,GAAQ+B,YAAcxD,EACtByB,EAAQgC,UAAYzB,EACpBP,EAAQiC,YACRjC,EAAQkC,OAAO2D,EAAIC,GACnB9F,EAAQmC,OAAOoE,EAAIC,GACnBxG,EAAQoC,SAERpC,EAAQwF,UAAYjH,EACpByB,EAAQiC,YACRjC,EAAQkC,OAAOqE,EAAKE,EAAID,EAAKE,GAC7B1G,EAAQmC,OAAOoE,EAAU,GAALG,EAAUF,EAAU,GAALC,GACnCzG,EAAQmC,OAAOoE,EAAU,GAALG,EAAUF,EAAU,GAALC,GACnCzG,EAAQmC,OAAOoE,EAAKE,EAAID,EAAKE,GAC7B1G,EAAQ2G,YACR3G,EAAQ4G,QAEZrF,YAAa,SAAqBC,EAAMxB,EAASN,EAAUzV,GACvD,GAAIwV,GAAS9Z,IAEbqa,GAAQyB,aAAa,EAAG,GACxB,IAAIC,GAAUF,EAAKtM,GAAGyM,UAAU,EAChChc,MAAKwa,MAAME,QAAQrM,QAAQ,SAAU6L,GACjC,GAAI+B,GAAO/B,EAAK3K,GAAGyM,UAAU,GAAGE,MAAM,IACtC,IAAID,EAAK,IAAMF,EAAS,CACpB,GAAInD,GAAQ,OACRuB,EAAS0B,EACTzB,EAASN,EAAOU,MAAMC,MAAM,IAAMwB,EAAK,GAC3CnC,GAAOkE,UAAU9D,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GACnDzV,GAAMA,EAAK4V,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAClD,IAAIkC,EAAK,IAAMF,EAAS,CAC3B,GAAInD,GAAQ,OACRuB,EAASL,EAAOU,MAAMC,MAAM,IAAMwB,EAAK,IACvC7B,EAASyB,CACb/B,GAAOkE,UAAU9D,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GACnDzV,GAAMA,EAAK4V,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,QAMrE,IAAIF,IACA5F,OAAQ,SAAgBC,EAAG6D,GAClB7D,IAAGA,EAAI,GACP6D,IAAOA,EAAQ,GAEpB,KAAK,GADDsG,GAAI,GAAI1Z,OAAMuP,GACT5W,EAAI,EAAO4W,EAAJ5W,EAAOA,IAAK,CACxB+gB,EAAE/gB,GAAK,GAAIqH,OAAMuP,EACjB,KAAK,GAAI6C,GAAI,EAAO7C,EAAJ6C,EAAOA,IACfzZ,GAAKyZ,IACLsH,EAAE/gB,GAAGyZ,GAA0C,IAApCpQ,KAAKsN,UAAY,EAAI8D,GAAS,GAAU,EAAI,GAInE,MAAOsG,IAIfxB,OAAMqE,OAAOrI,OAAOsI,IAAM,SAAUtF,EAAMxB,EAASN,GAC/C,GAAIqH,GAAOrH,EAAS,gBAChBqH,IACAA,EAAKvF,EAAMxB,EAASN,IAG5B8C,MAAMqE,OAAOG,OAAOF,IAAM,SAAUtF,EAAMxB,EAASN,GAC/C,GAAIqH,GAAOrH,EAAS,gBAChBqH,IACAA,EAAKvF,EAAMxB,EAASN,IAG5B8C,MAAMqE,OAAOxG,MAAMyG,IAAM,SAAUjH,EAAMC,EAAQC,EAAQC,EAASN,GAC9D,GAAIqH,GAAOrH,EAAS,eAChBqH,IACAA,EAAKlH,EAAMC,EAAQC,EAAQC,EAASN,IAG5C8C,MAAMqE,OAAOxG,MAAM4G,MAAQ,SAAUpH,EAAMC,EAAQC,EAAQC,EAASN,GAChE,GAAIqH,GAAOrH,EAAS,iBAChBqH,IACAA,EAAKlH,EAAMC,EAAQC,EAAQC,EAASN,IAI5Chc,EAAOJ,SACHkc,cAAeA,EACfD,oBAAqBA,KAGtBpB,WAAW,KAAK+I,IAAI,SAASlkB,EAAQU,EAAOJ,GAC/C,YAEA,IAAI2W,GAASjX,EAAQ,YAEjBmkB,EAAYnkB,EAAQ,gBAEpB6B,EAAW7B,EAAQ,aAEnB2W,EAAU9U,EAAS8U,QACnBf,EAAgB/T,EAAS+T,cAEzB5T,EAAYhC,EAAQ,aAEpBgW,EAAUhU,EAAUgU,QACpBH,EAAgB7T,EAAU6T,cAG1BwF,EAAcrb,EAAQ,WAEtBokB,EAAYpkB,EAAQ,uBAEpBqf,EAAmB+E,EAAU/E,iBAC7B/C,EAAyB8H,EAAU9H,uBAEnC+H,EAAYrkB,EAAQ,oBAEpBwc,EAAgB6H,EAAU7H,cAC1BD,EAAsB8H,EAAU9H,oBAEhC+H,EAAYtkB,EAAQ,sBAEpBukB,EAAkBD,EAAUC,gBAC5BC,EAAwBF,EAAUE,sBAElCC,EAAYzkB,EAAQ,6BAEpB0kB,EAAwBD,EAAUC,sBAClCC,EAA8BF,EAAUE,4BAExCC,EAAY5kB,EAAQ,+BAEpB6kB,EAA0BD,EAAUC,wBACpCC,EAAgCF,EAAUE,6BAG9CpkB,GAAOJ,SACL2W,OAAQA,EACRkN,UAAWA,EACXxN,QAASA,EACTf,cAAeA,EACfI,QAASA,EACTH,cAAeA,EACfwF,YAAaA;AACbgE,iBAAkBA,EAClB/C,uBAAwBA,EACxBE,cAAeA,EACfD,oBAAqBA,EACrBgI,gBAAiBA,EACjBC,sBAAuBA,EACvBE,sBAAuBA,EACvBC,4BAA6BA,EAC7BE,wBAAyBA,EACzBC,8BAA+BA,KAG9BC,YAAY,GAAGhO,YAAY,GAAGiO,UAAU,GAAGC,sBAAsB,GAAG3F,mBAAmB,GAAG4F,eAAe,GAAG/J,WAAW,GAAGgK,qBAAqB,GAAGC,4BAA4B,GAAGC,8BAA8B,KAAKC,IAAI,SAAStlB,EAAQU,EAAOJ,GACnP,YAIA,SAAS6jB,KACL,MAAIlN,GAAOnB,MAAMnT,KAAMoT,YACnBoO,EAAU5gB,UAAUF,KAAK9C,KAAKoC,OACvB,IAEJ,EAPX,GAAIsU,GAASjX,EAAQ,WAUrBmkB,GAAU5gB,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAOgB,EAAO1T,YACtDqN,YAAauT,EACb9gB,KAAM,WACFV,KAAKsI,SAAWtI,KAAKyU,QAAQnM,SAAWrK,EAAE,yBAC1C+B,KAAKkO,WAAWzG,OAAOzH,KAAKsI,WAEhCsa,OAAQ,SAAgBC,GAKpB,MAJA7iB,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,QACN4T,IAAKA,IAEF7iB,MAEX8V,YAAa,SAAqB9L,EAAM+L,GACpC,OAAQ/L,EAAKiF,MACT,IAAK,QACDjP,KAAKwb,MAAMxR,EAAK6Y,OAI5B5L,QAAS,WACLjX,KAAK8iB,YAAYnc,KAAKC,IAAI,GAAI5G,KAAK4J,YAEvCsN,MAAO,WACH5C,EAAO1T,UAAUsW,MAAMtZ,KAAKoC,MAE5BA,KAAKsI,SAAS2E,SAElBuO,MAAO,SAAe3R,GAClB7J,KAAKsI,SAASb,OAAOxJ,EAAE,UAAUwJ,OAAOoC,EAAU,WAEtDiZ,YAAa,SAAqBC,GAC9B/iB,KAAKkO,WAAW8U,SACZC,UAAWjjB,KAAKkO,WAAW,GAAGgV,cAC/BH,MAIXhlB,EAAOJ,QAAU6jB,IAEdhJ,WAAW,KAAK2K,IAAI,SAAS9lB,EAAQU,EAAOJ,GAC/C,YAEA,SAASylB,GAAmBxf,GAAO,GAAIe,MAAMC,QAAQhB,GAAM,CAAE,IAAK,GAAItG,GAAI,EAAG+lB,EAAO1e,MAAMf,EAAI/F,QAASP,EAAIsG,EAAI/F,OAAQP,IAAO+lB,EAAK/lB,GAAKsG,EAAItG,EAAM,OAAO+lB,GAAe,MAAO1e,OAAM2e,KAAK1f,GAQ1L,QAAS0Q,GAAO/V,GAKZ,MAJAyB,MAAKjC,OAASiC,KAAKiO,YACnBjO,KAAKyU,QAAUzU,KAAK0U,QAAQ6O,SAASvjB,MACrC/B,EAAEC,OAAO8B,KAAMA,KAAKyU,SACpBzU,KAAKwjB,QAAQjlB,GACNyB,KAAKyjB,MAXhB,GAAIvkB,GAAW7B,EAAQ,0BAEnBqmB,EAASxkB,EAASwkB,OAClBC,EAAWzkB,EAASykB,QAWxBrP,GAAO1T,WAEHqN,YAAaqG,EACbI,QAAS,KAETkP,SAAU,WACN,IAAK,GAAIC,GAAOzQ,UAAUvV,OAAQ4X,EAAO9Q,MAAMkf,GAAOC,EAAO,EAAUD,EAAPC,EAAaA,IACzErO,EAAKqO,GAAQ1Q,UAAU0Q,EAO3B,OAJA9jB,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,UACNwG,KAAMiO,EAAOjO,KAEVzV,MAEX+jB,OAAQ,WAIJ,MAHA/jB,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,UAEHjP,MAEXgkB,MAAO,WAEH,MADAhkB,MAAK0U,QAAQuP,UACNjkB,MAEX8V,YAAa,SAAqB9L,EAAM+L,GACpC,GAAI9G,GAAOjF,EAAKiF,KACZwG,EAAOzL,EAAKyL,IAGhB,QAAQxG,GACJ,IAAK,UACDjP,KAAKiR,QAAQkC,MAAMnT,KAAMojB,EAAmBO,EAASlO,IACrD,MACJ,KAAK,QACDzV,KAAKkX,UAIjBsM,QAAS,SAAiBjlB,GACtB,GAAI2lB,GAAQ,MACRlkB,MAAKyjB,OACLS,EAAQjmB,EAAE,uBACV+B,KAAKkO,WAAWzG,OAAOyc,IAEvBA,EAAQlkB,KAAKkO,WAAWtC,KAAK,aAEjCsY,EAAM/N,KAAK5X,GAAQyB,KAAKmkB,cAE5BlT,QAAS,WACL,GAAIhG,GAAOyY,EAAOtQ,UAClB,OAAKpT,MAAKyjB,OAASzjB,KAAKokB,WAAanZ,GAGrCjL,KAAKyjB,MAAQzjB,KAAKyU,QAAQgP,OAAQ,EAClCzjB,KAAKokB,SAAWpkB,KAAKyU,QAAQ2P,SAAWnZ,GACjC,IAJI,GAMfnE,OAAQ,aACRmQ,QAAS,aACTC,MAAO,aACPmN,OAAQ,SAAgBvK,GAIpB,MAHIA,GAAO/b,SAAWyjB,YAClBxhB,KAAKub,UAAYzB,GAEd9Z,MAEXkG,UAAW,SAAmBrJ,KAC9ByJ,UAAW,SAAmBzJ,KAC9BmK,QAAS,SAAiBnK,KAC1B4N,WAAY,SAAoB5N,MAGpCkB,EAAOJ,QAAU2W,IAEdiE,yBAAyB,KAAK+L,IAAI,SAASjnB,EAAQU,EAAOJ,GAC7D,YAQA,SAASkkB,KACL,MAAIjI,GAAoBzG,MAAMnT,KAAMoT,YAChCyO,EAAsBjhB,UAAUF,KAAK9C,KAAKoC,OACnC,IAEJ,EAXX,GAAId,GAAW7B,EAAQ,oBAGnBuc,GADgB1a,EAAS2a,cACH3a,EAAS0a,oBAWnCiI,GAAsBjhB,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAOsG,EAAoBhZ,YAC/EqN,YAAa4T,EACbnhB,KAAM,WACF,GAAIoZ,GAAS9Z,IAEbA,MAAK/C,EAAE8c,UACHC,gBAAiB,MACjBC,aAAc,SAAsBC,EAAMC,EAAQC,EAAQC,EAASN,GAC/D,GAAInB,GAAQkB,EAAOQ,SAASJ,EAAMC,EAAQC,EAAQL,EAClDD,GAAOS,SAASL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAIlE9I,QAAS,SAAiBoN,GACtB,GAAI/J,OAAO1T,UAAUqQ,QAAQkC,MAAMnT,KAAMoT,WAAY,OAAO,CAE5DpT,MAAKwa,MAAMtD,OAKX,KAAK,GAJDuD,MACAC,KACAyE,EAAY,EAAIxY,KAAKyY,GAAKf,EAAExgB,OAC5BwhB,EAAe,EACV/hB,EAAI,EAAGA,EAAI+gB,EAAExgB,OAAQP,IAC1B+hB,GAAgBF,EAChB1E,EAAMjW,MACF+K,GAAIvP,KAAKjD,EAAEO,GACXqd,MAAO,GAAKrd,EACZ2I,EAAG,GAAKU,KAAK2Y,IAAID,GAAgB,EACjCjY,EAAG,GAAKT,KAAK4Y,IAAIF,GAAgB,EACjCzE,KAAM,EACNhC,MAAO5Y,KAAK4Y,MAAL5Y,YAGf,KAAK,GAAI1C,GAAI,EAAGA,EAAI+gB,EAAExgB,OAAQP,IAC1B,IAAK,GAAIyZ,GAAI,EAAQzZ,GAALyZ,EAAQA,KAChBsH,EAAE/gB,GAAGyZ,IAAMsH,EAAEtH,GAAGzZ,KAChBod,EAAMlW,MACF+K,GAAIvP,KAAKnD,EAAES,EAAGyZ,GACdoD,OAAQna,KAAKjD,EAAEO,GACf8c,OAAQpa,KAAKjD,EAAEga,GACf6B,MAAO5Y,KAAK4Y,MAAL5Y,WACP4a,KAAM,GAkBtB,OAZA5a,MAAKwa,MAAMK,MACPJ,MAAOA,EACPC,MAAOA,IAEX1a,KAAK/C,EAAE6d,OAAOC,MACV9U,EAAG,EACHmB,EAAG,EACH4T,MAAO,EACPjD,MAAO,IAEX/X,KAAKiX,WAEE,GAEXpa,EAAG,SAAW4e,EAAIC,GACd,GAAID,EAAKC,EAAI,CACT,GAAIC,GAAOF,CACXA,GAAKC,EACLA,EAAKC,EAET,MAAO,IAAMF,EAAK,IAAMC,GAE5BE,YAAa,SAAqBC,EAAMxB,EAASN,EAAUzV,GACvD,GAAIwV,GAAS9Z,IAEbqa,GAAQyB,aAAa,EAAG,GACxB,IAAIC,GAAUF,EAAKtM,GAAGyM,UAAU,EAChChc,MAAKwa,MAAME,QAAQrM,QAAQ,SAAU6L,GACjC,GAAI+B,GAAO/B,EAAK3K,GAAGyM,UAAU,GAAGE,MAAM,IACtC,IAAID,EAAK,IAAMF,EAAS,CACpB,GAAInD,GAAQ,OACRuB,EAAS0B,EACTzB,EAASN,EAAOU,MAAMC,MAAM,IAAMwB,EAAK,GAC3CnC,GAAOS,SAASL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAClDzV,GAAMA,EAAK4V,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAClD,IAAIkC,EAAK,IAAMF,EAAS,CAC3B,GAAInD,GAAQ,OACRuB,EAASL,EAAOU,MAAMC,MAAM,IAAMwB,EAAK,IACvC7B,EAASyB,CACb/B,GAAOS,SAASL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAClDzV,GAAMA,EAAK4V,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAIjEQ,SAAU,SAAkBL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAC9D,GAAIoC,GAASpC,EAAS,WAAa,GAC/Ba,EAAOV,EAAKiC,EAAS,SAAW,CAEpC9B,GAAQ+B,YAAcxD,EACtByB,EAAQgC,UAAYzB,EACpBP,EAAQiC,YACRjC,EAAQkC,OAAOpC,EAAOgC,EAAS,KAAMhC,EAAOgC,EAAS,MACrD9B,EAAQmC,OAAOpC,EAAO+B,EAAS,KAAM/B,EAAO+B,EAAS,MACrD9B,EAAQoC,WAIhB,IAAImF,IACA3N,OAAQ,SAAgBC,EAAG6D,GAClB7D,IAAGA,EAAI,GACP6D,IAAOA,EAAQ,GAEpB,KAAK,GADDsG,GAAI,GAAI1Z,OAAMuP,GACT5W,EAAI,EAAO4W,EAAJ5W,EAAOA,IACnB+gB,EAAE/gB,GAAK,GAAIqH,OAAMuP,EACpB,KAAK,GAAI5W,GAAI,EAAO4W,EAAJ5W,EAAOA,IACpB,IAAK,GAAIyZ,GAAI,EAAO7C,EAAJ6C,EAAOA,IACfzZ,EAAIyZ,IACJsH,EAAE/gB,GAAGyZ,GAAKsH,EAAEtH,GAAGzZ,GAA0C,IAApCqJ,KAAKsN,UAAY,EAAI8D,GAAS,GAAU,EAAI,EAI7E,OAAOsG,IAIftgB,GAAOJ,SACHikB,gBAAiBA,EACjBC,sBAAuBA,KAGxBlF,mBAAmB,KAAK4H,IAAI,SAASlnB,EAAQU,EAAOJ,GACvD,YAYA,SAASqkB,KACL,MAAIpI,GAAoBzG,MAAMnT,KAAMoT,YAChC4O,EAA4BphB,UAAUF,KAAK9C,KAAKoC,OACzC,IAEJ,EAfX,GAAId,GAAW7B,EAAQ,oBAGnBuc,GADgB1a,EAAS2a,cACH3a,EAAS0a,qBAE/Bva,EAAYhC,EAAQ,0BAEpBkX,EAAelV,EAAUkV,YAW7ByN,GAA4BphB,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAOsG,EAAoBhZ,YACrFqN,YAAa+T,EACbthB,KAAM,WACF,GAAIoZ,GAAS9Z,IAEbA,MAAK/C,EAAE8c,UACHyK,cAAe,eACfC,qBAAsB,GACtBC,sBAAuB,GACvB9G,cAAe,SAAuB/B,EAAMxB,EAASN,GACjDD,EAAO6K,eAAe9I,EAAMxB,EAASN,GACrCD,EAAO+D,UAAUhC,EAAMxB,EAASN,IAEpC+D,cAAe,SAAuBjC,EAAMxB,EAASN,GACjDD,EAAO8B,YAAYC,EAAMxB,EAASN,EAAUD,EAAO8K,iBAEvD7G,eAAgB,SAAwB7D,EAAMC,EAAQC,EAAQC,EAASN,GACnE,GAAInB,GAAQkB,EAAOQ,SAASJ,EAAMC,EAAQC,EAAQL,EAClDD,GAAOkE,UAAU9D,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GACvDD,EAAO8K,eAAe1K,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAIxE8K,QAAS,SAAiBzK,EAAQtC,GAM9B,MALA9X,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,SACNmL,OAAQA,EACRtC,OAAQA,IAEL9X,MAEXue,OAAQ,SAAgBnE,EAAQD,EAAQrC,GAOpC,MANA9X,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,QACNmL,OAAQA,EACRD,OAAQA,EACRrC,OAAQA,IAEL9X,MAEXwe,OAAQ,SAAgBpE,EAAQD,EAAQrC,GAOpC,MANA9X,MAAK0U,QAAQC,SAAS3U,KAAKyU,SACvBxF,KAAM,QACNmL,OAAQA,EACRD,OAAQA,EACRrC,OAAQA,IAEL9X,MAEX8V,YAAa,SAAqB9L,EAAM+L,GACpC,OAAQ/L,EAAKiF,MACT,IAAK,SACD,GAAIiM,GAAalb,KAAKwa,MAAMC,MAAMza,KAAKjD,EAAEiN,EAAKoQ,QAC1BnW,UAAhB+F,EAAK8N,SAAsBoD,EAAWpD,OAASvD,EAAavK,EAAK8N,QACrE,MACJ,KAAK,QACL,IAAK,QACD,GAAImD,GAAqB,SAAbjR,EAAKiF,KACbiM,EAAalb,KAAKwa,MAAMC,MAAMza,KAAKjD,EAAEiN,EAAKoQ,SAC1CxB,EAAQqC,EAAQjb,KAAK4Y,MAAMuC,QAAUnb,KAAK4Y,MAAM7S,IAGpD,IAFAmV,EAAWtC,MAAQA,EACC3U,SAAhB+F,EAAK8N,SAAsBoD,EAAWpD,OAASvD,EAAavK,EAAK8N,SACjD7T,SAAhB+F,EAAKmQ,OAAsB,CAC3B,GAAIiB,GAASpb,KAAKnD,EAAEmN,EAAKmQ,OAAQnQ,EAAKoQ,QAClCF,EAAOla,KAAKwa,MAAME,MAAMU,EAC5BlB,GAAKtB,MAAQA,EACb5Y,KAAKwa,MAAMa,SAASD,GAAQE,QAAQpB,GAExC,GAAIla,KAAKub,UAAW,CAChB,GAAIpB,GAASnQ,EAAKmQ,MACHlW,UAAXkW,IAAsBA,EAAS,IACnCna,KAAKub,UAAUC,MAAMP,EAAQd,EAAS,OAASnQ,EAAKoQ,OAASD,EAAS,OAASnQ,EAAKoQ,QAExF,KACJ,SACIR,EAAoBhZ,UAAUkV,YAAYlY,KAAKoC,KAAMgK,EAAM+L,KAGvE9E,QAAS,SAAiBoN,GACtB,GAAI/J,OAAO1T,UAAUqQ,QAAQkC,MAAMnT,KAAMoT,WAAY,OAAO,CAE5DpT,MAAKwa,MAAMtD,OAKX,KAAK,GAJDuD,MACAC,KACAyE,EAAY,EAAIxY,KAAKyY,GAAKf,EAAExgB,OAC5BwhB,EAAe,EACV/hB,EAAI,EAAGA,EAAI+gB,EAAExgB,OAAQP,IAAK,CAC/B+hB,GAAgBF,EAChB1E,EAAMjW,MACF+K,GAAIvP,KAAKjD,EAAEO,GACXqd,MAAO,GAAKrd,EACZ2I,EAAG,GAAKU,KAAK2Y,IAAID,GAAgB,EACjCjY,EAAG,GAAKT,KAAK4Y,IAAIF,GAAgB,EACjCzE,KAAM,EACNhC,MAAO5Y,KAAK4Y,MAAL5Y,WACP8X,OAAQ,GAEZ,KAAK,GAAIf,GAAI,EAAGA,EAAIsH,EAAE/gB,GAAGO,OAAQkZ,IACzBsH,EAAE/gB,GAAGyZ,IACL2D,EAAMlW,MACF+K,GAAIvP,KAAKnD,EAAES,EAAGyZ,GACdoD,OAAQna,KAAKjD,EAAEO,GACf8c,OAAQpa,KAAKjD,EAAEga,GACf6B,MAAO5Y,KAAK4Y,MAAL5Y,WACP4a,KAAM,EACN9C,OAAQvD,EAAa8J,EAAE/gB,GAAGyZ,MAkB1C,MAZA/W,MAAKwa,MAAMK,MACPJ,MAAOA,EACPC,MAAOA,IAEX1a,KAAK/C,EAAE6d,OAAOC,MACV9U,EAAG,EACHmB,EAAG,EACH4T,MAAO,EACPjD,MAAO,IAEX/X,KAAKiX,WAEE,GAEXC,MAAO,WACH0C,EAAoBhZ,UAAUsW,MAAMtZ,KAAKoC,MAEzCA,KAAK8kB,gBAETA,aAAc,WACV9kB,KAAKwa,MAAMC,QAAQpM,QAAQ,SAAUwN,GACjCA,EAAK/D,OAAS,KAGtB8M,eAAgB,SAAwB1K,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAC1E,GAAII,GAAUC,EAAd,CAEA,GAAI+B,GAASpC,EAAS,WAAa,GAC/Ba,EAAOV,EAAKiC,EAAS,SAAW,CAEpC,MAAIvB,EAAOb,EAAS,uBAApB,CAEA,GAAI,IAAMA,EAAS,yBAA0B,KAAM,wCAEnD,IAAIjD,GACA7Q,GAAKkU,EAAOgC,EAAS,KAAO/B,EAAO+B,EAAS,MAAQ,EACpD/U,GAAK+S,EAAOgC,EAAS,KAAO/B,EAAO+B,EAAS,MAAQ,EACpD4I,EAAK3K,EAAO+B,EAAS,KAAOhC,EAAOgC,EAAS,KAC5C6I,EAAK5K,EAAO+B,EAAS,KAAOhC,EAAOgC,EAAS,KAC5CnB,EAAQrU,KAAK2Z,MAAM0E,EAAID,EAE3BjO,GAAyC,UAA9BiD,EAAS,iBAA+BA,EAAS,wBAA0BA,EAAS,wBAA0Ba,EAAOjU,KAAKga,IAAI/F,EAAM,GAAKb,EAAS,0BAE7JM,EAAQ4K,OAEJ/K,EAAKgL,QACL7K,EAAQ8C,MAAQpD,EAAS,mBAAoBjD,EAAW,KAAMiD,EAAS,eAAiBA,EAAS,SAAS9B,KAAK,KAE/GoC,EAAQwF,UAAYjH,IAEpByB,EAAQ8C,MAAQpD,EAAS,aAAcjD,EAAW,KAAMiD,EAAS,SAAS9B,KAAK,KAE/EoC,EAAQwF,UAAYjH,GAGxByB,EAAQyF,UAAY,SACpBzF,EAAQ8K,aAAe,aAEvB9K,EAAQ+K,UAAUnf,EAAGmB,GACrBiT,EAAQgL,OAAOrK,GACfX,EAAQ0F,SAAS7F,EAAKpC,OAAQ,GAAI8C,EAAO,EAAI,GAE7CP,EAAQiL,aAEZX,eAAgB,SAAwB9I,EAAMxB,EAASN,GACnD,GAAIjD,GACAqF,EAASpC,EAAS,WAAa,GAC/Ba,EAAOiB,EAAKM,EAAS,OAErBvB,GAAOb,EAAS,oBAEpBjD,EAAqC,UAA1BiD,EAAS,aAA2BA,EAAS,oBAAsBA,EAAS,kBAAoBa,EAE3GP,EAAQ8C,MAAQpD,EAAS,aAAeA,EAAS,aAAe,IAAM,IAAMjD,EAAW,MAAQiD,EAAS,QACxGM,EAAQwF,UAAuC,SAA3B9F,EAAS,cAA2B8B,EAAKjD,OAASmB,EAAS,oBAAsBA,EAAS,qBAE9GM,EAAQyF,UAAY,OACpBzF,EAAQ0F,SAASlE,EAAK/D,OAAQnR,KAAKqZ,MAAMnE,EAAKM,EAAS,KAAc,IAAPvB,GAAajU,KAAKqZ,MAAMnE,EAAKM,EAAS,KAAOrF,EAAW,OAI9H,IAAIiL,IACA9N,OAAQ,SAAgBC,EAAG6D,EAAOnR,EAAKC,GAC9BqN,IAAGA,EAAI,GACP6D,IAAOA,EAAQ,IACfnR,IAAKA,EAAM,GACXC,IAAKA,EAAM,EAEhB,KAAK,GADDwX,GAAI,GAAI1Z,OAAMuP,GACT5W,EAAI,EAAO4W,EAAJ5W,EAAOA,IAAK,CACxB+gB,EAAE/gB,GAAK,GAAIqH,OAAMuP,EACjB,KAAK,GAAI6C,GAAI,EAAO7C,EAAJ6C,EAAOA,IACfzZ,GAAKyZ,GAA0C,IAApCpQ,KAAKsN,UAAY,EAAI8D,GAAS,KACzCsG,EAAE/gB,GAAGyZ,IAAMpQ,KAAKsN,UAAYpN,EAAMD,EAAM,GAAK,GAAKA,GAI9D,MAAOyX,IAIftgB,GAAOJ,SACHokB,sBAAuBA,EACvBC,4BAA6BA,KAG9BzJ,yBAAyB,GAAGoE,mBAAmB,KAAK4I,IAAI,SAASloB,EAAQU,EAAOJ,GACnF,YAYA,SAASwkB,KACL,MAAIH,GAA4B7O,MAAMnT,KAAMoT,YACxC+O,EAA8BvhB,UAAUF,KAAK9C,KAAKoC,OAC3C,IAEJ,EAfX,GAAId,GAAW7B,EAAQ,6BAGnB2kB,GADwB9iB,EAAS6iB,sBACH7iB,EAAS8iB,6BAEvC3iB,EAAYhC,EAAQ,sBAEpBwkB,EAAwBxiB,EAAUwiB,qBAWtCM,GAA8BvhB,UAAY3C,EAAEC,QAAO,EAAM2G,OAAOyO,OAAO0O,EAA4BphB,YAC/FqN,YAAakU,EACbzhB,KAAM,WACF,GAAIoZ,GAAS9Z,IAEbA,MAAK/C,EAAE8c,UACHC,gBAAiB,MACjBC,aAAc,SAAsBC,EAAMC,EAAQC,EAAQC,EAASN,GAC/D,GAAInB,GAAQkB,EAAOQ,SAASJ,EAAMC,EAAQC,EAAQL,EAClDD,GAAOS,SAASL,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GACtDD,EAAO8K,eAAe1K,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,OAIxE9I,QAAS,SAAiBoN,GACtB,GAAI/J,OAAO1T,UAAUqQ,QAAQkC,MAAMnT,KAAMoT,WAAY,OAAO,CAE5DpT,MAAKwa,MAAMtD,OAKX,KAAK,GAJDuD,MACAC,KACAyE,EAAY,EAAIxY,KAAKyY,GAAKf,EAAExgB,OAC5BwhB,EAAe,EACV/hB,EAAI,EAAGA,EAAI+gB,EAAExgB,OAAQP,IAC1B+hB,GAAgBF,EAChB1E,EAAMjW,MACF+K,GAAIvP,KAAKjD,EAAEO,GACXqd,MAAO,GAAKrd,EACZ2I,EAAG,GAAKU,KAAK2Y,IAAID,GAAgB,EACjCjY,EAAG,GAAKT,KAAK4Y,IAAIF,GAAgB,EACjCzE,KAAM,EACNhC,MAAO5Y,KAAK4Y,MAAL5Y,WACP8X,OAAQ,GAGhB,KAAK,GAAIxa,GAAI,EAAGA,EAAI+gB,EAAExgB,OAAQP,IAC1B,IAAK,GAAIyZ,GAAI,EAAQzZ,GAALyZ,EAAQA,KAChBsH,EAAE/gB,GAAGyZ,IAAMsH,EAAEtH,GAAGzZ,KAChBod,EAAMlW,MACF+K,GAAIvP,KAAKnD,EAAES,EAAGyZ,GACdoD,OAAQna,KAAKjD,EAAEO,GACf8c,OAAQpa,KAAKjD,EAAEga,GACf6B,MAAO5Y,KAAK4Y,MAAL5Y,WACP4a,KAAM,EACN9C,OAAQuG,EAAE/gB,GAAGyZ,IAkB7B,OAZA/W,MAAKwa,MAAMK,MACPJ,MAAOA,EACPC,MAAOA,IAEX1a,KAAK/C,EAAE6d,OAAOC,MACV9U,EAAG,EACHmB,EAAG,EACH4T,MAAO,EACPjD,MAAO,IAEX/X,KAAKiX,WAEE,GAEXpa,EAAGglB,EAAsBjhB,UAAU/D,EACnC+e,YAAaiG,EAAsBjhB,UAAUgb,YAC7CrB,SAAUsH,EAAsBjhB,UAAU2Z,SAC1CqK,eAAgB,SAAwB1K,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,GAC1E,GAAIoC,GAASpC,EAAS,WAAa,EACnC,IAAII,EAAOgC,EAAS,KAAO/B,EAAO+B,EAAS,KAAM,CAC7C,GAAIR,GAAOxB,CACXA,GAASC,EACTA,EAASuB,EAEbqG,EAA4BphB,UAAUgkB,eAAehnB,KAAKoC,KAAMka,EAAMC,EAAQC,EAAQxB,EAAOyB,EAASN,KAI9G,IAAImI,IACAjO,OAAQ,SAAgBC,EAAG6D,EAAOnR,EAAKC,GAC9BqN,IAAGA,EAAI,GACP6D,IAAOA,EAAQ,IACfnR,IAAKA,EAAM,GACXC,IAAKA,EAAM,EAEhB,KAAK,GADDwX,GAAI,GAAI1Z,OAAMuP,GACT5W,EAAI,EAAO4W,EAAJ5W,EAAOA,IACnB+gB,EAAE/gB,GAAK,GAAIqH,OAAMuP,EACpB,KAAK,GAAI5W,GAAI,EAAO4W,EAAJ5W,EAAOA,IACpB,IAAK,GAAIyZ,GAAI,EAAO7C,EAAJ6C,EAAOA,IACfzZ,EAAIyZ,GAA0C,IAApCpQ,KAAKsN,UAAY,EAAI8D,GAAS,KACxCsG,EAAE/gB,GAAGyZ,GAAKsH,EAAEtH,GAAGzZ,IAAMqJ,KAAKsN,UAAYpN,EAAMD,EAAM,GAAK,GAAKA,EAIxE,OAAOyX,IAIftgB,GAAOJ,SACHukB,wBAAyBA,EACzBC,8BAA+BA,KAGhCK,qBAAqB,GAAGC,4BAA4B,KAAK+C,IAAI,SAASnoB,EAAQU,EAAOJ,GACxF,YAEA,IAAI8nB,GAAUpoB,EAAQ,YAEtBU,GAAOJ,QAAU,SAAUmO,GAEzB,MAAO2Z,GAAQ3Z,GACbmD,KAAM,WAIPyW,YAAY,KAAKC,IAAI,SAAStoB,EAAQU,EAAOJ,GAChD,YAEA,IAAI8nB,GAAUpoB,EAAQ,YAEtBU,GAAOJ,QAAU,SAAUmO,GACzB,MAAO2Z,GAAQ3Z,GACbmG,SAAU,OACVhD,KAAM,WAIPyW,YAAY,KAAKE,IAAI,SAASvoB,EAAQU,EAAOJ,GAChD,YAEA,IAAI8nB,GAAUpoB,EAAQ,YAEtBU,GAAOJ,QAAU,SAAUmO,EAAKb,GAC9B,MAAOwa,GAAQ3Z,GACbmG,SAAU,OACVhD,KAAM,OACNhE,KAAM4a,KAAKC,UAAU7a,QAItBya,YAAY,KAAKK,IAAI,SAAS1oB,EAAQU,EAAOJ,GAChD,YAEA,IAAIiU,GAAOvU,EAAQ,QACf0H,EAAc1H,EAAQ,aAEtBW,EAAKC,EACL+nB,EAAOhoB,EAAGgoB,KACV9nB,EAASF,EAAGE,OAGZ+nB,IAEJloB,GAAOJ,QAAU,SAAUmO,GACzB,GAAIiK,GAAU3C,UAAUvV,QAAU,GAAsBoG,SAAjBmP,UAAU,MAAwBA,UAAU,EAInF,OAFArO,GAAY7E,cAAa,GAElB,GAAI0R,GAAKsU,QAAQ,SAAUC,EAASC,GACzC,GAAIC,IACFC,QAAS,SAAiBC,GACxBxhB,EAAY7E,cAAa,GACzBimB,EAAQI,IAEVta,MAAO,SAAeiG,GACpBnN,EAAY7E,cAAa,GACzBkmB,EAAOlU,KAIPsU,EAAOtoB,KAAW+nB,EAAUlQ,EAASsQ,GACvCva,IAAKA,GAGPka,GAAKQ,QAIN7e,YAAY,EAAEoL,KAAO,KAAK0T,IAAI,SAASppB,EAAQU,EAAOJ,GACzD,YAEA,IAAI+F,GAAiB,WAAc,QAASC,GAAcC,EAAKtG,GAAK,GAAIuG,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAKC,MAAW,KAAM,IAAK,GAAiCC,GAA7BC,EAAKP,EAAIQ,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAAoBV,EAAKW,KAAKN,EAAGO,QAAYnH,GAAKuG,EAAKhG,SAAWP,GAA3DwG,GAAK,IAAoE,MAAOY,GAAOX,GAAK,EAAMC,EAAKU,EAAO,QAAU,KAAWZ,GAAMK,EAAG,WAAWA,EAAG,YAAe,QAAU,GAAIJ,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAKtG,GAAK,GAAIqH,MAAMC,QAAQhB,GAAQ,MAAOA,EAAY,IAAIQ,OAAOC,WAAYQ,QAAOjB,GAAQ,MAAOD,GAAcC,EAAKtG,EAAa,MAAM,IAAIwH,WAAU,4DAEllBC,EAAc1H,EAAQ,UACtB8L,EAAQ9L,EAAQ,gBAEhBqpB,EAAe,WACjB,MAAI3hB,GAAY9E,gBACdkJ,EAAM+C,eAAe,sDACd,IAEF,GAGLqG,EAAqB,SAA4BhU,GACnD,GAAIuN,GAAM/D,OAAO4e,SAASC,KAEtBC,GADYtoB,EAAKuoB,QAAQ,UAAW,QAC5B,GAAIC,QAAO,OAASxoB,EAAO,sBAEnCyoB,EAAUH,EAAMI,KAAKnb,EAEzB,KAAKkb,GAA8B,IAAnBA,EAAQnpB,OACtB,MAAO,KAGT,IAAIqpB,GAAWxjB,EAAesjB,EAAS,GAEnCzX,EAAK2X,EAAS,EAGlB,OAAO3X,GAGTxR,GAAOJ,SACL+oB,aAAcA,EACdnU,mBAAoBA,KAGnBpF,SAAS,EAAEga,eAAe,KAAKC,IAAI,SAAS/pB,EAAQU,EAAOJ,GAC9D,YAEA,IAAIoN,GAAgB1N,EAAQ,oBACxBgV,EAAiBhV,EAAQ,qBACzBuR,EAAWvR,EAAQ,eACnBmV,EAAmBnV,EAAQ,wBAC3BwO,EAAoBxO,EAAQ,wBAEhCU,GAAOJ,SACLoN,cAAeA,EACfsH,eAAgBA,EAChBzD,SAAUA,EACV4D,iBAAkBA,EAClB3G,kBAAmBA,KAGlBwb,mBAAmB,GAAGC,oBAAoB,GAAGC,cAAc,GAAGC,uBAAuB,GAAGC,wBAAwB,KAAKC,IAAI,SAASrqB,EAAQU,EAAOJ,GACpJ,YAEA,IAAIgqB,GAAQtqB,EAAQ,YAChBuqB,EAAUvqB,EAAQ,kBAEtBU,GAAOJ,QAAU,SAAUkN,EAAUC,GACnC,GAAI+c,GAAMF,EAAMG,gBAAgBjd,EAAUC,EAC1C,OAAO8c,GAAQC,EAAM,gBAGpB5mB,WAAW,GAAG8mB,kBAAkB,KAAKC,IAAI,SAAS3qB,EAAQU,EAAOJ,GACpE,YAEA,IACIiqB,IADcvqB,EAAQ,UACZA,EAAQ,mBAEtBU,GAAOJ,QAAU,WACf,MAAOiqB,GAAQ,gCAGdza,SAAS,EAAE4a,kBAAkB,KAAKE,IAAI,SAAS5qB,EAAQU,EAAOJ,GACjE,YAEA,IAAIiU,GAAOvU,EAAQ,QAEf0H,EAAc1H,EAAQ,UACtBsqB,EAAQtqB,EAAQ,YAEhB6B,EAAW7B,EAAQ,aAEnBqpB,EAAexnB,EAASwnB,aAGxBhe,EAAMrL,EAAQ,cAEd6qB,EAAkB,SAAyBL,GAC7C,MAAOjW,GAAKuW,MACVld,KAAMvC,EAAImf,EAAM,WAChBpqB,KAAMiL,EAAImf,EAAM,cAIhBO,EAA2B,SAAkCP,GAG/D,MAFA9iB,GAAY3E,YAAY8M,eAEjBgb,EAAgBL,GAAK7c,KAAK,SAAUqd,GACzCtjB,EAAYtG,iBAAiBopB,EAAKQ,GAClCtjB,EAAY3E,YAAYgR,WAAWiX,MAInCC,EAAsB,SAA6BC,GACrD,MAAOA,IAAkCtkB,SAApBskB,EAAWtd,MAA0ChH,SAApBskB,EAAW9qB,KAGnEM,GAAOJ,QAAU,SAAUkN,EAAUC,EAAWjM,EAAM6P,GACpD,MAAO,IAAIkD,GAAKsU,QAAQ,SAAUC,EAASC,GAEzC,GAAIM,IACFN,QACK,CACLnoB,EAAE,gBAAgB+O,KAAK0B,EAEvB,IAAImZ,GAAMF,EAAMpoB,WAAWsL,EAAUC,EAAWjM,EAChDkG,GAAYnG,gBAAgBipB,EAC5B,IAAIU,GAAaxjB,EAAYvG,cAAcqpB,EAEvCS,GAAoBC,IACtBxjB,EAAY3E,YAAYgR,WAAWmX,GACnCpC,KAEAiC,EAAyBP,GAAK7c,KAAKmb,EAASC,SAMjDjZ,SAAS,EAAElM,WAAW,GAAGunB,aAAa,GAAGC,YAAY,GAAG1V,KAAO,KAAK2V,IAAI,SAASrrB,EAAQU,EAAOJ,GACnG,YAEA,IAAIiU,GAAOvU,EAAQ,QAEfsqB,EAAQtqB,EAAQ,YAChB0H,EAAc1H,EAAQ,UAEtBuqB,EAAUvqB,EAAQ,mBAClB0N,EAAgB1N,EAAQ,oBAExBsrB,EAAkB,SAAyBtqB,EAAOE,GACpD,MAAOF,GAAME,EAAO,OAAO8pB,QAG7BtqB,GAAOJ,QAAU,SAAU2U,GACzB,MAAO,IAAIV,GAAKsU,QAAQ,SAAUC,EAASC,GACzCwB,EAAQ,gCAAkCtV,GAAQtH,KAAK,SAAU7E,GAC/D,GAAI9H,GAAQ8H,EAAK9H,MAGbyM,EAAY,gBACZD,EAAW,IAEfE,GAAcF,EAAUC,GAAWE,KAAK,SAAUC,GAEhD,GAAIwF,GAAWkY,EAAgBtqB,EAAO,QAClCsS,EAAWgY,EAAgBtqB,EAAO,QAGlCwpB,EAAMF,EAAMpoB,WAAWsL,EAAUC,EAAW,gBAChD/F,GAAYtG,iBAAiBopB,GAC3B5c,KAAMwF,EACNhT,KAAMkT,EACNiY,YAAa,oFAGfzC,GACEtb,SAAUA,EACVC,UAAWA,EACXG,KAAMA,aAObkC,SAAS,EAAElM,WAAW,GAAG8mB,kBAAkB,GAAGV,mBAAmB,GAAGtU,KAAO,KAAK8V,IAAI,SAASxrB,EAAQU,EAAOJ,GAC/G,YAEA,IAAIiU,GAAOvU,EAAQ,QACf0H,EAAc1H,EAAQ,UAEtByrB,EAAWzrB,EAAQ,mBAEvBU,GAAOJ,QAAU,WACf,MAAO,IAAIiU,GAAKsU,QAAQ,SAAUC,EAASC,GACzC,GAAI2C,GAAwBhkB,EAAY3E,YAEpC0Q,EAAaiY,EAAsBjY,WACnCE,EAAa+X,EAAsB/X,WAGnCgY,GACFC,YAAe,OACfC,UAAU,EACV7qB,OACE8qB,WACEd,QAAWvX,EAAWS,YAExB6X,WACEf,QAAWrX,EAAWO,aAK5BuX,GAAS,+BAAgCE,GAAMhe,KAAK,SAAU7E,GAC5D,GAAIoJ,GAAKpJ,EAAKoJ,GACV8Z,EAAY1C,SACZ2C,EAAWD,EAAUC,SACrBC,EAAOF,EAAUE,KACjBC,EAAWH,EAAUG,SAGrB1d,EAAMwd,EAAW,KAAOC,EAAOC,EAAW,kBAAoBja,CAClE4W,GAAQra,UAKXqB,SAAS,EAAEsc,mBAAmB,GAAG1W,KAAO,KAAK2W,IAAI,SAASrsB,EAAQU,EAAOJ,GAC5E,YAEA,IAAIqB,GAAgB3B,EAAQ,aACxBiX,EAASjX,EAAQ,mBAErBU,GAAOJ,SACL+C,KAAM,WACJ,GAAIipB,GAAK,GAAI3qB,EAEb,OADAsV,GAAO1T,UAAU8T,QAAUiV,EACpBA,MAIRC,mBAAmB,GAAGC,YAAY,KAAKC,IAAI,SAASzsB,EAAQU,EAAOJ,GACtE,YAEA,IAAIosB,GAAY,IAEZ/qB,EAAgB,WAClBgB,KAAKgqB,MAAQ,KACbhqB,KAAKiqB,OAAQ,EACbjqB,KAAKkqB,YACLlqB,KAAK4J,SAAW,IAGlB5K,GAAc4B,WACZupB,IAAK,SAAarQ,GAEhB,GAAI5L,GAAajQ,EAAE,mCACnBA,GAAE,qBAAqBwJ,OAAOyG,EAE9B,IAAIuG,IACF1W,OAAQ+b,EAAO/b,OACf+b,OAAQA,EACRsQ,WAAW,EACXjG,YAAa,KACbjW,WAAYA,EACZuV,OAAO,EAIT,OADAzjB,MAAKkqB,SAAS1lB,KAAKiQ,GACZA,GAET8O,SAAU,SAAkB8G,GAC1B,GAAIC,GAAkB,KAClBC,EAAQ,CAqBZ,OAnBAtsB,GAAEwB,KAAKO,KAAKkqB,SAAU,SAAU5sB,EAAGmX,GACjC,MAAIA,GAAQ1W,SAAWssB,EAAUtsB,SAC/BwsB,IACK9V,EAAQ2V,WAFf,QAGI3V,EAAQqF,OAASuQ,EACjB5V,EAAQ2V,WAAY,EACpB3V,EAAQgP,OAAQ,EAChB6G,EAAkB7V,GACX,KAKW,OAApB6V,IACFC,IACAD,EAAkBtqB,KAAKmqB,IAAIE,IAG7BC,EAAgBnG,YAAckG,EAAUpc,YAAY1P,KAAO,IAAMgsB,EAC1DD,GAETla,cAAe,WACbpQ,KAAKwqB,QACLvsB,EAAEwB,KAAKO,KAAKkqB,SAAU,SAAU5sB,EAAGmX,GACjCA,EAAQ2V,WAAY,KAGxB7Z,kBAAmB,WACjB,GAAIka,IAAU,CAEdzqB,MAAKkqB,SAAWjsB,EAAEysB,KAAK1qB,KAAKkqB,SAAU,SAAUzV,GAC9C,GAAIkW,IAAWlW,EAAQ2V,SASvB,QAPI3V,EAAQgP,OAASkH,KACnBF,GAAU,GAERE,GACFlW,EAAQvG,WAAWmB,UAGbsb,IAGNF,GACFzqB,KAAK8e,SAGTA,MAAO,WACL,GAAIoL,GAAWlqB,KAAKkqB,QAGpBjsB,GAAEwB,KAAKyqB,EAAU,SAAU5sB,EAAGmX,GAC5B,GAAIzO,GAAQ,IACRkB,EAAS,IAAMgjB,EAASrsB,OACxBgI,EAAMqB,EAAS5J,CAEnBmX,GAAQvG,WAAWtI,KACjBC,IAAKA,EAAM,IACXG,MAAOA,EAAQ,IACfkB,OAAQA,EAAS,MAGnBuN,EAAQqF,OAAOhT,YAGnBA,OAAQ,WACN9G,KAAKmI,QAAQ,WAEfgE,QAAS,WACP,MAAOnM,MAAKiqB,OAEdW,YAAa,SAAqBhhB,GAChC3L,EAAE,aAAa8L,IAAIH,IAErB4gB,MAAO,WACLxqB,KAAK6qB,UACL7qB,KAAK8qB,WAAa,GAClB9qB,KAAK+qB,QAAU,EACX/qB,KAAKgqB,OACPgB,aAAahrB,KAAKgqB,OAEpBhqB,KAAKmI,QAAQ,UAEfwM,SAAU,SAAkBF,EAASzK,GACnC,GAAIhK,KAAK+qB,UAAYhB,EAAW,KAAM,yBACtC,IAAIkB,GAAMjrB,KAAK6qB,OAAOhtB,OAClBqtB,IACQ,KAARD,EACFjrB,KAAK6qB,OAAOrmB,KAAK0mB,GAEjBA,EAAOlrB,KAAK6qB,OAAOI,EAAM,GAE3BC,EAAK1mB,KAAKvG,EAAEC,OAAO8L,GACjByK,QAASA,MAGbwP,QAAS,WACPjkB,KAAK6qB,OAAOrmB,UAEd6H,UAAW,WACLrM,KAAK8qB,WAAa,IACtB9qB,KAAKiqB,OAAQ,EACTjqB,KAAKgqB,OACPgB,aAAahrB,KAAKgqB,OAEpB/rB,EAAE,cAAcgE,SAAS,YAE3BmK,WAAY,WACVpM,KAAKiqB,OAAQ,EACbjqB,KAAKgK,KAAKhK,KAAK8qB,WAAa,GAC5B7sB,EAAE,cAAc+D,YAAY,WAE9BgI,KAAM,SAAc1M,GAClB,GAAIyY,GAAU3C,UAAUvV,QAAU,GAAsBoG,SAAjBmP,UAAU,MAAwBA,UAAU,GAE/E0G,EAAS9Z,IAEb,MAAImrB,MAAM7tB,IAAMA,GAAK0C,KAAK6qB,OAAOhtB,QAAc,EAAJP,GAA3C,CAEA0C,KAAK8qB,WAAaxtB,CAClB,IAAI8tB,GAAQprB,KAAK6qB,OAAOvtB,EACxB8tB,GAAM/c,QAAQ,SAAUrE,GACtBA,EAAKyK,QAAQqF,OAAOhE,YAAY9L,EAAM+L,KAGnCA,EAAQsV,SACXrrB,KAAKmI,QAAQ,WAGXnI,KAAKiqB,QAETjqB,KAAKgqB,MAAQ7a,WAAW,WACtB2K,EAAO9P,KAAK1M,EAAI,EAAGyY,IAClB/V,KAAK4J,aAEV0C,SAAU,WACRtM,KAAKmI,QAAQ,QAEb,IAAImjB,GAAatrB,KAAK8qB,WAAa,CACnC,IAAiB,EAAbQ,EAGF,MAFAtrB,MAAK8qB,WAAa,OAClB9qB,MAAKmI,QAAQ,UAIf,KAAK,GAAI7K,GAAI,EAAOguB,EAAJhuB,EAAgBA,IAC9B0C,KAAKgK,KAAK1M,GACR+tB,SAAS,GAIbrrB,MAAKgK,KAAKshB,IAEZ/e,SAAU,WACRvM,KAAKgK,KAAKhK,KAAK8qB,WAAa,IAE9Bxa,UAAW,WACTtQ,KAAK8qB,WAAa,GAClB9qB,KAAKoM,cAEPjE,QAAS,WACP,IAAK,GAAI0b,GAAOzQ,UAAUvV,OAAQ4X,EAAO9Q,MAAMkf,GAAOC,EAAO,EAAUD,EAAPC,EAAaA,IAC3ErO,EAAKqO,GAAQ1Q,UAAU0Q,EAGzB,IAAIyH,GAAe9V,EAAKE,OACxB1X,GAAEwB,KAAKO,KAAKkqB,SAAU,SAAU5sB,EAAGmX,GAC7BA,EAAQ2V,WACV3V,EAAQqF,OAAO/b,OAAO6C,UAAU2qB,GAAcpY,MAAMsB,EAAQqF,OAAQrE,MAI1EjL,UAAW,SAAmBuS,GAC5B,GAAIuN,GAAkB,IAOtB,OANArsB,GAAEwB,KAAKO,KAAKkqB,SAAU,SAAU5sB,EAAGmX,GACjC,MAAIA,GAAQvG,WAAW,KAAO6O,GAC5BuN,EAAkB7V,GACX,GAFT,SAKK6V,EAAgBxQ,SAI3B/b,EAAOJ,QAAUqB,OAEXwsB,IAAI,SAASnuB,EAAQU,EAAOJ,GAClC,YAEA,IAAI8tB,GAAQ5F,KAAK4F,MAGb9H,EAAW,SAAkB3V,GAC/B,MAAOyd,GAAMzd,EAAK,SAAUG,EAAK1J,GAC/B,MAAiB,aAAVA,EAAuByL,EAAAA,EAAWzL,IAI7C1G,GAAOJ,QAAUgmB,OAEX+H,IAAI,SAASruB,EAAQU,EAAOJ,GAClC,YAEA,IAAI+lB,GAASrmB,EAAQ,aACjBsmB,EAAWtmB,EAAQ,eACnBkX,EAAelX,EAAQ,mBAE3BU,GAAOJ,SACL+lB,OAAQA,EACRC,SAAUA,EACVpP,aAAcA,KAGboX,cAAc,GAAGC,mBAAmB,GAAGC,YAAY,KAAKC,IAAI,SAASzuB,EAAQU,EAAOJ,GACvF,YAEA,IAAI4W,GAAe,SAAsBwX,GACvC,MAAuB,gBAATA,GAAoBC,EAAaD,GAAQE,EAAaF,IAGlEE,EAAe,SAAsBC,GACvC,MAAe,KAARA,EAAa,IAAMA,GAGxBF,EAAe,SAAsBG,GACvC,MAAOA,KAAQjc,EAAAA,EAAW,IAAMic,EAGlCpuB,GAAOJ,QAAU4W,OAEX6X,IAAI,SAAS/uB,EAAQU,EAAOJ,GAClC,YAEA,IAAImoB,GAAYD,KAAKC,UAGjBpC,EAAS,SAAgB1V,GAC3B,MAAO8X,GAAU9X,EAAK,SAAUG,EAAK1J,GACnC,MAAOA,KAAUyL,EAAAA,EAAW,WAAazL,IAI7C1G,GAAOJ,QAAU+lB,OAEX2I,IAAI,SAAShvB,EAAQU,EAAOJ,GAClC,YAEA,IAAI+O,GAAiB,SAAwB7B,EAAUC,GACrD,MAAoB,QAAbD,GAAmC,kBAAdC,GAG1Bgd,EAAkB,SAAyBjd,EAAUC,GACvD,MAAI4B,GAAe7B,EAAUC,GACpB,6BAEF,eAAiBD,EAAW,IAAMC,EAAY,KAGnDvL,EAAa,SAAoBsL,EAAUC,EAAWjM,GACxD,MAAI6N,GAAe7B,EAAUC,GACpB,6BAGF,eAAiBD,EAAW,IAAMC,EAAY,IAAMjM,EAAO,IAGpEd,GAAOJ,SACL+O,eAAgBA,EAChBob,gBAAiBA,EACjBvoB,WAAYA,QAGR+sB,IAAI,SAASjvB,EAAQU,EAAOJ,GASlC,QAAS4uB,KACAC,GAAaC,IAGlBD,GAAW,EACPC,EAAa5uB,OACb6uB,EAAQD,EAAaE,OAAOD,GAE5BE,EAAa,GAEbF,EAAM7uB,QACNgvB,KAIR,QAASA,KACL,IAAIL,EAAJ,CAGA,GAAIM,GAAU3d,WAAWod,EACzBC,IAAW,CAGX,KADA,GAAIvB,GAAMyB,EAAM7uB,OACVotB,GAAK,CAGP,IAFAwB,EAAeC,EACfA,OACSE,EAAa3B,GACdwB,GACAA,EAAaG,GAAYG,KAGjCH,GAAa,GACb3B,EAAMyB,EAAM7uB,OAEhB4uB,EAAe,KACfD,GAAW,EACXxB,aAAa8B,IAiBjB,QAASE,GAAKC,EAAKC,GACfltB,KAAKitB,IAAMA,EACXjtB,KAAKktB,MAAQA,EAYjB,QAASC,MAzET,GAGIV,GAHAW,EAAUrvB,EAAOJ,WACjB+uB,KACAF,GAAW,EAEXI,EAAa,EAyCjBQ,GAAQC,SAAW,SAAUJ,GACzB,GAAIxX,GAAO,GAAI9Q,OAAMyO,UAAUvV,OAAS,EACxC,IAAIuV,UAAUvV,OAAS,EACnB,IAAK,GAAIP,GAAI,EAAGA,EAAI8V,UAAUvV,OAAQP,IAClCmY,EAAKnY,EAAI,GAAK8V,UAAU9V,EAGhCovB,GAAMloB,KAAK,GAAIwoB,GAAKC,EAAKxX,IACJ,IAAjBiX,EAAM7uB,QAAiB2uB,GACvBrd,WAAW0d,EAAY,IAS/BG,EAAKpsB,UAAUmsB,IAAM,WACjB/sB,KAAKitB,IAAI9Z,MAAM,KAAMnT,KAAKktB,QAE9BE,EAAQE,MAAQ,UAChBF,EAAQG,SAAU,EAClBH,EAAQI,OACRJ,EAAQK,QACRL,EAAQM,QAAU,GAClBN,EAAQO,YAIRP,EAAQvlB,GAAKslB,EACbC,EAAQQ,YAAcT,EACtBC,EAAQS,KAAOV,EACfC,EAAQU,IAAMX,EACdC,EAAQW,eAAiBZ,EACzBC,EAAQY,mBAAqBb,EAC7BC,EAAQa,KAAOd,EAEfC,EAAQc,QAAU,SAAU3vB,GACxB,KAAM,IAAIf,OAAM,qCAGpB4vB,EAAQe,IAAM,WAAc,MAAO,KACnCf,EAAQgB,MAAQ,SAAUvG,GACtB,KAAM,IAAIrqB,OAAM,mCAEpB4vB,EAAQiB,MAAQ,WAAa,MAAO,SAE9BC,IAAI,SAASjxB,EAAQU,EAAOJ,IAClC,SAAWyvB,EAAQmB,IASnB,WACI,YACA,SAASC,GAAiCvoB,GACxC,MAAoB,kBAANA,IAAkC,gBAANA,IAAwB,OAANA,EAG9D,QAASwoB,GAA2BxoB,GAClC,MAAoB,kBAANA,GAGhB,QAASyoB,GAAgCzoB,GACvC,MAAoB,gBAANA,IAAwB,OAANA,EAgBlC,QAAS0oB,MAYT,QAASC,GAAyBvI,EAAWwI,GAC3C,IAAK,GAAIvxB,GAAE,EAAGI,EAAE2oB,EAAUxoB,OAAUH,EAAFJ,EAAKA,IACrC,GAAI+oB,EAAU/oB,KAAOuxB,EAAY,MAAOvxB,EAG1C,OAAO,GAGT,QAASwxB,GAA8BC,GACrC,GAAI1I,GAAY0I,EAAOC,iBAMvB,OAJK3I,KACHA,EAAY0I,EAAOC,sBAGd3I,EAkMT,QAAS4I,GAA2B1wB,EAAMkG,GACxC,MAAa,YAATlG,MAIF2wB,IAA4B,GAAE,QAASzqB,GAIhB,IAArB2O,UAAUvV,OAGLqxB,GAAwB3wB,QAF/B2wB,GAAwB3wB,GAAQkG,GAQpC,QAAS0qB,KACPhgB,WAAW,WAET,IAAK,GADDigB,GACK9xB,EAAI,EAAGA,EAAI+xB,GAA2BxxB,OAAQP,IAAK,CAC1D8xB,EAAQC,GAA2B/xB,EAEnC,IAAIgyB,GAAUF,EAAME,OAEpBA,GAAQC,KAAOD,EAAQnhB,IAAMmhB,EAAQ/f,GACrC+f,EAAQE,UAAYF,EAAQnhB,IAAMmhB,EAAQG,QACtCH,EAAQrjB,QACVqjB,EAAQI,MAAQJ,EAAQrjB,MAAMyjB,OAGhCR,GAAiC,QAAEE,EAAM7wB,KAAM6wB,EAAME,SAEvDD,GAA2BxxB,OAAS,GACnC,IAGL,QAAS8xB,GAAgCC,EAAWC,EAASC,GACvD,IAAMT,GAA2B7qB,MACnCjG,KAAMqxB,EACNN,SACEnhB,IAAK0hB,EAAQE,SACbxgB,GAAKsgB,EAAQG,IACbJ,UAAWA,EACX/X,OAAQgY,EAAQI,QAChBR,QAASK,GAASA,EAAME,IACxBrV,MAAOkV,EAAQK,OACfC,UAAWC,KACXnkB,MAAOijB,GAAwB,yBAA2B,GAAI1xB,OAAMqyB,EAAQK,QAAU,SAEtFf,IAIN,QAASkB,GAAoBC,EAAeC,EAAa5V,GACvD,GAAIpV,GAASvF,KACTR,EAAQ+F,EAAOirB,MAEnB,IAAIhxB,IAAUixB,KAAkCH,GAAiB9wB,IAAUkxB,KAAiCH,EAE1G,MADArB,IAAwByB,YAAcC,GAA6B,UAAWrrB,EAAQA,GAC/EA,CAGTA,GAAOsrB,SAAW,IAElB,IAAIf,GAAQ,GAAIvqB,GAAO0I,YAAY6iB,EAA0BnW,GACzDoW,EAASxrB,EAAO0qB,OAIpB,IAFAf,GAAwByB,YAAcC,GAA6B,UAAWrrB,EAAQuqB,GAElFtwB,EAAO,CACT,GAAIqvB,GAAWzb,UAAU5T,EAAQ,EACjC0vB,IAAwB8B,MAAM,WAC5BC,EAAmCzxB,EAAOswB,EAAOjB,EAAUkC,SAG7DG,GAA8B3rB,EAAQuqB,EAAOQ,EAAeC,EAG9D,OAAOT,GAGT,QAASqB,GAAkCpC,EAAQpU,GAEjD,GAAIyW,GAAcpxB,IAElB,IAAI+uB,GAA4B,gBAAXA,IAAuBA,EAAO9gB,cAAgBmjB,EACjE,MAAOrC,EAGT,IAAIc,GAAU,GAAIuB,GAAYN,EAA0BnW,EAExD,OADA0W,GAA4BxB,EAASd,GAC9Bc,EAGT,QAASyB,GAAuC9xB,EAAOiH,EAAUhC,GAC/D,MAAIjF,KAAUixB,IAEVjxB,MAAO,YACPiF,MAAOA,IAIPjF,MAAO,WACP0S,OAAQzN,GAKd,QAAS8sB,GAAgCH,EAAaI,EAAOC,EAAe9W,GAC1E3a,KAAK0xB,qBAAuBN,EAC5BpxB,KAAK6vB,QAAU,GAAIuB,GAAYN,EAA0BnW,GACzD3a,KAAK2xB,eAAiBF,EAElBzxB,KAAK4xB,eAAeJ,IACtBxxB,KAAK6xB,OAAaL,EAClBxxB,KAAKnC,OAAa2zB,EAAM3zB,OACxBmC,KAAK8xB,WAAaN,EAAM3zB,OAExBmC,KAAK+xB,QAEe,IAAhB/xB,KAAKnC,OACPm0B,EAA4BhyB,KAAK6vB,QAAS7vB,KAAKiwB,UAE/CjwB,KAAKnC,OAASmC,KAAKnC,QAAU,EAC7BmC,KAAKiyB,aACmB,IAApBjyB,KAAK8xB,YACPE,EAA4BhyB,KAAK6vB,QAAS7vB,KAAKiwB,WAInDiC,EAA2BlyB,KAAK6vB,QAAS7vB,KAAKmyB,oBA8FlD,QAASC,GAA0BC,EAAS1X,GAC1C,MAAO,IAAI2X,IAA6BtyB,KAAMqyB,GAAS,EAA4B1X,GAAOkV,QAG5F,QAAS0C,GAA4BF,EAAS1X,GAa5C,QAAS2V,GAAc7rB,GACrB4sB,EAA4BxB,EAASprB,GAGvC,QAAS8rB,GAAYre,GACnBggB,EAA2BrC,EAAS3d,GAhBtC,GAAIkf,GAAcpxB,KAEd6vB,EAAU,GAAIuB,GAAYN,EAA0BnW,EAExD,KAAK6X,GAAwBH,GAE3B,MADAH,GAA2BrC,EAAS,GAAI/qB,WAAU,oCAC3C+qB,CAaT,KAAK,GAVDhyB,GAASw0B,EAAQx0B,OAUZP,EAAI,EAAGuyB,EAAQW,SAAWiC,IAAmC50B,EAAJP,EAAYA,IAC5E4zB,EAA8BE,EAAYjL,QAAQkM,EAAQ/0B,IAAK2G,OAAWqsB,EAAeC,EAG3F,OAAOV,GAGT,QAAS6C,GAAgCxgB,EAAQyI,GAE/C,GAAIyW,GAAcpxB,KACd6vB,EAAU,GAAIuB,GAAYN,EAA0BnW,EAExD,OADAuX,GAA2BrC,EAAS3d,GAC7B2d,EAOT,QAAS8C,KACP,KAAM,IAAI7tB,WAAU,sFAGtB,QAAS8tB,KACP,KAAM,IAAI9tB,WAAU,yHAGtB,QAAS+tB,GAA0BC,EAAUnY,GAC3C3a,KAAKgwB,IAAM+C,KACX/yB,KAAKkwB,OAASvV,EACd3a,KAAKwwB,OAASvsB,OACdjE,KAAKiwB,QAAUhsB,OACfjE,KAAKgzB,gBAEL9D,GAAwByB,YAAcC,GAA6B,UAAW5wB,MAE1E8wB,IAA6BgC,IACX,kBAAbA,IAA2BH,IAClC3yB,eAAgB6yB,GAA4BI,EAAsCjzB,KAAM8yB,GAAYF,KAsTxG,QAAUM,KACR,MAAO,IAAIpuB,WAAU,wDAGvB,QAASgsB,MAQT,QAASqC,GAA4BtD,GACnC,IACE,MAAOA,GAAQ7kB,KACf,MAAMiB,GAEN,MADAmnB,IAAmCnnB,MAAQA,EACpCmnB,IAIX,QAASC,GAA4BroB,EAAMvG,EAAO6uB,EAAoBC,GACpE,IACEvoB,EAAKpN,KAAK6G,EAAO6uB,EAAoBC,GACrC,MAAM12B,GACN,MAAOA,IAIX,QAAS22B,GAA0C3D,EAAS4D,EAAUzoB,GACpEkkB,GAAwB8B,MAAM,SAASnB,GACrC,GAAI6D,IAAS,EACTznB,EAAQonB,EAA4BroB,EAAMyoB,EAAU,SAAShvB,GAC3DivB,IACJA,GAAS,EACLD,IAAahvB,EACf4sB,EAA4BxB,EAASprB,EAAOR,QAE5C+tB,EAA4BnC,EAASprB,KAEtC,SAASyN,GACNwhB,IACJA,GAAS,EAETxB,EAA2BrC,EAAS3d,KACnC,YAAc2d,EAAQK,QAAU,sBAE9BwD,GAAUznB,IACbynB,GAAS,EACTxB,EAA2BrC,EAAS5jB,KAErC4jB,GAGL,QAAS8D,GAAsC9D,EAAS4D,GAClDA,EAASjD,SAAWC,GACtBuB,EAA4BnC,EAAS4D,EAASxD,SACrCwD,EAASjD,SAAWE,IAC7B+C,EAAS5C,SAAW,KACpBqB,EAA2BrC,EAAS4D,EAASxD,UAE7CiB,EAA8BuC,EAAUxvB,OAAW,SAASQ,GACtDgvB,IAAahvB,EACf4sB,EAA4BxB,EAASprB,EAAOR,QAE5C+tB,EAA4BnC,EAASprB,IAEtC,SAASyN,GACVggB,EAA2BrC,EAAS3d,KAK1C,QAAS0hB,GAAwC/D,EAASgE,EAAe7oB,GACnE6oB,EAAc5lB,cAAgB4hB,EAAQ5hB,aACtCjD,IAAS8oB,IACT7lB,YAAYkY,UAAY4N,GAC1BJ,EAAsC9D,EAASgE,GAE3C7oB,IAASooB,GACXlB,EAA2BrC,EAASuD,GAAmCnnB,OACrDhI,SAAT+G,EACTgnB,EAA4BnC,EAASgE,GAC5BpF,EAA2BzjB,GACpCwoB,EAA0C3D,EAASgE,EAAe7oB,GAElEgnB,EAA4BnC,EAASgE,GAK3C,QAASxC,GAA4BxB,EAASprB,GACxCorB,IAAYprB,EACdutB,EAA4BnC,EAASprB,GAC5B+pB,EAAiC/pB,GAC1CmvB,EAAwC/D,EAASprB,EAAO0uB,EAA4B1uB,IAEpFutB,EAA4BnC,EAASprB,GAIzC,QAASuvB,GAAqCnE,GACxCA,EAAQgB,UACVhB,EAAQgB,SAAShB,EAAQI,SAG3BgE,EAA4BpE,GAG9B,QAASmC,GAA4BnC,EAASprB,GACxCorB,EAAQW,SAAWiC,KAEvB5C,EAAQI,QAAUxrB,EAClBorB,EAAQW,OAASC,GAEmB,IAAhCZ,EAAQmD,aAAan1B,OACnBqxB,GAAwByB,YAC1BC,GAA6B,YAAaf,GAG5CX,GAAwB8B,MAAMiD,EAA6BpE,IAI/D,QAASqC,GAA2BrC,EAAS3d,GACvC2d,EAAQW,SAAWiC,KACvB5C,EAAQW,OAASE,GACjBb,EAAQI,QAAU/d,EAClBgd,GAAwB8B,MAAMgD,EAAsCnE,IAGtE,QAASqB,GAA8B3rB,EAAQuqB,EAAOQ,EAAeC,GACnE,GAAI2D,GAAc3uB,EAAOytB,aACrBn1B,EAASq2B,EAAYr2B,MAEzB0H,GAAOsrB,SAAW,KAElBqD,EAAYr2B,GAAUiyB,EACtBoE,EAAYr2B,EAAS4yB,IAAiCH,EACtD4D,EAAYr2B,EAAS6yB,IAAiCH,EAEvC,IAAX1yB,GAAgB0H,EAAOirB,QACzBtB,GAAwB8B,MAAMiD,EAA6B1uB,GAI/D,QAAS0uB,GAA4BpE,GACnC,GAAIqE,GAAcrE,EAAQmD,aACtBmB,EAAUtE,EAAQW,MAMtB,IAJItB,GAAwByB,YAC1BC,GAA6BuD,IAAY1D,GAAgC,YAAc,WAAYZ,GAG1E,IAAvBqE,EAAYr2B,OAAhB,CAIA,IAAK,GAFDiyB,GAAOjB,EAAUhX,EAASgY,EAAQI,QAE7B3yB,EAAI,EAAGA,EAAI42B,EAAYr2B,OAAQP,GAAK,EAC3CwyB,EAAQoE,EAAY52B,GACpBuxB,EAAWqF,EAAY52B,EAAI62B,GAEvBrE,EACFmB,EAAmCkD,EAASrE,EAAOjB,EAAUhX,GAE7DgX,EAAShX,EAIbgY,GAAQmD,aAAan1B,OAAS,GAGhC,QAASu2B,KACPp0B,KAAKiM,MAAQ,KAKf,QAASooB,GAA6BxF,EAAUhX,GAC9C,IACE,MAAOgX,GAAShX,GAChB,MAAMhb,GAEN,MADAy3B,IAAoCroB,MAAQpP,EACrCy3B,IAIX,QAASrD,GAAmCkD,EAAStE,EAAShB,EAAUhX,GACtE,GACIpT,GAAOwH,EAAOsoB,EAAWC,EADzBC,EAAchG,EAA2BI,EAG7C,IAAI4F,GAWF,GAVAhwB,EAAQ4vB,EAA6BxF,EAAUhX,GAE3CpT,IAAU6vB,IACZE,GAAS,EACTvoB,EAAQxH,EAAMwH,MACdxH,EAAQ,MAER8vB,GAAY,EAGV1E,IAAYprB,EAEd,WADAytB,GAA2BrC,EAASqD,SAKtCzuB,GAAQoT,EACR0c,GAAY,CAGV1E,GAAQW,SAAWiC,KAEZgC,GAAeF,EACxBlD,EAA4BxB,EAASprB,GAC5B+vB,EACTtC,EAA2BrC,EAAS5jB,GAC3BkoB,IAAY1D,GACrBuB,EAA4BnC,EAASprB,GAC5B0vB,IAAYzD,IACrBwB,EAA2BrC,EAASprB,IAIxC,QAASwuB,GAAsCpD,EAASiD,GACtD,GAAI4B,IAAW,CACf,KACE5B,EAAS,SAAwBruB,GAC3BiwB,IACJA,GAAW,EACXrD,EAA4BxB,EAASprB,KACpC,SAAuByN,GACpBwiB,IACJA,GAAW,EACXxC,EAA2BrC,EAAS3d,MAEtC,MAAMrV,GACNq1B,EAA2BrC,EAAShzB,IAIxC,QAAS83B,GAAiCvD,EAAaiB,EAAS1X,GAC9D3a,KAAK40B,kBAAkBxD,EAAaiB,GAAS,EAAmC1X,GAUlF,QAASka,GAAiCxC,EAAS1X,GACjD,MAAO,IAAIga,GAAiCG,GAA2BzC,EAAS1X,GAAOkV,QAGzF,QAASkF,GAAkB7H,EAAOvS,GAChC,MAAOma,IAA0BE,IAAI9H,EAAOvS,GAM9C,QAASsa,GAAoBpG,EAAUqG,GACrCC,GAAqBC,IAAsBvG,EAC3CsG,GAAqBC,GAAqB,GAAKF,EAC/CE,IAAsB,EACK,IAAvBA,IAIFC,KAkBJ,QAASC,KACP,GAAIjI,GAAWD,EAAQC,SAGnBK,EAAUN,EAAQO,SAAS9R,KAAK0Z,MAAM,qCAI1C,OAHI5wB,OAAMC,QAAQ8oB,IAA2B,MAAfA,EAAQ,IAA6B,OAAfA,EAAQ,KAC1DL,EAAWmI,cAEN,WACLnI,EAASoI,IAKb,QAASC,KACP,MAAO,YACLC,GAAyBF,IAI7B,QAASG,KACP,GAAIC,GAAa,EACbC,EAAW,GAAIC,IAAuCN,GACtD5Z,EAAOxV,SAAS2vB,eAAe,GAGnC,OAFAF,GAASG,QAAQpa,GAAQqa,eAAe,IAEjC,WACLra,EAAK5Q,KAAQ4qB,IAAeA,EAAa,GAK7C,QAASM,KACP,GAAIC,GAAU,GAAIC,eAElB,OADAD,GAAQE,MAAMC,UAAYd,EACnB,WACLW,EAAQI,MAAMC,YAAY,IAI9B,QAASC,KACP,MAAO,YACLvnB,WAAWsmB,EAAsB,IAKrC,QAASA,KACP,IAAK,GAAIn4B,GAAI,EAAO83B,GAAJ93B,EAAwBA,GAAG,EAAG,CAC5C,GAAIuxB,GAAWsG,GAAqB73B,GAChC43B,EAAMC,GAAqB73B,EAAE,EAEjCuxB,GAASqG,GAETC,GAAqB73B,GAAK2G,OAC1BkxB,GAAqB73B,EAAE,GAAK2G,OAG9BmxB,GAAqB,EAGvB,QAASuB,KACP,IACE,GAAI35B,GAAIK,EACJu5B,EAAQ55B,EAAE,QAEd,OADA24B,IAA2BiB,EAAMC,WAAaD,EAAME,aAC7CpB,IACP,MAAM74B,GACN,MAAO65B,MAiBX,QAASK,GAAsBpc,GAC7B,GAAIqc,KAOJ,OALAA,GAAkB,QAAI,GAAIlC,IAA0B,SAAS3O,EAASC,GACpE4Q,EAAkB,QAAI7Q,EACtB6Q,EAAiB,OAAI5Q,GACpBzL,GAEIqc,EAGT,QAASC,GAAwBC,EAAUC,EAAUxc,GACnD,MAAOma,IAA0BE,IAAIkC,EAAUvc,GAAO3P,KAAK,SAASosB,GAClE,IAAK3I,EAA2B0I,GAC9B,KAAM,IAAIryB,WAAU,wDAMtB,KAAK,GAHDjH,GAASu5B,EAAOv5B,OAChBw5B,EAAW,GAAI1yB,OAAM9G,GAEhBP,EAAI,EAAOO,EAAJP,EAAYA,IAC1B+5B,EAAS/5B,GAAK65B,EAASC,EAAO95B,GAGhC,OAAOw3B,IAA0BE,IAAIqC,EAAU1c,GAAO3P,KAAK,SAASqsB,GAIlE,IAAK,GAHDrQ,GAAU,GAAIriB,OAAM9G,GACpBy5B,EAAY,EAEPh6B,EAAI,EAAOO,EAAJP,EAAYA,IACtB+5B,EAAS/5B,KACX0pB,EAAQsQ,GAAaF,EAAO95B,GAC5Bg6B,IAMJ,OAFAtQ,GAAQnpB,OAASy5B,EAEVtQ,MAMb,QAASuQ,GAAmCnG,EAAarC,EAAQpU,GAC/D3a,KAAK40B,kBAAkBxD,EAAarC,GAAQ,EAAMpU,GA4CpD,QAAS6c,IAAmCpG,EAAarC,EAAQpU,GAC/D3a,KAAK40B,kBAAkBxD,EAAarC,GAAQ,EAAOpU,GAWrD,QAAS8c,IAAmC1I,EAAQpU,GAClD,MAAO,IAAI6c,IAAmC1C,GAA2B/F,EAAQpU,GAAOkV,QAG1F,QAAS6H,IAAoB3I,EAAQpU,GACnC,MAAO,IAAIgd,IAA+B7C,GAA2B/F,EAAQpU,GAAOkV,QAGtF,QAAS+H,IAAkBV,EAAUW,EAAOld,GAC1C,MAAOma,IAA0BE,IAAIkC,EAAUvc,GAAO3P,KAAK,SAASosB,GAClE,IAAK3I,EAA2BoJ,GAC9B,KAAM,IAAI/yB,WAAU,qDAMtB,KAAK,GAHDjH,GAASu5B,EAAOv5B,OAChBmpB,EAAU,GAAIriB,OAAM9G,GAEfP,EAAI,EAAOO,EAAJP,EAAYA,IAC1B0pB,EAAQ1pB,GAAKu6B,EAAMT,EAAO95B,GAG5B,OAAOw3B,IAA0BE,IAAIhO,EAASrM,KAKlD,QAASmd,MACP93B,KAAKyE,MAAQR,OAMf,QAAS8zB,IAAuB/pB,GAC9B,IACC,MAAOA,GAAIhD,KACV,MAAMiB,GAEN,MADA+rB,IAAqBvzB,MAAOwH,EACrB+rB,IAKX,QAASC,IAAwB16B,EAAGN,EAAGG,GACrC,IACEG,EAAE4V,MAAMlW,EAAGG,GACX,MAAM6O,GAEN,MADA+rB,IAAqBvzB,MAAQwH,EACtB+rB,IAIX,QAASE,IAA0BC,EAAGC,GAOpC,IAAK,GALD75B,GACAjB,EAFA0Q,KAGAnQ,EAASs6B,EAAEt6B,OACX4X,EAAO,GAAI9Q,OAAM9G,GAEZoI,EAAI,EAAOpI,EAAJoI,EAAYA,IAC1BwP,EAAKxP,GAAKkyB,EAAElyB,EAGd,KAAK3I,EAAI,EAAGA,EAAI86B,EAAcv6B,OAAQP,IACpCiB,EAAO65B,EAAc96B,GACrB0Q,EAAIzP,GAAQkX,EAAKnY,EAAI,EAGvB,OAAO0Q,GAGT,QAASqqB,IAA2BF,GAIlC,IAAK,GAHDt6B,GAASs6B,EAAEt6B,OACX4X,EAAO,GAAI9Q,OAAM9G,EAAS,GAErBP,EAAI,EAAOO,EAAJP,EAAYA,IAC1BmY,EAAKnY,EAAI,GAAK66B,EAAE76B,EAGlB,OAAOmY,GAGT,QAAS6iB,IAA4BttB,EAAM6kB,GACzC,OACE7kB,KAAM,SAASutB,EAAehI,GAC5B,MAAOvlB,GAAKpN,KAAKiyB,EAAS0I,EAAehI,KAK/C,QAASiI,IAAyBC,EAAU1iB,GAC1C,GAAI2iB,GAAK,WAOP,IAAK,GAHDxD,GAHAyD,EAAO34B,KACPtC,EAAI0V,UAAUvV,OACd4X,EAAO,GAAI9Q,OAAMjH,EAAI,GAErBk7B,GAAe,EAEVt7B,EAAI,EAAOI,EAAJJ,IAASA,EAAG,CAG1B,GAFA43B,EAAM9hB,UAAU9V,IAEXs7B,EAAc,CAGjB,GADAA,EAAeC,GAAiC3D,GAC5C0D,IAAiBE,GAA+B,CAClD,GAAIC,GAAI,GAAIjE,IAA0BhE,EAEtC,OADAoB,GAA2B6G,EAAGD,GAA8Br0B,OACrDs0B,EACEH,GAAgBA,KAAiB,IAC1C1D,EAAMoD,GAA4BM,EAAc1D,IAGpDzf,EAAKnY,GAAK43B,EAGZ,GAAIrF,GAAU,GAAIiF,IAA0BhE,EAe5C,OAbArb,GAAK/X,GAAK,SAASgH,EAAKqF,GAClBrF,EACFwtB,EAA2BrC,EAASnrB,GACjBT,SAAZ8R,EACPsb,EAA4BxB,EAAS9lB,GAC9BgM,KAAY,EACnBsb,EAA4BxB,EAASwI,GAA2BjlB,YACzDof,GAAwBzc,GAC/Bsb,EAA4BxB,EAASqI,GAA0B9kB,UAAW2C,IAE1Esb,EAA4BxB,EAAS9lB,IAGrC6uB,EACKI,GAAkCnJ,EAASpa,EAAMgjB,EAAUE,GAE3DM,GAAgCpJ,EAASpa,EAAMgjB,EAAUE,GAMpE,OAFAD,GAAGQ,UAAYT,EAERC,EAKT,QAASO,IAAgCpJ,EAASpa,EAAMgjB,EAAUE,GAChE,GAAI5H,GAASkH,GAAwBQ,EAAUE,EAAMljB,EAIrD,OAHIsb,KAAWiH,IACb9F,EAA2BrC,EAASkB,EAAOtsB,OAEtCorB,EAGT,QAASmJ,IAAkCnJ,EAASpa,EAAMgjB,EAAUE,GAClE,MAAO7D,IAA0BE,IAAIvf,GAAMzK,KAAK,SAASyK,GACvD,GAAIsb,GAASkH,GAAwBQ,EAAUE,EAAMljB,EAIrD,OAHIsb,KAAWiH,IACb9F,EAA2BrC,EAASkB,EAAOtsB,OAEtCorB,IAIX,QAASgJ,IAAiC3D,GACxC,MAAIA,IAAsB,gBAARA,GACZA,EAAIjnB,cAAgB6mB,IACf,EAEAiD,GAAuB7C,IAGzB,EAiBX,QAASiE,IAAoBjM,EAAOvS,GAClC,MAAOma,IAA0BsE,KAAKlM,EAAOvS,GAG/C,QAAS0e,IAAwBnnB,EAAQyI,GACvC,MAAOma,IAA0B1O,OAAOlU,EAAQyI,GAGlD,QAAS2e,IAA0B70B,EAAOkW,GACxC,MAAOma,IAA0B3O,QAAQ1hB,EAAOkW,GAGlD,QAAS4e,IAA0BrnB,GAIjC,KAHA/C,YAAW,WACT,KAAM+C,KAEFA,EAUR,QAASsnB,IAAgB3K,EAAUqG,GACjChG,GAAwB8B,MAAMnC,EAAUqG,GAG1C,QAASuE,MACPvK,GAA4B,GAAE/b,MAAM+b,GAAyB9b,WAG/D,QAASsmB,MACPxK,GAA6B,IAAE/b,MAAM+b,GAAyB9b,WA1/ChE,GAAIumB,GAMFA,IALGh1B,MAAMC,QAKkBD,MAAMC,QAJN,SAAUqB,GACnC,MAA6C,mBAAtCpB,OAAOjE,UAAU4Y,SAAS5b,KAAKqI,GAM1C,IAAIusB,IAA0BmH,GAE1BvJ,GAAsBwJ,KAAKC,KAAO,WAAa,OAAO,GAAID,OAAOE,WAIjEC,GAA4Bl1B,OAAOyO,QAAU,SAAUpW,GACzD,GAAIkW,UAAUvV,OAAS,EACrB,KAAM,IAAIL,OAAM,gCAElB,IAAiB,gBAANN,GACT,KAAM,IAAI4H,WAAU,6BAGtB,OADA6pB,GAAkB/tB,UAAY1D,EACvB,GAAIyxB,IAoBTqL,IA4CFC,MAAS,SAASlL,GAKhB,MAJAA,GAAW,GAAS/uB,KAAS,GAC7B+uB,EAAY,IAAQ/uB,KAAU,IAC9B+uB,EAAgB,QAAI/uB,KAAc,QAClC+uB,EAAOC,kBAAoB/qB,OACpB8qB,GAoBTlnB,GAAM,SAAS+nB,EAAWf,GACxB,GAAwB,kBAAbA,GACT,KAAM,IAAI/pB,WAAU,8BAGtB,IAAwDuhB,GAApD6T,EAAepL,EAA8B9uB,KAEjDqmB,GAAY6T,EAAatK,GAEpBvJ,IACHA,EAAY6T,EAAatK,OAG2B,KAAlDhB,EAAyBvI,EAAWwI,IACtCxI,EAAU7hB,KAAKqqB,IA2CnBf,IAAO,SAAS8B,EAAWf,GACzB,GAAwDxI,GAAW8T,EAA/DD,EAAepL,EAA8B9uB,KAEjD,OAAK6uB,IAKLxI,EAAY6T,EAAatK,GAEzBuK,EAAQvL,EAAyBvI,EAAWwI,QAE9B,KAAVsL,GAAgB9T,EAAU+T,OAAOD,EAAO,UAR1CD,EAAatK,QAyCjByK,QAAW,SAASzK,EAAW7Z,EAAS4E,GACtC,GAAwD0L,GAAWwI,EAA/DqL,EAAepL,EAA8B9uB,KAEjD,IAAIqmB,EAAY6T,EAAatK,GAE3B,IAAK,GAAItyB,GAAE,EAAGA,EAAE+oB,EAAUxoB,OAAQP,KAChCuxB,EAAWxI,EAAU/oB,IAEZyY,EAAS4E,KAMtBuU,IACFyB,YAAY,EAGdqJ,IAAgC,MAAE9K,GAkBlC,IAAIG,OAsCAuB,GAA+BjB,EA4B/BmE,GAAyBzD,EAazB0D,GAAoC5C,EAyCpCmB,GAA+Bf,CAEnCA,GAAgC3wB,UAAUgxB,eAAiB,SAASJ,GAClE,MAAOgB,IAAwBhB,IAGjCD,EAAgC3wB,UAAUuxB,iBAAmB,WAC3D,MAAO,IAAI30B,OAAM,4CAGnB+zB,EAAgC3wB,UAAUmxB,MAAQ,WAChD/xB,KAAKiwB,QAAU,GAAItrB,OAAM3E,KAAKnC,SAGhC0zB,EAAgC3wB,UAAUqxB,WAAa,WAKrD,IAAK,GAJDp0B,GAAamC,KAAKnC,OAClBgyB,EAAa7vB,KAAK6vB,QAClB2B,EAAaxxB,KAAK6xB,OAEbv0B,EAAI,EAAGuyB,EAAQW,SAAWiC,IAAmC50B,EAAJP,EAAYA,IAC5E0C,KAAKs6B,WAAW9I,EAAMl0B,GAAIA,IAI9Bi0B,EAAgC3wB,UAAU25B,qBAAuB,SAASnL,EAAO9xB,GAC/E,GAAIk9B,GAAIx6B,KAAK0xB,qBACTvL,EAAUqU,EAAErU,OAEhB,IAAIA,IAAY4N,GAAmC,CACjD,GAAI/oB,GAAOmoB,EAA4B/D,EAEvC,IAAIpkB,IAAS8oB,IACT1E,EAAMoB,SAAWiC,GACnBrD,EAAMyB,SAAW,KACjB7wB,KAAKy6B,WAAWrL,EAAMoB,OAAQlzB,EAAG8xB,EAAMa,aAClC,IAAoB,kBAATjlB,GAChBhL,KAAK8xB,aACL9xB,KAAKiwB,QAAQ3yB,GAAK0C,KAAK06B,YAAYjK,GAA+BnzB,EAAG8xB,OAChE,IAAIoL,IAAM1F,GAA2B,CAC1C,GAAIjF,GAAU,GAAI2K,GAAE1J,EACpB8C,GAAwC/D,EAAST,EAAOpkB,GACxDhL,KAAK26B,cAAc9K,EAASvyB,OAE5B0C,MAAK26B,cAAc,GAAIH,GAAE,SAASrU,GAAWA,EAAQiJ,KAAY9xB,OAGnE0C,MAAK26B,cAAcxU,EAAQiJ,GAAQ9xB,IAIvCi0B,EAAgC3wB,UAAU05B,WAAa,SAASlL,EAAO9xB,GACjEoxB,EAAgCU,GAClCpvB,KAAKu6B,qBAAqBnL,EAAO9xB,IAEjC0C,KAAK8xB,aACL9xB,KAAKiwB,QAAQ3yB,GAAK0C,KAAK06B,YAAYjK,GAA+BnzB,EAAG8xB,KAIzEmC,EAAgC3wB,UAAU65B,WAAa,SAASj7B,EAAOlC,EAAGmH,GACxE,GAAIorB,GAAU7vB,KAAK6vB,OAEfA,GAAQW,SAAWiC,KACrBzyB,KAAK8xB,aAED9xB,KAAK2xB,gBAAkBnyB,IAAUkxB,GACnCwB,EAA2BrC,EAASprB,GAEpCzE,KAAKiwB,QAAQ3yB,GAAK0C,KAAK06B,YAAYl7B,EAAOlC,EAAGmH,IAIzB,IAApBzE,KAAK8xB,YACPE,EAA4BnC,EAAS7vB,KAAKiwB,UAI9CsB,EAAgC3wB,UAAU85B,YAAc,SAASl7B,EAAOlC,EAAGmH,GACzE,MAAOA,IAGT8sB,EAAgC3wB,UAAU+5B,cAAgB,SAAS9K,EAASvyB,GAC1E,GAAIs9B,GAAa56B,IAEjBkxB,GAA8BrB,EAAS5rB,OAAW,SAASQ,GACzDm2B,EAAWH,WAAWhK,GAA+BnzB,EAAGmH,IACvD,SAASyN,GACV0oB,EAAWH,WAAW/J,GAA8BpzB,EAAG4U,KAM3D,IAAI2oB,IAAgCzI,EA4BhC0I,GAAiCvI,EAQjCwI,GAAmCrI,EAEnCsI,GAA4B,QAAU5K,KAAwB,IAC9D2C,GAA4B,EAyB5B+B,GAA4BjC,CAGhCA,GAA0BoI,KAAOlH,GACjClB,EAA0BmC,IAAM6F,GAChChI,EAA0BuG,KAAO0B,GACjCjI,EAA0B1M,QAAU4N,GACpClB,EAA0BzM,OAAS2U,GAEnClI,EAA0BjyB,WACxBqN,YAAa4kB,EAEb9C,SAAUiL,GAEVnK,SAAU,SAAU3e,GAClB,GAAI2d,GAAU7vB,IACdkvB,IAAwBhX,MAAM,WACxB2X,EAAQgB,UACV3B,GAAiC,QAAE,QAAShd,EAAQ2d,EAAQK,WAuMlEllB,KAAM8oB,GA8BNoH,QAAS,SAAS3K,EAAa5V,GAC7B,MAAO3a,MAAKgL,KAAK/G,OAAWssB,EAAa5V,IA2C3CwgB,UAAW,SAAStM,EAAUlU,GAC5B,GAAIkV,GAAU7vB,KACViO,EAAc4hB,EAAQ5hB,WAE1B,OAAO4hB,GAAQ7kB,KAAK,SAASvG,GAC3B,MAAOwJ,GAAYkY,QAAQ0I,KAAY7jB,KAAK,WAC1C,MAAOvG,MAER,SAASyN,GACV,MAAOjE,GAAYkY,QAAQ0I,KAAY7jB,KAAK,WAC1C,MAAOiD,GAAYmY,OAAOlU,MAE3ByI,IASP,IAAI8X,IAAgC,OAChChC,GAAgC,EAChCC,GAAgC,EAEhC0C,GAAqC,GAAIgB,GAsKzCE,GAAsC,GAAIF,EAsE9CO,GAAiC/zB,UAAYm5B,GAAyBzH,GAA6B1xB,WACnG+zB,EAAiC/zB,UAAUg0B,kBAAoBtC,GAC/DqC,EAAiC/zB,UAAU85B,YAAcpJ,EACzDqD,EAAiC/zB,UAAUuxB,iBAAmB,WAC5D,MAAO,IAAI30B,OAAM,2CAMnB,IAOIm4B,IAmGAN,GA1GA+F,GAAgCvG,EAIhCwG,GAAwBtG,EACxBK,GAAqB,EAerBkG,OAd6B9hB,SAcJyb,GAEzBsG,GAAkD,mBAAXxzB,QAA0BA,OAAS9D,OAC1Eu3B,GAA+BD,OAC/BxF,GAAyCyF,GAA6BC,kBAAoBD,GAA6BE,uBACvHC,GAAwC,mBAAThD,OACd,mBAAZvL,IAAyD,wBAA3B5T,SAAS5b,KAAKwvB,GAGjDwO,GAAuD,mBAAtBC,oBACV,mBAAlBC,gBACmB,mBAAnBzF,gBAiDLlB,GAAuB,GAAIxwB,OAAM,IA6BnC0wB,IADEsG,GAC6BrG,IACtBS,GACsBH,IACtBgG,GACsBzF,IACWlyB,SAAjCs3B,IAAiE,kBAAZl+B,GAC/Bs5B,IAEAD,GAYjC,IAAIqF,IAA0BhF,EA+B1BiF,GAA2B/E,EAM3BU,GAAiCJ,CAErCA,GAAmC32B,UAAYm5B,GAAyBzH,GAA6B1xB,WACrG22B,EAAmC32B,UAAUg0B,kBAAoBtC,GACjEiF,EAAmC32B,UAAUmxB,MAAQ,WACnD/xB,KAAKiwB,YAGPsH,EAAmC32B,UAAUgxB,eAAiB,SAASJ,GACrE,MAAOA,IAA0B,gBAAVA,IAGzB+F,EAAmC32B,UAAUuxB,iBAAmB,WAC9D,MAAO,IAAI30B,OAAM,+CAGnB+5B,EAAmC32B,UAAUqxB,WAAa,WACxD,GAAI2I,GAAa56B,KACb6vB,EAAa+K,EAAW/K,QACxB2B,EAAaoJ,EAAW/I,OACxB7K,IAEJ,KAAK,GAAI7Y,KAAOqjB,GACV3B,EAAQW,SAAWiC,IAA+B5tB,OAAOjE,UAAUq7B,eAAer+B,KAAK4zB,EAAOrjB,IAChG6Y,EAAQxiB,MACNiC,SAAU0H,EACVihB,MAAOoC,EAAMrjB,IAKnB,IAAItQ,GAASmpB,EAAQnpB,MACrB+8B,GAAW9I,WAAaj0B,CAGxB,KAAK,GAFDkzB,GAEKzzB,EAAI,EAAGuyB,EAAQW,SAAWiC,IAAmC50B,EAAJP,EAAYA,IAC5EyzB,EAAS/J,EAAQ1pB,GACjBs9B,EAAWN,WAAWvJ,EAAO3B,MAAO2B,EAAOtqB,WAQ/C+wB,GAAmC52B,UAAYm5B,GAAyBpC,GAA+B/2B,WACvG42B,GAAmC52B,UAAUg0B,kBAAoBtC,GACjEkF,GAAmC52B,UAAU85B,YAAcpJ,EAE3DkG,GAAmC52B,UAAUuxB,iBAAmB,WAC9D,MAAO,IAAI30B,OAAM,6CAMnB,IA0KI0+B,IA1KAC,GAAiC1E,GAIjC2E,GAAyB1E,GAiBzB2E,GAAwBzE,GAMxBI,GAAuB,GAAIF,IAC3BgB,GAAgC,GAAIhB,IA+GpCwE,GAAyB9D,EAkC7B,IAAoB,gBAATG,MACTuD,GAA8BvD,SAGzB,CAAA,GAAsB,gBAAXpK,GAGhB,KAAM,IAAI/wB,OAAM,sCAFhB0+B,IAA8B3N,EAKhC,GAAIgO,IAA6BL,GAI7BM,GAAyBrD,GAIzBsD,GAA2BpD,GAI3BqD,GAA4BpD,GAO5BqD,GAA4BpD,EAGhCrK,IAAwB8B,MAAQsK,GAChCpM,GAAwBhX,MAAQ,SAAS0kB,GACvCztB,WAAWytB,EAAI,GAgBjB,IAAsB,mBAAX70B,SAA2E,gBAA1CA,QAAoC,4BAAgB,CAC9F,GAAI80B,IAAsB90B,OAAoC,2BAC9DknB,GAA2B,cAAc,EACzC,KAAK,GAAI6N,MAAuBD,IAC1BA,GAAoBZ,eAAea,KACrCrD,GAAaqD,GAAqBD,GAAoBC,KAK5D,GAAIC,KACF3D,KAAQoD,GACRtW,QAAW4O,GACXkI,WAAc5B,GACdjT,KAAQiU,GACRa,YAAed,GACfe,UAAaZ,GACbz0B,GAAM4xB,GACN3L,IAAO4L,GACPthB,IAAOikB,GACPc,OAAUnB,GACV7V,QAAWuW,GACXtW,OAAUqW,GACVzH,IAAOqG,GACP+B,QAAWT,GACXU,MAAStB,GACTuB,YAAetD,GACfuD,UAAatO,EACb+B,MAASwI,GAIW,mBAAXgE,SAAyBA,OAAY,IAC9CA,OAAO,WAAa,MAAOT,MACA,mBAAXh/B,IAA0BA,EAAgB,QAC1DA,EAAgB,QAAIg/B,GAC2B,mBAA/BR,MAChBA,GAAiC,KAAIQ,MAExCn/B,KAAKoC,QAGLpC,KAAKoC,KAAK3C,EAAQ,YAA8B,mBAAXkxB,QAAyBA,OAAyB,mBAAToK,MAAuBA,KAAyB,mBAAX5wB,QAAyBA,aAE5I01B,SAAW,UAAU","file":"algorithm_visualizer.min.js","sourcesContent":["/**\n * algorithm-visualizer - Algorithm Visualizer\n * @version v0.1.0\n * @author Jason Park & contributors\n * @link https://github.com/parkjs814/AlgorithmVisualizer#readme\n * @license MIT\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _$ = $;\nvar extend = _$.extend;\n\n\nvar cache = {\n  lastFileUsed: '',\n  files: {}\n};\n\nvar assertFileName = function assertFileName(name) {\n  if (!name) {\n    throw 'Missing file name';\n  }\n};\n\n/**\n * Global application cache\n */\nmodule.exports = {\n  getCachedFile: function getCachedFile(name) {\n    assertFileName(name);\n    return cache.files[name];\n  },\n  updateCachedFile: function updateCachedFile(name, updates) {\n    assertFileName(name);\n    if (!cache.files[name]) {\n      cache.files[name] = {};\n    }\n    extend(cache.files[name], updates);\n  },\n  getLastFileUsed: function getLastFileUsed() {\n    return cache.lastFileUsed;\n  },\n  setLastFileUsed: function setLastFileUsed(file) {\n    cache.lastFileUsed = file;\n  }\n};\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar Editor = require('../editor');\nvar TracerManager = require('../tracer_manager');\nvar DOM = require('../dom/setup');\n\nvar _require = require('../dom/loading_slider');\n\nvar showLoadingSlider = _require.showLoadingSlider;\nvar hideLoadingSlider = _require.hideLoadingSlider;\n\nvar _require2 = require('../utils');\n\nvar getFileDir = _require2.getFileDir;\n\n\nvar Cache = require('./cache');\n\nvar _$ = $;\nvar each = _$.each;\n\n\nvar state = {\n  isLoading: null,\n  editor: null,\n  tracerManager: null,\n  categories: null\n};\n\nvar initState = function initState(tracerManager) {\n  state.isLoading = false;\n  state.editor = new Editor(tracerManager);\n  state.tracerManager = tracerManager;\n  state.categories = {};\n};\n\n/**\n * Global application singleton.\n */\nvar App = function App() {\n\n  this.getIsLoading = function () {\n    return state.isLoading;\n  };\n\n  this.setIsLoading = function (loading) {\n    state.isLoading = loading;\n    if (loading) {\n      showLoadingSlider();\n    } else {\n      hideLoadingSlider();\n    }\n  };\n\n  this.getEditor = function () {\n    return state.editor;\n  };\n\n  this.getCategories = function () {\n    return state.categories;\n  };\n\n  this.getCategory = function (name) {\n    return state.categories[name];\n  };\n\n  this.setCategories = function (categories) {\n    state.categories = categories;\n  };\n\n  this.updateCategory = function (name, updates) {\n    $.extend(state.categories[name], updates);\n  };\n\n  this.getTracerManager = function () {\n    return state.tracerManager;\n  };\n\n  var tracerManager = TracerManager.init();\n\n  initState(tracerManager);\n  DOM.setup(tracerManager);\n};\n\nApp.prototype = Cache;\n\nmodule.exports = App;\n\n},{\"../dom/loading_slider\":5,\"../dom/setup\":6,\"../editor\":25,\"../tracer_manager\":49,\"../utils\":55,\"./cache\":1}],3:[function(require,module,exports){\n'use strict';\n\n/**\n * This is the main application instance.\n * Gets populated on page load. \n */\n\nmodule.exports = {};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar showAlgorithm = require('./show_algorithm');\nvar showCategories = require('./show_categories');\nvar showDescription = require('./show_description');\nvar showFiles = require('./show_files');\nvar showFirstAlgorithm = require('./show_first_algorithm');\n\nmodule.exports = {\n  showAlgorithm: showAlgorithm,\n  showCategories: showCategories,\n  showDescription: showDescription,\n  showFiles: showFiles,\n  showFirstAlgorithm: showFirstAlgorithm\n};\n\n},{\"./show_algorithm\":17,\"./show_categories\":18,\"./show_description\":19,\"./show_files\":20,\"./show_first_algorithm\":21}],5:[function(require,module,exports){\n'use strict';\n\nvar showLoadingSlider = function showLoadingSlider() {\n  $('#loading-slider').removeClass('loaded');\n};\n\nvar hideLoadingSlider = function hideLoadingSlider() {\n  $('#loading-slider').addClass('loaded');\n};\n\nmodule.exports = {\n  showLoadingSlider: showLoadingSlider,\n  hideLoadingSlider: hideLoadingSlider\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar setupDividers = require('./setup_dividers');\nvar setupDocument = require('./setup_document');\nvar setupFilesBar = require('./setup_files_bar');\nvar setupInterval = require('./setup_interval');\nvar setupModuleContainer = require('./setup_module_container');\nvar setupPoweredBy = require('./setup_powered_by');\nvar setupScratchPaper = require('./setup_scratch_paper');\nvar setupSideMenu = require('./setup_side_menu');\nvar setupTopMenu = require('./setup_top_menu');\nvar setupWindow = require('./setup_window');\n\n/**\n * Initializes elements once the app loads in the DOM. \n */\nvar setup = function setup() {\n\n  $('.btn input').click(function (e) {\n    e.stopPropagation();\n  });\n\n  // dividers\n  setupDividers();\n\n  // document\n  setupDocument();\n\n  // files bar\n  setupFilesBar();\n\n  // interval\n  setupInterval();\n\n  // module container\n  setupModuleContainer();\n\n  // powered by\n  setupPoweredBy();\n\n  // scratch paper\n  setupScratchPaper();\n\n  // side menu\n  setupSideMenu();\n\n  // top menu\n  setupTopMenu();\n\n  // window\n  setupWindow();\n};\n\nmodule.exports = {\n  setup: setup\n};\n\n},{\"./setup_dividers\":7,\"./setup_document\":8,\"./setup_files_bar\":9,\"./setup_interval\":10,\"./setup_module_container\":11,\"./setup_powered_by\":12,\"./setup_scratch_paper\":13,\"./setup_side_menu\":14,\"./setup_top_menu\":15,\"./setup_window\":16}],7:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar appInstance = require('../../app');\n\nvar addDividerToDom = function addDividerToDom(divider) {\n  var _divider = _slicedToArray(divider, 3);\n\n  var vertical = _divider[0];\n  var $first = _divider[1];\n  var $second = _divider[2];\n\n  var $parent = $first.parent();\n  var thickness = 5;\n\n  var $divider = $('<div class=\"divider\">');\n\n  var dragging = false;\n  if (vertical) {\n    (function () {\n      $divider.addClass('vertical');\n\n      var _left = -thickness / 2;\n      $divider.css({\n        top: 0,\n        bottom: 0,\n        left: _left,\n        width: thickness\n      });\n\n      var x = void 0;\n      $divider.mousedown(function (_ref) {\n        var pageX = _ref.pageX;\n\n        x = pageX;\n        dragging = true;\n      });\n\n      $(document).mousemove(function (_ref2) {\n        var pageX = _ref2.pageX;\n\n        if (dragging) {\n          var new_left = $second.position().left + pageX - x;\n          var percent = new_left / $parent.width() * 100;\n          percent = Math.min(90, Math.max(10, percent));\n          $first.css('right', 100 - percent + '%');\n          $second.css('left', percent + '%');\n          x = pageX;\n          appInstance.getTracerManager().resize();\n          $('.files_bar > .wrapper').scroll();\n        }\n      });\n\n      $(document).mouseup(function (e) {\n        dragging = false;\n      });\n    })();\n  } else {\n    (function () {\n\n      $divider.addClass('horizontal');\n      var _top = -thickness / 2;\n      $divider.css({\n        top: _top,\n        height: thickness,\n        left: 0,\n        right: 0\n      });\n\n      var y = void 0;\n      $divider.mousedown(function (_ref3) {\n        var pageY = _ref3.pageY;\n\n        y = pageY;\n        dragging = true;\n      });\n\n      $(document).mousemove(function (_ref4) {\n        var pageY = _ref4.pageY;\n\n        if (dragging) {\n          var new_top = $second.position().top + pageY - y;\n          var percent = new_top / $parent.height() * 100;\n          percent = Math.min(90, Math.max(10, percent));\n          $first.css('bottom', 100 - percent + '%');\n          $second.css('top', percent + '%');\n          y = pageY;\n          appInstance.getTracerManager().resize();\n        }\n      });\n\n      $(document).mouseup(function (e) {\n        dragging = false;\n      });\n    })();\n  }\n\n  $second.append($divider);\n};\n\nmodule.exports = function () {\n  var dividers = [['v', $('.sidemenu'), $('.workspace')], ['v', $('.viewer_container'), $('.editor_container')], ['h', $('.data_container'), $('.code_container')]];\n  for (var i = 0; i < dividers.length; i++) {\n    addDividerToDom(dividers[i]);\n  }\n};\n\n},{\"../../app\":3}],8:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../../app');\n\nmodule.exports = function () {\n  $(document).on('click', 'a', function (e) {\n    e.preventDefault();\n\n    if (!window.open($(undefined).attr('href'), '_blank')) {\n      alert('Please allow popups for this site');\n    }\n  });\n\n  $(document).mouseup(function (e) {\n    appInstance.getTracerManager().command('mouseup', e);\n  });\n};\n\n},{\"../../app\":3}],9:[function(require,module,exports){\n'use strict';\n\nvar definitelyBigger = function definitelyBigger(x, y) {\n  return x > y + 2;\n};\n\nmodule.exports = function () {\n\n  $('.files_bar > .btn-left').click(function () {\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var scrollLeft = $wrapper.scrollLeft();\n\n    $($wrapper.children('button').get().reverse()).each(function () {\n      var left = $(this).position().left;\n      var right = left + $(this).outerWidth();\n      if (0 > left) {\n        $wrapper.scrollLeft(scrollLeft + right - clipWidth);\n        return false;\n      }\n    });\n  });\n\n  $('.files_bar > .btn-right').click(function () {\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var scrollLeft = $wrapper.scrollLeft();\n\n    $wrapper.children('button').each(function () {\n      var left = $(this).position().left;\n      var right = left + $(this).outerWidth();\n      if (clipWidth < right) {\n        $wrapper.scrollLeft(scrollLeft + left);\n        return false;\n      }\n    });\n  });\n\n  $('.files_bar > .wrapper').scroll(function () {\n\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var $left = $wrapper.children('button:first-child');\n    var $right = $wrapper.children('button:last-child');\n    var left = $left.position().left;\n    var right = $right.position().left + $right.outerWidth();\n\n    if (definitelyBigger(0, left) && definitelyBigger(clipWidth, right)) {\n      var scrollLeft = $wrapper.scrollLeft();\n      $wrapper.scrollLeft(scrollLeft + clipWidth - right);\n      return;\n    }\n\n    var lefter = definitelyBigger(0, left);\n    var righter = definitelyBigger(right, clipWidth);\n    $wrapper.toggleClass('shadow-left', lefter);\n    $wrapper.toggleClass('shadow-right', righter);\n    $('.files_bar > .btn-left').attr('disabled', !lefter);\n    $('.files_bar > .btn-right').attr('disabled', !righter);\n  });\n};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar appInstance = require('../../app');\nvar Toast = require('../toast');\n\nvar parseFloat = Number.parseFloat;\n\n\nvar minInterval = 0.1;\nvar maxInterval = 10;\nvar startInterval = 0.5;\nvar stepInterval = 0.1;\n\nvar normalize = function normalize(sec) {\n\n  var interval = void 0;\n  var message = void 0;\n  if (sec < minInterval) {\n    interval = minInterval;\n    message = 'Interval of ' + sec + ' seconds is too low. Setting to min allowed interval of ' + minInterval + ' second(s).';\n  } else if (sec > maxInterval) {\n    interval = maxInterval;\n    message = 'Interval of ' + sec + ' seconds is too high. Setting to max allowed interval of ' + maxInterval + ' second(s).';\n  } else {\n    interval = sec;\n    message = 'Interval has been set to ' + sec + ' second(s).';\n  }\n\n  return [interval, message];\n};\n\nmodule.exports = function () {\n\n  var $interval = $('#interval');\n  $interval.val(startInterval);\n  $interval.attr({\n    max: maxInterval,\n    min: minInterval,\n    step: stepInterval\n  });\n\n  $('#interval').on('change', function () {\n    var tracerManager = appInstance.getTracerManager();\n\n    var _normalize = normalize(parseFloat($(this).val()));\n\n    var _normalize2 = _slicedToArray(_normalize, 2);\n\n    var seconds = _normalize2[0];\n    var message = _normalize2[1];\n\n\n    $(this).val(seconds);\n    tracerManager.interval = seconds * 1000;\n    Toast.showInfoToast(message);\n  });\n};\n\n},{\"../../app\":3,\"../toast\":22}],11:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../../app');\n\nmodule.exports = function () {\n\n  var $module_container = $('.module_container');\n\n  $module_container.on('mousedown', '.module_wrapper', function (e) {\n    appInstance.getTracerManager().findOwner(this).mousedown(e);\n  });\n\n  $module_container.on('mousemove', '.module_wrapper', function (e) {\n    appInstance.getTracerManager().findOwner(this).mousemove(e);\n  });\n\n  $module_container.on('DOMMouseScroll mousewheel', '.module_wrapper', function (e) {\n    appInstance.getTracerManager().findOwner(this).mousewheel(e);\n  });\n};\n\n},{\"../../app\":3}],12:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function () {\n  $('#powered-by').click(function () {\n    $('#powered-by-list button').toggleClass('collapse');\n  });\n};\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nvar Server = require('../../server');\nvar showAlgorithm = require('../show_algorithm');\n\nmodule.exports = function () {\n  $('#scratch-paper').click(function () {\n    var category = null;\n    var algorithm = 'scratch_paper';\n    Server.loadAlgorithm(category, algorithm).then(function (data) {\n      showAlgorithm(category, algorithm, data);\n    });\n  });\n};\n\n},{\"../../server\":43,\"../show_algorithm\":17}],14:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../../app');\n\nvar sidemenu_percent = void 0;\n\nmodule.exports = function () {\n  $('#navigation').click(function () {\n    var $sidemenu = $('.sidemenu');\n    var $workspace = $('.workspace');\n\n    $sidemenu.toggleClass('active');\n    $('.nav-dropdown').toggleClass('fa-caret-down fa-caret-up');\n\n    if ($sidemenu.hasClass('active')) {\n      $sidemenu.css('right', 100 - sidemenu_percent + '%');\n      $workspace.css('left', sidemenu_percent + '%');\n    } else {\n      sidemenu_percent = $workspace.position().left / $('body').width() * 100;\n      $sidemenu.css('right', 0);\n      $workspace.css('left', 0);\n    }\n\n    appInstance.getTracerManager().resize();\n  });\n};\n\n},{\"../../app\":3}],15:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../../app');\nvar Server = require('../../server');\nvar Toast = require('../toast');\n\nmodule.exports = function () {\n\n  // shared\n  $('#shared').mouseup(function () {\n    $(this).select();\n  });\n\n  $('#btn_share').click(function () {\n\n    var $icon = $(this).find('.fa-share');\n    $icon.addClass('fa-spin fa-spin-faster');\n\n    Server.shareScratchPaper().then(function (url) {\n      $icon.removeClass('fa-spin fa-spin-faster');\n      $('#shared').removeClass('collapse');\n      $('#shared').val(url);\n      Toast.showInfoToast('Shareable link is created.');\n    });\n  });\n\n  // control\n\n  $('#btn_run').click(function () {\n    $('#btn_trace').click();\n    var err = appInstance.getEditor().execute();\n    if (err) {\n      console.error(err);\n      Toast.showErrorToast(err);\n    }\n  });\n  $('#btn_pause').click(function () {\n    if (appInstance.getTracerManager().isPause()) {\n      appInstance.getTracerManager().resumeStep();\n    } else {\n      appInstance.getTracerManager().pauseStep();\n    }\n  });\n  $('#btn_prev').click(function () {\n    appInstance.getTracerManager().pauseStep();\n    appInstance.getTracerManager().prevStep();\n  });\n  $('#btn_next').click(function () {\n    appInstance.getTracerManager().pauseStep();\n    appInstance.getTracerManager().nextStep();\n  });\n\n  // description & trace\n\n  $('#btn_desc').click(function () {\n    $('.tab_container > .tab').removeClass('active');\n    $('#tab_desc').addClass('active');\n    $('.tab_bar > button').removeClass('active');\n    $(this).addClass('active');\n  });\n\n  $('#btn_trace').click(function () {\n    $('.tab_container > .tab').removeClass('active');\n    $('#tab_module').addClass('active');\n    $('.tab_bar > button').removeClass('active');\n    $(this).addClass('active');\n  });\n};\n\n},{\"../../app\":3,\"../../server\":43,\"../toast\":22}],16:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../../app');\n\nmodule.exports = function () {\n  $(window).resize(function () {\n    appInstance.getTracerManager().resize();\n  });\n};\n\n},{\"../../app\":3}],17:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../app');\n\nvar _require = require('../utils');\n\nvar isScratchPaper = _require.isScratchPaper;\n\n\nvar showDescription = require('./show_description');\nvar showFiles = require('./show_files');\n\nmodule.exports = function (category, algorithm, data) {\n  var $menu = void 0;\n  var category_name = void 0;\n  var algorithm_name = void 0;\n\n  if (isScratchPaper(category, algorithm)) {\n    $menu = $('#scratch-paper');\n    category_name = '';\n    algorithm_name = 'Scratch Paper';\n  } else {\n    $menu = $('[data-category=\"' + category + '\"][data-algorithm=\"' + algorithm + '\"]');\n    var categoryObj = appInstance.getCategory(category);\n    category_name = categoryObj.name;\n    algorithm_name = categoryObj.list[algorithm];\n  }\n\n  $('.sidemenu button').removeClass('active');\n  $menu.addClass('active');\n  $('#btn_desc').click();\n\n  $('#category').html(category_name);\n  $('#algorithm').html(algorithm_name);\n  $('#tab_desc > .wrapper').empty();\n  $('.files_bar > .wrapper').empty();\n  $('#explanation').html('');\n\n  appInstance.setLastFileUsed(null);\n  appInstance.getEditor().clearContent();\n\n  var files = data.files;\n\n\n  delete data.files;\n\n  showDescription(data);\n  showFiles(category, algorithm, files);\n};\n\n},{\"../app\":3,\"../utils\":55,\"./show_description\":19,\"./show_files\":20}],18:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../app');\nvar Server = require('../server');\nvar showAlgorithm = require('./show_algorithm');\n\nvar _$ = $;\nvar each = _$.each;\n\n\nvar addAlgorithmToCategoryDOM = function addAlgorithmToCategoryDOM(category, subList, algorithm) {\n  var $algorithm = $('<button class=\"indent collapse\">').append(subList[algorithm]).attr('data-algorithm', algorithm).attr('data-category', category).click(function () {\n    Server.loadAlgorithm(category, algorithm).then(function (data) {\n      showAlgorithm(category, algorithm, data);\n    });\n  });\n\n  $('#list').append($algorithm);\n};\n\nvar addCategoryToDOM = function addCategoryToDOM(category) {\n  var _appInstance$getCateg = appInstance.getCategory(category);\n\n  var categoryName = _appInstance$getCateg.name;\n  var categorySubList = _appInstance$getCateg.list;\n\n\n  var $category = $('<button class=\"category\">').append('<i class=\"fa fa-fw fa-caret-right\">').append(categoryName);\n\n  $category.click(function () {\n    $('[data-category=\"' + category + '\"]').toggleClass('collapse');\n    $(this).find('i.fa').toggleClass('fa-caret-right fa-caret-down');\n  });\n\n  $('#list').append($category);\n\n  each(categorySubList, function (algorithm) {\n    addAlgorithmToCategoryDOM(category, categorySubList, algorithm);\n  });\n};\n\nmodule.exports = function () {\n  each(appInstance.getCategories(), addCategoryToDOM);\n};\n\n},{\"../app\":3,\"../server\":43,\"./show_algorithm\":17}],19:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar isArray = Array.isArray;\nvar _$ = $;\nvar each = _$.each;\n\n\nmodule.exports = function (data) {\n  var $container = $('#tab_desc > .wrapper');\n  $container.empty();\n\n  each(data, function (key, value) {\n\n    if (key) {\n      $container.append($('<h3>').html(key));\n    }\n\n    if (typeof value === 'string') {\n      $container.append($('<p>').html(value));\n    } else if (isArray(value)) {\n      (function () {\n\n        var $ul = $('<ul>');\n        $container.append($ul);\n\n        value.forEach(function (li) {\n          $ul.append($('<li>').html(li));\n        });\n      })();\n    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      (function () {\n\n        var $ul = $('<ul>');\n        $container.append($ul);\n\n        each(value, function (prop) {\n          $ul.append($('<li>').append($('<strong>').html(prop)).append(' ' + value[prop]));\n        });\n      })();\n    }\n  });\n};\n\n},{}],20:[function(require,module,exports){\n'use strict';\n\nvar Server = require('../server');\n\nvar _$ = $;\nvar each = _$.each;\n\n\nvar addFileToDOM = function addFileToDOM(category, algorithm, file, explanation) {\n  var $file = $('<button>').append(file).click(function () {\n    Server.loadFile(category, algorithm, file, explanation);\n    $('.files_bar > .wrapper > button').removeClass('active');\n    $(this).addClass('active');\n  });\n  $('.files_bar > .wrapper').append($file);\n};\n\nmodule.exports = function (category, algorithm, files) {\n  $('.files_bar > .wrapper').empty();\n\n  each(files, function (file, explanation) {\n    addFileToDOM(category, algorithm, file, explanation);\n  });\n\n  $('.files_bar > .wrapper > button').first().click();\n  $('.files_bar > .wrapper').scroll();\n};\n\n},{\"../server\":43}],21:[function(require,module,exports){\n'use strict';\n\n// click the first algorithm in the first category\n\nmodule.exports = function () {\n  $('#list button.category').first().click();\n  $('#list button.category + .indent').first().click();\n};\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nvar showToast = function showToast(data, type) {\n  var $toast = $('<div class=\"toast ' + type + '\">').append(data);\n\n  $('.toast_container').append($toast);\n  setTimeout(function () {\n    $toast.fadeOut(function () {\n      $toast.remove();\n    });\n  }, 3000);\n};\n\nvar showErrorToast = function showErrorToast(err) {\n  showToast(err, 'error');\n};\n\nvar showInfoToast = function showInfoToast(err) {\n  showToast(err, 'info');\n};\n\nmodule.exports = {\n  showErrorToast: showErrorToast,\n  showInfoToast: showInfoToast\n};\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function (id) {\n  var editor = ace.edit(id);\n\n  editor.setOptions({\n    enableBasicAutocompletion: true,\n    enableSnippets: true,\n    enableLiveAutocompletion: true\n  });\n\n  editor.setTheme('ace/theme/tomorrow_night_eighties');\n  editor.session.setMode('ace/mode/javascript');\n  editor.$blockScrolling = Infinity;\n\n  return editor;\n};\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nvar execute = function execute(tracerManager, code) {\n  // all modules available to eval are obtained from window\n  try {\n    tracerManager.deallocateAll();\n    eval(code);\n    tracerManager.visualize();\n  } catch (err) {\n    return err;\n  } finally {\n    tracerManager.removeUnallocated();\n  }\n};\n\nvar executeData = function executeData(tracerManager, algoData) {\n  return execute(tracerManager, algoData);\n};\n\nvar executeDataAndCode = function executeDataAndCode(tracerManager, algoData, algoCode) {\n  return execute(tracerManager, algoData + ';' + algoCode);\n};\n\nmodule.exports = {\n  executeData: executeData,\n  executeDataAndCode: executeDataAndCode\n};\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../app');\nvar createEditor = require('./create');\nvar Executor = require('./executor');\n\nfunction Editor(tracerManager) {\n  var _this = this;\n\n  if (!tracerManager) {\n    throw 'Cannot create Editor. Missing the tracerManager';\n  }\n\n  ace.require('ace/ext/language_tools');\n\n  this.dataEditor = createEditor('data');\n  this.codeEditor = createEditor('code');\n\n  // Setting data\n\n  this.setData = function (data) {\n    _this.dataEditor.setValue(data, -1);\n  };\n\n  this.setCode = function (code) {\n    _this.codeEditor.setValue(code, -1);\n  };\n\n  this.setContent = function (_ref) {\n    var data = _ref.data;\n    var code = _ref.code;\n\n    _this.setData(data);\n    _this.setCode(code);\n  };\n\n  // Clearing data\n\n  this.clearData = function () {\n    _this.dataEditor.setValue('');\n  };\n\n  this.clearCode = function () {\n    _this.codeEditor.setValue('');\n  };\n\n  this.clearContent = function () {\n    _this.clearData();\n    _this.clearCode();\n  };\n\n  this.execute = function () {\n    var data = _this.dataEditor.getValue();\n    var code = _this.codeEditor.getValue();\n    return Executor.executeDataAndCode(tracerManager, data, code);\n  };\n\n  // listeners\n\n  this.dataEditor.on('change', function () {\n    var data = _this.dataEditor.getValue();\n    var lastFileUsed = appInstance.getLastFileUsed();\n    if (lastFileUsed) {\n      appInstance.updateCachedFile(lastFileUsed, {\n        data: data\n      });\n    }\n    Executor.executeData(tracerManager, data);\n  });\n\n  this.codeEditor.on('change', function () {\n    var code = _this.codeEditor.getValue();\n    var lastFileUsed = appInstance.getLastFileUsed();\n    if (lastFileUsed) {\n      appInstance.updateCachedFile(lastFileUsed, {\n        code: code\n      });\n    }\n  });\n};\n\nmodule.exports = Editor;\n\n},{\"../app\":3,\"./create\":23,\"./executor\":24}],26:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar appInstance = require('./app');\nvar AppConstructor = require('./app/constructor');\nvar DOM = require('./dom');\nvar Server = require('./server');\nvar Helpers = require('./server/helpers');\n\nvar modules = require('./module');\n\nvar _$ = $;\nvar extend = _$.extend;\n\n\n$.ajaxSetup({\n  cache: false,\n  dataType: 'text'\n});\n\n// set global promise error handler\nRSVP.on('error', function (reason) {\n  console.assert(false, reason);\n});\n\n$(function () {\n\n  // initialize the application and attach in to the instance module\n  var app = new AppConstructor();\n  extend(true, appInstance, app);\n\n  // load modules to the global scope so they can be evaled\n  extend(true, window, modules);\n\n  Server.loadCategories().then(function (data) {\n    appInstance.setCategories(data);\n    DOM.showCategories();\n\n    // determine if the app is loading a pre-existing scratch-pad\n    // or the home page\n    var gistID = Helpers.getParameterByName('scratch-paper');\n    if (gistID) {\n      Server.loadScratchPaper(gistID).then(function (_ref) {\n        var category = _ref.category;\n        var algorithm = _ref.algorithm;\n        var data = _ref.data;\n\n        DOM.showAlgorithm(category, algorithm, data);\n      });\n    } else {\n      DOM.showFirstAlgorithm();\n    }\n  });\n});\n\n},{\"./app\":3,\"./app/constructor\":2,\"./dom\":4,\"./module\":32,\"./server\":43,\"./server/helpers\":42,\"rsvp\":57}],27:[function(require,module,exports){\n'use strict';\n\nvar _require = require('./array2d');\n\nvar Array2D = _require.Array2D;\nvar Array2DTracer = _require.Array2DTracer;\n\n\nfunction Array1DTracer() {\n    return Array2DTracer.apply(this, arguments);\n}\n\nArray1DTracer.prototype = $.extend(true, Object.create(Array2DTracer.prototype), {\n    constructor: Array1DTracer,\n    _notify: function _notify(idx, v) {\n        Array2DTracer.prototype._notify.call(this, 0, idx, v);\n        return this;\n    },\n    _denotify: function _denotify(idx) {\n        Array2DTracer.prototype._denotify.call(this, 0, idx);\n        return this;\n    },\n    _select: function _select(s, e) {\n        if (e === undefined) {\n            Array2DTracer.prototype._select.call(this, 0, s);\n        } else {\n            Array2DTracer.prototype._selectRow.call(this, 0, s, e);\n        }\n        return this;\n    },\n    _deselect: function _deselect(s, e) {\n        if (e === undefined) {\n            Array2DTracer.prototype._deselect.call(this, 0, s);\n        } else {\n            Array2DTracer.prototype._deselectRow.call(this, 0, s, e);\n        }\n        return this;\n    },\n    setData: function setData(D) {\n        return Array2DTracer.prototype.setData.call(this, [D]);\n    }\n});\n\nvar Array1D = {\n    random: function random(N, min, max) {\n        return Array2D.random(1, N, min, max)[0];\n    },\n    randomSorted: function randomSorted(N, min, max) {\n        return Array2D.randomSorted(1, N, min, max)[0];\n    }\n};\n\nmodule.exports = {\n    Array1D: Array1D,\n    Array1DTracer: Array1DTracer\n};\n\n},{\"./array2d\":28}],28:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nvar _require = require('../tracer_manager/util');\n\nvar refineByType = _require.refineByType;\n\n\nfunction Array2DTracer() {\n    if (Tracer.apply(this, arguments)) {\n        Array2DTracer.prototype.init.call(this);\n        return true;\n    }\n    return false;\n}\n\nArray2DTracer.prototype = $.extend(true, Object.create(Tracer.prototype), {\n    constructor: Array2DTracer,\n    init: function init() {\n        this.$table = this.capsule.$table = $('<div class=\"mtbl-table\">');\n        this.$container.append(this.$table);\n    },\n    _notify: function _notify(x, y, v) {\n        this.manager.pushStep(this.capsule, {\n            type: 'notify',\n            x: x,\n            y: y,\n            v: v\n        });\n        return this;\n    },\n    _denotify: function _denotify(x, y) {\n        this.manager.pushStep(this.capsule, {\n            type: 'denotify',\n            x: x,\n            y: y\n        });\n        return this;\n    },\n    _select: function _select(sx, sy, ex, ey) {\n        this.pushSelectingStep('select', null, arguments);\n        return this;\n    },\n    _selectRow: function _selectRow(x, sy, ey) {\n        this.pushSelectingStep('select', 'row', arguments);\n        return this;\n    },\n    _selectCol: function _selectCol(y, sx, ex) {\n        this.pushSelectingStep('select', 'col', arguments);\n        return this;\n    },\n    _deselect: function _deselect(sx, sy, ex, ey) {\n        this.pushSelectingStep('deselect', null, arguments);\n        return this;\n    },\n    _deselectRow: function _deselectRow(x, sy, ey) {\n        this.pushSelectingStep('deselect', 'row', arguments);\n        return this;\n    },\n    _deselectCol: function _deselectCol(y, sx, ex) {\n        this.pushSelectingStep('deselect', 'col', arguments);\n        return this;\n    },\n    _separate: function _separate(x, y) {\n        this.manager.pushStep(this.capsule, {\n            type: 'separate',\n            x: x,\n            y: y\n        });\n        return this;\n    },\n    _separateRow: function _separateRow(x) {\n        this._separate(x, -1);\n        return this;\n    },\n    _separateCol: function _separateCol(y) {\n        this._separate(-1, y);\n        return this;\n    },\n    _deseparate: function _deseparate(x, y) {\n        this.manager.pushStep(this.capsule, {\n            type: 'deseparate',\n            x: x,\n            y: y\n        });\n        return this;\n    },\n    _deseparateRow: function _deseparateRow(x) {\n        this._deseparate(x, -1);\n        return this;\n    },\n    _deseparateCol: function _deseparateCol(y) {\n        this._deseparate(-1, y);\n        return this;\n    },\n    pushSelectingStep: function pushSelectingStep() {\n        var args = Array.prototype.slice.call(arguments);\n        var type = args.shift();\n        var mode = args.shift();\n        args = Array.prototype.slice.call(args.shift());\n        var coord;\n        switch (mode) {\n            case 'row':\n                coord = {\n                    x: args[0],\n                    sy: args[1],\n                    ey: args[2]\n                };\n                break;\n            case 'col':\n                coord = {\n                    y: args[0],\n                    sx: args[1],\n                    ex: args[2]\n                };\n                break;\n            default:\n                if (args[2] === undefined && args[3] === undefined) {\n                    coord = {\n                        x: args[0],\n                        y: args[1]\n                    };\n                } else {\n                    coord = {\n                        sx: args[0],\n                        sy: args[1],\n                        ex: args[2],\n                        ey: args[3]\n                    };\n                }\n        }\n        var step = {\n            type: type\n        };\n        $.extend(step, coord);\n        this.manager.pushStep(this.capsule, step);\n    },\n    processStep: function processStep(step, options) {\n        switch (step.type) {\n            case 'notify':\n                if (step.v === 0 || step.v) {\n                    var $row = this.$table.find('.mtbl-row').eq(step.x);\n                    var $col = $row.find('.mtbl-col').eq(step.y);\n                    $col.text(refineByType(step.v));\n                }\n            case 'denotify':\n            case 'select':\n            case 'deselect':\n                var colorClass = step.type == 'select' || step.type == 'deselect' ? this.colorClass.selected : this.colorClass.notified;\n                var addClass = step.type == 'select' || step.type == 'notify';\n                var sx = step.sx;\n                var sy = step.sy;\n                var ex = step.ex;\n                var ey = step.ey;\n                if (sx === undefined) sx = step.x;\n                if (sy === undefined) sy = step.y;\n                if (ex === undefined) ex = step.x;\n                if (ey === undefined) ey = step.y;\n                this.paintColor(sx, sy, ex, ey, colorClass, addClass);\n                break;\n            case 'separate':\n                this.deseparate(step.x, step.y);\n                this.separate(step.x, step.y);\n                break;\n            case 'deseparate':\n                this.deseparate(step.x, step.y);\n                break;\n            default:\n                Tracer.prototype.processStep.call(this, step, options);\n        }\n    },\n    setData: function setData(D) {\n        this.viewX = this.viewY = 0;\n        this.paddingH = 6;\n        this.paddingV = 3;\n        this.fontSize = 16;\n\n        if (Tracer.prototype.setData.apply(this, arguments)) {\n            this.$table.find('.mtbl-row').each(function (i) {\n                $(this).find('.mtbl-col').each(function (j) {\n                    $(this).text(refineByType(D[i][j]));\n                });\n            });\n            return true;\n        }\n\n        this.$table.empty();\n        for (var i = 0; i < D.length; i++) {\n            var $row = $('<div class=\"mtbl-row\">');\n            this.$table.append($row);\n            for (var j = 0; j < D[i].length; j++) {\n                var $col = $('<div class=\"mtbl-col\">').css(this.getCellCss()).text(refineByType(D[i][j]));\n                $row.append($col);\n            }\n        }\n        this.resize();\n\n        return false;\n    },\n    resize: function resize() {\n        Tracer.prototype.resize.call(this);\n\n        this.refresh();\n    },\n    clear: function clear() {\n        Tracer.prototype.clear.call(this);\n\n        this.clearColor();\n        this.deseparateAll();\n    },\n    getCellCss: function getCellCss() {\n        return {\n            padding: this.paddingV.toFixed(1) + 'px ' + this.paddingH.toFixed(1) + 'px',\n            'font-size': this.fontSize.toFixed(1) + 'px'\n        };\n    },\n    refresh: function refresh() {\n        Tracer.prototype.refresh.call(this);\n\n        var $parent = this.$table.parent();\n        var top = $parent.height() / 2 - this.$table.height() / 2 + this.viewY;\n        var left = $parent.width() / 2 - this.$table.width() / 2 + this.viewX;\n        this.$table.css('margin-top', top);\n        this.$table.css('margin-left', left);\n    },\n    mousedown: function mousedown(e) {\n        Tracer.prototype.mousedown.call(this, e);\n\n        this.dragX = e.pageX;\n        this.dragY = e.pageY;\n        this.dragging = true;\n    },\n    mousemove: function mousemove(e) {\n        Tracer.prototype.mousemove.call(this, e);\n\n        if (this.dragging) {\n            this.viewX += e.pageX - this.dragX;\n            this.viewY += e.pageY - this.dragY;\n            this.dragX = e.pageX;\n            this.dragY = e.pageY;\n            this.refresh();\n        }\n    },\n    mouseup: function mouseup(e) {\n        Tracer.prototype.mouseup.call(this, e);\n\n        this.dragging = false;\n    },\n    mousewheel: function mousewheel(e) {\n        Tracer.prototype.mousewheel.call(this, e);\n\n        e.preventDefault();\n        e = e.originalEvent;\n        var delta = e.wheelDelta !== undefined && e.wheelDelta || e.detail !== undefined && -e.detail;\n        var weight = 1.01;\n        var ratio = delta > 0 ? 1 / weight : weight;\n        if (this.fontSize < 4 && ratio < 1) return;\n        if (this.fontSize > 40 && ratio > 1) return;\n        this.paddingV *= ratio;\n        this.paddingH *= ratio;\n        this.fontSize *= ratio;\n        this.$table.find('.mtbl-col').css(this.getCellCss());\n        this.refresh();\n    },\n    paintColor: function paintColor(sx, sy, ex, ey, colorClass, addClass) {\n        for (var i = sx; i <= ex; i++) {\n            var $row = this.$table.find('.mtbl-row').eq(i);\n            for (var j = sy; j <= ey; j++) {\n                var $col = $row.find('.mtbl-col').eq(j);\n                if (addClass) $col.addClass(colorClass);else $col.removeClass(colorClass);\n            }\n        }\n    },\n    clearColor: function clearColor() {\n        this.$table.find('.mtbl-col').removeClass(Object.keys(this.colorClass).join(' '));\n    },\n    colorClass: {\n        selected: 'selected',\n        notified: 'notified'\n    },\n    separate: function separate(x, y) {\n        this.$table.find('.mtbl-row').each(function (i) {\n            var $row = $(this);\n            if (i == x) {\n                $row.after($('<div class=\"mtbl-empty-row\">').attr('data-row', i));\n            }\n            $row.find('.mtbl-col').each(function (j) {\n                var $col = $(this);\n                if (j == y) {\n                    $col.after($('<div class=\"mtbl-empty-col\">').attr('data-col', j));\n                }\n            });\n        });\n    },\n    deseparate: function deseparate(x, y) {\n        this.$table.find('[data-row=' + x + ']').remove();\n        this.$table.find('[data-col=' + y + ']').remove();\n    },\n    deseparateAll: function deseparateAll() {\n        this.$table.find('.mtbl-empty-row, .mtbl-empty-col').remove();\n    }\n});\n\nvar Array2D = {\n    random: function random(N, M, min, max) {\n        if (!N) N = 10;\n        if (!M) M = 10;\n        if (min === undefined) min = 1;\n        if (max === undefined) max = 9;\n        var D = [];\n        for (var i = 0; i < N; i++) {\n            D.push([]);\n            for (var j = 0; j < M; j++) {\n                D[i].push((Math.random() * (max - min + 1) | 0) + min);\n            }\n        }\n        return D;\n    },\n    randomSorted: function randomSorted(N, M, min, max) {\n        return this.random(N, M, min, max).map(function (arr) {\n            return arr.sort(function (a, b) {\n                return a - b;\n            });\n        });\n    }\n};\n\nmodule.exports = {\n    Array2D: Array2D,\n    Array2DTracer: Array2DTracer\n};\n\n},{\"../tracer_manager/util\":52,\"./tracer\":34}],29:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nfunction ChartTracer() {\n    if (Tracer.apply(this, arguments)) {\n        ChartTracer.prototype.init.call(this, arguments);\n        return true;\n    }\n    return false;\n}\n\nChartTracer.prototype = $.extend(true, Object.create(Tracer.prototype), {\n    constructor: ChartTracer,\n    init: function init() {\n        this.$wrapper = this.capsule.$wrapper = $('<canvas id=\"chart\">');\n        this.$container.append(this.$wrapper);\n    },\n    setData: function setData(C) {\n        if (Tracer.prototype.setData.apply(this, arguments)) return true;\n        var tracer = this;\n        var color = [];\n        for (var i = 0; i < C.length; i++) {\n            color.push('rgba(136, 136, 136, 1)');\n        }var data = {\n            type: 'bar',\n            data: {\n                labels: C.map(String),\n                datasets: [{\n                    backgroundColor: color,\n                    data: C\n                }]\n            },\n            options: {\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                }\n            }\n        };\n        this.chart = this.capsule.chart = new Chart(this.$wrapper, data);\n    },\n    _notify: function _notify(s, v) {\n        this.manager.pushStep(this.capsule, {\n            type: 'notify',\n            s: s,\n            v: v\n        });\n        return this;\n    },\n    _denotify: function _denotify(s) {\n        this.manager.pushStep(this.capsule, {\n            type: 'denotify',\n            s: s\n        });\n        return this;\n    },\n    _select: function _select(s, e) {\n        this.manager.pushStep(this.capsule, {\n            type: 'select',\n            s: s,\n            e: e\n        });\n        return this;\n    },\n    _deselect: function _deselect(s, e) {\n        this.manager.pushStep(this.capsule, {\n            type: 'deselect',\n            s: s,\n            e: e\n        });\n        return this;\n    },\n    processStep: function processStep(step, options) {\n        switch (step.type) {\n            case 'notify':\n                if (step.v) {\n                    this.chart.config.data.datasets[0].data[step.s] = step.v;\n                    this.chart.config.data.labels[step.s] = step.v.toString();\n                }\n            case 'denotify':\n            case 'deselect':\n                var color = step.type == 'denotify' || step.type == 'deselect' ? 'rgba(136, 136, 136, 1)' : 'rgba(255, 0, 0, 1)';\n            case 'select':\n                if (color === undefined) var color = 'rgba(0, 0, 255, 1)';\n                if (step.e !== undefined) for (var i = step.s; i <= step.e; i++) {\n                    this.chart.config.data.datasets[0].backgroundColor[i] = color;\n                } else this.chart.config.data.datasets[0].backgroundColor[step.s] = color;\n                this.chart.update();\n                break;\n            default:\n                Tracer.prototype.processStep.call(this, step, options);\n        }\n    }\n});\n\nmodule.exports = ChartTracer;\n\n},{\"./tracer\":34}],30:[function(require,module,exports){\n'use strict';\n\nvar _require = require('./directed_graph');\n\nvar DirectedGraph = _require.DirectedGraph;\nvar DirectedGraphTracer = _require.DirectedGraphTracer;\n\n\nfunction CoordinateSystemTracer() {\n    if (DirectedGraphTracer.apply(this, arguments)) {\n        CoordinateSystemTracer.prototype.init.call(this);\n        return true;\n    }\n    return false;\n}\n\nCoordinateSystemTracer.prototype = $.extend(true, Object.create(DirectedGraphTracer.prototype), {\n    constructor: CoordinateSystemTracer,\n    init: function init() {\n        var tracer = this;\n\n        this.s.settings({\n            defaultEdgeType: 'def',\n            funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n                var color = tracer.getColor(edge, source, target, settings);\n                tracer.drawEdge(edge, source, target, color, context, settings);\n            }\n        });\n    },\n    setData: function setData(C) {\n        if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n        this.graph.clear();\n        var nodes = [];\n        var edges = [];\n        for (var i = 0; i < C.length; i++) {\n            nodes.push({\n                id: this.n(i),\n                x: C[i][0],\n                y: C[i][1],\n                label: '' + i,\n                size: 1,\n                color: this.color.default\n            });\n        }this.graph.read({\n            nodes: nodes,\n            edges: edges\n        });\n        this.s.camera.goTo({\n            x: 0,\n            y: 0,\n            angle: 0,\n            ratio: 1\n        });\n        this.refresh();\n\n        return false;\n    },\n    processStep: function processStep(step, options) {\n        switch (step.type) {\n            case 'visit':\n            case 'leave':\n                var visit = step.type == 'visit';\n                var targetNode = this.graph.nodes(this.n(step.target));\n                var color = visit ? this.color.visited : this.color.left;\n                targetNode.color = color;\n                if (step.source !== undefined) {\n                    var edgeId = this.e(step.source, step.target);\n                    if (this.graph.edges(edgeId)) {\n                        var edge = this.graph.edges(edgeId);\n                        edge.color = color;\n                        this.graph.dropEdge(edgeId).addEdge(edge);\n                    } else {\n                        this.graph.addEdge({\n                            id: this.e(step.target, step.source),\n                            source: this.n(step.source),\n                            target: this.n(step.target),\n                            color: color,\n                            size: 1\n                        });\n                    }\n                }\n                if (this.logTracer) {\n                    var source = step.source;\n                    if (source === undefined) source = '';\n                    this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n                }\n                break;\n            default:\n                Tracer.prototype.processStep.call(this, step, options);\n        }\n    },\n    e: function e(v1, v2) {\n        if (v1 > v2) {\n            var temp = v1;\n            v1 = v2;\n            v2 = temp;\n        }\n        return 'e' + v1 + '_' + v2;\n    },\n    drawOnHover: function drawOnHover(node, context, settings, next) {\n        var tracer = this;\n\n        context.setLineDash([5, 5]);\n        var nodeIdx = node.id.substring(1);\n        this.graph.edges().forEach(function (edge) {\n            var ends = edge.id.substring(1).split(\"_\");\n            if (ends[0] == nodeIdx) {\n                var color = '#0ff';\n                var source = node;\n                var target = tracer.graph.nodes('n' + ends[1]);\n                tracer.drawEdge(edge, source, target, color, context, settings);\n                if (next) next(edge, source, target, color, context, settings);\n            } else if (ends[1] == nodeIdx) {\n                var color = '#0ff';\n                var source = tracer.graph.nodes('n' + ends[0]);\n                var target = node;\n                tracer.drawEdge(edge, source, target, color, context, settings);\n                if (next) next(edge, source, target, color, context, settings);\n            }\n        });\n    },\n    drawEdge: function drawEdge(edge, source, target, color, context, settings) {\n        var prefix = settings('prefix') || '',\n            size = edge[prefix + 'size'] || 1;\n\n        context.strokeStyle = color;\n        context.lineWidth = size;\n        context.beginPath();\n        context.moveTo(source[prefix + 'x'], source[prefix + 'y']);\n        context.lineTo(target[prefix + 'x'], target[prefix + 'y']);\n        context.stroke();\n    }\n});\n\nvar CoordinateSystem = {\n    random: function random(N, min, max) {\n        if (!N) N = 7;\n        if (!min) min = 1;\n        if (!max) max = 10;\n        var C = new Array(N);\n        for (var i = 0; i < N; i++) {\n            C[i] = new Array(2);\n        }for (var i = 0; i < N; i++) {\n            for (var j = 0; j < C[i].length; j++) {\n                C[i][j] = (Math.random() * (max - min + 1) | 0) + min;\n            }\n        }return C;\n    }\n};\n\nmodule.exports = {\n    CoordinateSystem: CoordinateSystem,\n    CoordinateSystemTracer: CoordinateSystemTracer\n};\n\n},{\"./directed_graph\":31}],31:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nfunction DirectedGraphTracer() {\n    if (Tracer.apply(this, arguments)) {\n        DirectedGraphTracer.prototype.init.call(this);\n        return true;\n    }\n    return false;\n}\n\nDirectedGraphTracer.prototype = $.extend(true, Object.create(Tracer.prototype), {\n    constructor: DirectedGraphTracer,\n    init: function init() {\n        var tracer = this;\n\n        this.s = this.capsule.s = new sigma({\n            renderer: {\n                container: this.$container[0],\n                type: 'canvas'\n            },\n            settings: {\n                minArrowSize: 8,\n                defaultEdgeType: 'arrow',\n                maxEdgeSize: 2.5,\n                labelThreshold: 4,\n                font: 'Roboto',\n                defaultLabelColor: '#fff',\n                zoomMin: 0.6,\n                zoomMax: 1.2,\n                skipErrors: true,\n                minNodeSize: .5,\n                maxNodeSize: 12,\n                labelSize: 'proportional',\n                labelSizeRatio: 1.3,\n                funcLabelsDef: function funcLabelsDef(node, context, settings) {\n                    tracer.drawLabel(node, context, settings);\n                },\n                funcHoversDef: function funcHoversDef(node, context, settings, next) {\n                    tracer.drawOnHover(node, context, settings, next);\n                },\n                funcEdgesArrow: function funcEdgesArrow(edge, source, target, context, settings) {\n                    var color = tracer.getColor(edge, source, target, settings);\n                    tracer.drawArrow(edge, source, target, color, context, settings);\n                }\n            }\n        });\n        sigma.plugins.dragNodes(this.s, this.s.renderers[0]);\n        this.graph = this.capsule.graph = this.s.graph;\n    },\n    _setTreeData: function _setTreeData(G, root) {\n        this.manager.pushStep(this.capsule, {\n            type: 'setTreeData',\n            arguments: arguments\n        });\n        return this;\n    },\n    _visit: function _visit(target, source) {\n        this.manager.pushStep(this.capsule, {\n            type: 'visit',\n            target: target,\n            source: source\n        });\n        return this;\n    },\n    _leave: function _leave(target, source) {\n        this.manager.pushStep(this.capsule, {\n            type: 'leave',\n            target: target,\n            source: source\n        });\n        return this;\n    },\n    processStep: function processStep(step, options) {\n        switch (step.type) {\n            case 'setTreeData':\n                this.setTreeData.apply(this, step.arguments);\n                break;\n            case 'visit':\n            case 'leave':\n                var visit = step.type == 'visit';\n                var targetNode = this.graph.nodes(this.n(step.target));\n                var color = visit ? this.color.visited : this.color.left;\n                targetNode.color = color;\n                if (step.source !== undefined) {\n                    var edgeId = this.e(step.source, step.target);\n                    var edge = this.graph.edges(edgeId);\n                    edge.color = color;\n                    this.graph.dropEdge(edgeId).addEdge(edge);\n                }\n                if (this.logTracer) {\n                    var source = step.source;\n                    if (source === undefined) source = '';\n                    this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n                }\n                break;\n            default:\n                Tracer.prototype.processStep.call(this, step, options);\n        }\n    },\n    setTreeData: function setTreeData(G, root) {\n        var tracer = this;\n\n        root = root || 0;\n        var maxDepth = -1;\n\n        var chk = new Array(G.length);\n        var getDepth = function getDepth(node, depth) {\n            if (chk[node]) throw \"the given graph is not a tree because it forms a circuit\";\n            chk[node] = true;\n            if (maxDepth < depth) maxDepth = depth;\n            for (var i = 0; i < G[node].length; i++) {\n                if (G[node][i]) getDepth(i, depth + 1);\n            }\n        };\n        getDepth(root, 1);\n\n        if (this.setData.apply(this, arguments)) return true;\n\n        var place = function place(node, x, y) {\n            var temp = tracer.graph.nodes(tracer.n(node));\n            temp.x = x;\n            temp.y = y;\n        };\n\n        var wgap = 1 / (maxDepth - 1);\n        var dfs = function dfs(node, depth, top, bottom) {\n            place(node, top + bottom, depth * wgap);\n            var children = 0;\n            for (var i = 0; i < G[node].length; i++) {\n                if (G[node][i]) children++;\n            }\n            var vgap = (bottom - top) / children;\n            var cnt = 0;\n            for (var i = 0; i < G[node].length; i++) {\n                if (G[node][i]) dfs(i, depth + 1, top + vgap * cnt, top + vgap * ++cnt);\n            }\n        };\n        dfs(root, 0, 0, 1);\n\n        this.refresh();\n    },\n    setData: function setData(G) {\n        if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n        this.graph.clear();\n        var nodes = [];\n        var edges = [];\n        var unitAngle = 2 * Math.PI / G.length;\n        var currentAngle = 0;\n        for (var i = 0; i < G.length; i++) {\n            currentAngle += unitAngle;\n            nodes.push({\n                id: this.n(i),\n                label: '' + i,\n                x: .5 + Math.sin(currentAngle) / 2,\n                y: .5 + Math.cos(currentAngle) / 2,\n                size: 1,\n                color: this.color.default\n            });\n            for (var j = 0; j < G[i].length; j++) {\n                if (G[i][j]) {\n                    edges.push({\n                        id: this.e(i, j),\n                        source: this.n(i),\n                        target: this.n(j),\n                        color: this.color.default,\n                        size: 1\n                    });\n                }\n            }\n        }\n\n        this.graph.read({\n            nodes: nodes,\n            edges: edges\n        });\n        this.s.camera.goTo({\n            x: 0,\n            y: 0,\n            angle: 0,\n            ratio: 1\n        });\n        this.refresh();\n\n        return false;\n    },\n    resize: function resize() {\n        Tracer.prototype.resize.call(this);\n\n        this.s.renderers[0].resize();\n        this.refresh();\n    },\n    refresh: function refresh() {\n        Tracer.prototype.refresh.call(this);\n\n        this.s.refresh();\n    },\n    clear: function clear() {\n        Tracer.prototype.clear.call(this);\n\n        this.clearGraphColor();\n    },\n    color: {\n        visited: '#f00',\n        left: '#000',\n        default: '#888'\n    },\n    clearGraphColor: function clearGraphColor() {\n        var tracer = this;\n\n        this.graph.nodes().forEach(function (node) {\n            node.color = tracer.color.default;\n        });\n        this.graph.edges().forEach(function (edge) {\n            edge.color = tracer.color.default;\n        });\n    },\n    n: function n(v) {\n        return 'n' + v;\n    },\n    e: function e(v1, v2) {\n        return 'e' + v1 + '_' + v2;\n    },\n    getColor: function getColor(edge, source, target, settings) {\n        var color = edge.color,\n            edgeColor = settings('edgeColor'),\n            defaultNodeColor = settings('defaultNodeColor'),\n            defaultEdgeColor = settings('defaultEdgeColor');\n        if (!color) switch (edgeColor) {\n            case 'source':\n                color = source.color || defaultNodeColor;\n                break;\n            case 'target':\n                color = target.color || defaultNodeColor;\n                break;\n            default:\n                color = defaultEdgeColor;\n                break;\n        }\n\n        return color;\n    },\n    drawLabel: function drawLabel(node, context, settings) {\n        var fontSize,\n            prefix = settings('prefix') || '',\n            size = node[prefix + 'size'];\n\n        if (size < settings('labelThreshold')) return;\n\n        if (!node.label || typeof node.label !== 'string') return;\n\n        fontSize = settings('labelSize') === 'fixed' ? settings('defaultLabelSize') : settings('labelSizeRatio') * size;\n\n        context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') + fontSize + 'px ' + settings('font');\n        context.fillStyle = settings('labelColor') === 'node' ? node.color || settings('defaultNodeColor') : settings('defaultLabelColor');\n\n        context.textAlign = 'center';\n        context.fillText(node.label, Math.round(node[prefix + 'x']), Math.round(node[prefix + 'y'] + fontSize / 3));\n    },\n    drawArrow: function drawArrow(edge, source, target, color, context, settings) {\n        var prefix = settings('prefix') || '',\n            size = edge[prefix + 'size'] || 1,\n            tSize = target[prefix + 'size'],\n            sX = source[prefix + 'x'],\n            sY = source[prefix + 'y'],\n            tX = target[prefix + 'x'],\n            tY = target[prefix + 'y'],\n            angle = Math.atan2(tY - sY, tX - sX),\n            dist = 3;\n        sX += Math.sin(angle) * dist;\n        tX += Math.sin(angle) * dist;\n        sY += -Math.cos(angle) * dist;\n        tY += -Math.cos(angle) * dist;\n        var aSize = Math.max(size * 2.5, settings('minArrowSize')),\n            d = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2)),\n            aX = sX + (tX - sX) * (d - aSize - tSize) / d,\n            aY = sY + (tY - sY) * (d - aSize - tSize) / d,\n            vX = (tX - sX) * aSize / d,\n            vY = (tY - sY) * aSize / d;\n\n        context.strokeStyle = color;\n        context.lineWidth = size;\n        context.beginPath();\n        context.moveTo(sX, sY);\n        context.lineTo(aX, aY);\n        context.stroke();\n\n        context.fillStyle = color;\n        context.beginPath();\n        context.moveTo(aX + vX, aY + vY);\n        context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n        context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n        context.lineTo(aX + vX, aY + vY);\n        context.closePath();\n        context.fill();\n    },\n    drawOnHover: function drawOnHover(node, context, settings, next) {\n        var tracer = this;\n\n        context.setLineDash([5, 5]);\n        var nodeIdx = node.id.substring(1);\n        this.graph.edges().forEach(function (edge) {\n            var ends = edge.id.substring(1).split(\"_\");\n            if (ends[0] == nodeIdx) {\n                var color = '#0ff';\n                var source = node;\n                var target = tracer.graph.nodes('n' + ends[1]);\n                tracer.drawArrow(edge, source, target, color, context, settings);\n                if (next) next(edge, source, target, color, context, settings);\n            } else if (ends[1] == nodeIdx) {\n                var color = '#ff0';\n                var source = tracer.graph.nodes('n' + ends[0]);\n                var target = node;\n                tracer.drawArrow(edge, source, target, color, context, settings);\n                if (next) next(edge, source, target, color, context, settings);\n            }\n        });\n    }\n});\n\nvar DirectedGraph = {\n    random: function random(N, ratio) {\n        if (!N) N = 5;\n        if (!ratio) ratio = .3;\n        var G = new Array(N);\n        for (var i = 0; i < N; i++) {\n            G[i] = new Array(N);\n            for (var j = 0; j < N; j++) {\n                if (i != j) {\n                    G[i][j] = (Math.random() * (1 / ratio) | 0) == 0 ? 1 : 0;\n                }\n            }\n        }\n        return G;\n    }\n};\n\nsigma.canvas.labels.def = function (node, context, settings) {\n    var func = settings('funcLabelsDef');\n    if (func) {\n        func(node, context, settings);\n    }\n};\nsigma.canvas.hovers.def = function (node, context, settings) {\n    var func = settings('funcHoversDef');\n    if (func) {\n        func(node, context, settings);\n    }\n};\nsigma.canvas.edges.def = function (edge, source, target, context, settings) {\n    var func = settings('funcEdgesDef');\n    if (func) {\n        func(edge, source, target, context, settings);\n    }\n};\nsigma.canvas.edges.arrow = function (edge, source, target, context, settings) {\n    var func = settings('funcEdgesArrow');\n    if (func) {\n        func(edge, source, target, context, settings);\n    }\n};\n\nmodule.exports = {\n    DirectedGraph: DirectedGraph,\n    DirectedGraphTracer: DirectedGraphTracer\n};\n\n},{\"./tracer\":34}],32:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nvar LogTracer = require('./log_tracer');\n\nvar _require = require('./array1d');\n\nvar Array1D = _require.Array1D;\nvar Array1DTracer = _require.Array1DTracer;\n\nvar _require2 = require('./array2d');\n\nvar Array2D = _require2.Array2D;\nvar Array2DTracer = _require2.Array2DTracer;\n\n\nvar ChartTracer = require('./chart');\n\nvar _require3 = require('./coordinate_system');\n\nvar CoordinateSystem = _require3.CoordinateSystem;\nvar CoordinateSystemTracer = _require3.CoordinateSystemTracer;\n\nvar _require4 = require('./directed_graph');\n\nvar DirectedGraph = _require4.DirectedGraph;\nvar DirectedGraphTracer = _require4.DirectedGraphTracer;\n\nvar _require5 = require('./undirected_graph');\n\nvar UndirectedGraph = _require5.UndirectedGraph;\nvar UndirectedGraphTracer = _require5.UndirectedGraphTracer;\n\nvar _require6 = require('./weighted_directed_graph');\n\nvar WeightedDirectedGraph = _require6.WeightedDirectedGraph;\nvar WeightedDirectedGraphTracer = _require6.WeightedDirectedGraphTracer;\n\nvar _require7 = require('./weighted_undirected_graph');\n\nvar WeightedUndirectedGraph = _require7.WeightedUndirectedGraph;\nvar WeightedUndirectedGraphTracer = _require7.WeightedUndirectedGraphTracer;\n\n\nmodule.exports = {\n  Tracer: Tracer,\n  LogTracer: LogTracer,\n  Array1D: Array1D,\n  Array1DTracer: Array1DTracer,\n  Array2D: Array2D,\n  Array2DTracer: Array2DTracer,\n  ChartTracer: ChartTracer,\n  CoordinateSystem: CoordinateSystem,\n  CoordinateSystemTracer: CoordinateSystemTracer,\n  DirectedGraph: DirectedGraph,\n  DirectedGraphTracer: DirectedGraphTracer,\n  UndirectedGraph: UndirectedGraph,\n  UndirectedGraphTracer: UndirectedGraphTracer,\n  WeightedDirectedGraph: WeightedDirectedGraph,\n  WeightedDirectedGraphTracer: WeightedDirectedGraphTracer,\n  WeightedUndirectedGraph: WeightedUndirectedGraph,\n  WeightedUndirectedGraphTracer: WeightedUndirectedGraphTracer\n};\n\n},{\"./array1d\":27,\"./array2d\":28,\"./chart\":29,\"./coordinate_system\":30,\"./directed_graph\":31,\"./log_tracer\":33,\"./tracer\":34,\"./undirected_graph\":35,\"./weighted_directed_graph\":36,\"./weighted_undirected_graph\":37}],33:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nfunction LogTracer() {\n    if (Tracer.apply(this, arguments)) {\n        LogTracer.prototype.init.call(this);\n        return true;\n    }\n    return false;\n}\n\nLogTracer.prototype = $.extend(true, Object.create(Tracer.prototype), {\n    constructor: LogTracer,\n    init: function init() {\n        this.$wrapper = this.capsule.$wrapper = $('<div class=\"wrapper\">');\n        this.$container.append(this.$wrapper);\n    },\n    _print: function _print(msg) {\n        this.manager.pushStep(this.capsule, {\n            type: 'print',\n            msg: msg\n        });\n        return this;\n    },\n    processStep: function processStep(step, options) {\n        switch (step.type) {\n            case 'print':\n                this.print(step.msg);\n                break;\n        }\n    },\n    refresh: function refresh() {\n        this.scrollToEnd(Math.min(50, this.interval));\n    },\n    clear: function clear() {\n        Tracer.prototype.clear.call(this);\n\n        this.$wrapper.empty();\n    },\n    print: function print(message) {\n        this.$wrapper.append($('<span>').append(message + '<br/>'));\n    },\n    scrollToEnd: function scrollToEnd(duration) {\n        this.$container.animate({\n            scrollTop: this.$container[0].scrollHeight\n        }, duration);\n    }\n});\n\nmodule.exports = LogTracer;\n\n},{\"./tracer\":34}],34:[function(require,module,exports){\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _require = require('../tracer_manager/util');\n\nvar toJSON = _require.toJSON;\nvar fromJSON = _require.fromJSON;\n\n\nfunction Tracer(name) {\n    this.module = this.constructor;\n    this.capsule = this.manager.allocate(this);\n    $.extend(this, this.capsule);\n    this.setName(name);\n    return this.isNew;\n}\n\nTracer.prototype = {\n\n    constructor: Tracer,\n    manager: null,\n\n    _setData: function _setData() {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        this.manager.pushStep(this.capsule, {\n            type: 'setData',\n            args: toJSON(args)\n        });\n        return this;\n    },\n    _clear: function _clear() {\n        this.manager.pushStep(this.capsule, {\n            type: 'clear'\n        });\n        return this;\n    },\n    _wait: function _wait() {\n        this.manager.newStep();\n        return this;\n    },\n    processStep: function processStep(step, options) {\n        var type = step.type;\n        var args = step.args;\n\n\n        switch (type) {\n            case 'setData':\n                this.setData.apply(this, _toConsumableArray(fromJSON(args)));\n                break;\n            case 'clear':\n                this.clear();\n                break;\n        }\n    },\n    setName: function setName(name) {\n        var $name = void 0;\n        if (this.isNew) {\n            $name = $('<span class=\"name\">');\n            this.$container.append($name);\n        } else {\n            $name = this.$container.find('span.name');\n        }\n        $name.text(name || this.defaultName);\n    },\n    setData: function setData() {\n        var data = toJSON(arguments);\n        if (!this.isNew && this.lastData === data) {\n            return true;\n        }\n        this.isNew = this.capsule.isNew = false;\n        this.lastData = this.capsule.lastData = data;\n        return false;\n    },\n    resize: function resize() {},\n    refresh: function refresh() {},\n    clear: function clear() {},\n    attach: function attach(tracer) {\n        if (tracer.module === LogTracer) {\n            this.logTracer = tracer;\n        }\n        return this;\n    },\n    mousedown: function mousedown(e) {},\n    mousemove: function mousemove(e) {},\n    mouseup: function mouseup(e) {},\n    mousewheel: function mousewheel(e) {}\n};\n\nmodule.exports = Tracer;\n\n},{\"../tracer_manager/util\":52}],35:[function(require,module,exports){\n'use strict';\n\nvar _require = require('./directed_graph');\n\nvar DirectedGraph = _require.DirectedGraph;\nvar DirectedGraphTracer = _require.DirectedGraphTracer;\n\n\nfunction UndirectedGraphTracer() {\n    if (DirectedGraphTracer.apply(this, arguments)) {\n        UndirectedGraphTracer.prototype.init.call(this);\n        return true;\n    }\n    return false;\n}\n\nUndirectedGraphTracer.prototype = $.extend(true, Object.create(DirectedGraphTracer.prototype), {\n    constructor: UndirectedGraphTracer,\n    init: function init() {\n        var tracer = this;\n\n        this.s.settings({\n            defaultEdgeType: 'def',\n            funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n                var color = tracer.getColor(edge, source, target, settings);\n                tracer.drawEdge(edge, source, target, color, context, settings);\n            }\n        });\n    },\n    setData: function setData(G) {\n        if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n        this.graph.clear();\n        var nodes = [];\n        var edges = [];\n        var unitAngle = 2 * Math.PI / G.length;\n        var currentAngle = 0;\n        for (var i = 0; i < G.length; i++) {\n            currentAngle += unitAngle;\n            nodes.push({\n                id: this.n(i),\n                label: '' + i,\n                x: .5 + Math.sin(currentAngle) / 2,\n                y: .5 + Math.cos(currentAngle) / 2,\n                size: 1,\n                color: this.color.default\n            });\n        }\n        for (var i = 0; i < G.length; i++) {\n            for (var j = 0; j <= i; j++) {\n                if (G[i][j] || G[j][i]) {\n                    edges.push({\n                        id: this.e(i, j),\n                        source: this.n(i),\n                        target: this.n(j),\n                        color: this.color.default,\n                        size: 1\n                    });\n                }\n            }\n        }\n\n        this.graph.read({\n            nodes: nodes,\n            edges: edges\n        });\n        this.s.camera.goTo({\n            x: 0,\n            y: 0,\n            angle: 0,\n            ratio: 1\n        });\n        this.refresh();\n\n        return false;\n    },\n    e: function e(v1, v2) {\n        if (v1 > v2) {\n            var temp = v1;\n            v1 = v2;\n            v2 = temp;\n        }\n        return 'e' + v1 + '_' + v2;\n    },\n    drawOnHover: function drawOnHover(node, context, settings, next) {\n        var tracer = this;\n\n        context.setLineDash([5, 5]);\n        var nodeIdx = node.id.substring(1);\n        this.graph.edges().forEach(function (edge) {\n            var ends = edge.id.substring(1).split(\"_\");\n            if (ends[0] == nodeIdx) {\n                var color = '#0ff';\n                var source = node;\n                var target = tracer.graph.nodes('n' + ends[1]);\n                tracer.drawEdge(edge, source, target, color, context, settings);\n                if (next) next(edge, source, target, color, context, settings);\n            } else if (ends[1] == nodeIdx) {\n                var color = '#0ff';\n                var source = tracer.graph.nodes('n' + ends[0]);\n                var target = node;\n                tracer.drawEdge(edge, source, target, color, context, settings);\n                if (next) next(edge, source, target, color, context, settings);\n            }\n        });\n    },\n    drawEdge: function drawEdge(edge, source, target, color, context, settings) {\n        var prefix = settings('prefix') || '',\n            size = edge[prefix + 'size'] || 1;\n\n        context.strokeStyle = color;\n        context.lineWidth = size;\n        context.beginPath();\n        context.moveTo(source[prefix + 'x'], source[prefix + 'y']);\n        context.lineTo(target[prefix + 'x'], target[prefix + 'y']);\n        context.stroke();\n    }\n});\n\nvar UndirectedGraph = {\n    random: function random(N, ratio) {\n        if (!N) N = 5;\n        if (!ratio) ratio = .3;\n        var G = new Array(N);\n        for (var i = 0; i < N; i++) {\n            G[i] = new Array(N);\n        }for (var i = 0; i < N; i++) {\n            for (var j = 0; j < N; j++) {\n                if (i > j) {\n                    G[i][j] = G[j][i] = (Math.random() * (1 / ratio) | 0) == 0 ? 1 : 0;\n                }\n            }\n        }\n        return G;\n    }\n};\n\nmodule.exports = {\n    UndirectedGraph: UndirectedGraph,\n    UndirectedGraphTracer: UndirectedGraphTracer\n};\n\n},{\"./directed_graph\":31}],36:[function(require,module,exports){\n'use strict';\n\nvar _require = require('./directed_graph');\n\nvar DirectedGraph = _require.DirectedGraph;\nvar DirectedGraphTracer = _require.DirectedGraphTracer;\n\nvar _require2 = require('../tracer_manager/util');\n\nvar refineByType = _require2.refineByType;\n\n\nfunction WeightedDirectedGraphTracer() {\n    if (DirectedGraphTracer.apply(this, arguments)) {\n        WeightedDirectedGraphTracer.prototype.init.call(this);\n        return true;\n    }\n    return false;\n}\n\nWeightedDirectedGraphTracer.prototype = $.extend(true, Object.create(DirectedGraphTracer.prototype), {\n    constructor: WeightedDirectedGraphTracer,\n    init: function init() {\n        var tracer = this;\n\n        this.s.settings({\n            edgeLabelSize: 'proportional',\n            defaultEdgeLabelSize: 20,\n            edgeLabelSizePowRatio: 0.8,\n            funcLabelsDef: function funcLabelsDef(node, context, settings) {\n                tracer.drawNodeWeight(node, context, settings);\n                tracer.drawLabel(node, context, settings);\n            },\n            funcHoversDef: function funcHoversDef(node, context, settings) {\n                tracer.drawOnHover(node, context, settings, tracer.drawEdgeWeight);\n            },\n            funcEdgesArrow: function funcEdgesArrow(edge, source, target, context, settings) {\n                var color = tracer.getColor(edge, source, target, settings);\n                tracer.drawArrow(edge, source, target, color, context, settings);\n                tracer.drawEdgeWeight(edge, source, target, color, context, settings);\n            }\n        });\n    },\n    _weight: function _weight(target, weight) {\n        this.manager.pushStep(this.capsule, {\n            type: 'weight',\n            target: target,\n            weight: weight\n        });\n        return this;\n    },\n    _visit: function _visit(target, source, weight) {\n        this.manager.pushStep(this.capsule, {\n            type: 'visit',\n            target: target,\n            source: source,\n            weight: weight\n        });\n        return this;\n    },\n    _leave: function _leave(target, source, weight) {\n        this.manager.pushStep(this.capsule, {\n            type: 'leave',\n            target: target,\n            source: source,\n            weight: weight\n        });\n        return this;\n    },\n    processStep: function processStep(step, options) {\n        switch (step.type) {\n            case 'weight':\n                var targetNode = this.graph.nodes(this.n(step.target));\n                if (step.weight !== undefined) targetNode.weight = refineByType(step.weight);\n                break;\n            case 'visit':\n            case 'leave':\n                var visit = step.type == 'visit';\n                var targetNode = this.graph.nodes(this.n(step.target));\n                var color = visit ? this.color.visited : this.color.left;\n                targetNode.color = color;\n                if (step.weight !== undefined) targetNode.weight = refineByType(step.weight);\n                if (step.source !== undefined) {\n                    var edgeId = this.e(step.source, step.target);\n                    var edge = this.graph.edges(edgeId);\n                    edge.color = color;\n                    this.graph.dropEdge(edgeId).addEdge(edge);\n                }\n                if (this.logTracer) {\n                    var source = step.source;\n                    if (source === undefined) source = '';\n                    this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n                }\n                break;\n            default:\n                DirectedGraphTracer.prototype.processStep.call(this, step, options);\n        }\n    },\n    setData: function setData(G) {\n        if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n        this.graph.clear();\n        var nodes = [];\n        var edges = [];\n        var unitAngle = 2 * Math.PI / G.length;\n        var currentAngle = 0;\n        for (var i = 0; i < G.length; i++) {\n            currentAngle += unitAngle;\n            nodes.push({\n                id: this.n(i),\n                label: '' + i,\n                x: .5 + Math.sin(currentAngle) / 2,\n                y: .5 + Math.cos(currentAngle) / 2,\n                size: 1,\n                color: this.color.default,\n                weight: 0\n            });\n            for (var j = 0; j < G[i].length; j++) {\n                if (G[i][j]) {\n                    edges.push({\n                        id: this.e(i, j),\n                        source: this.n(i),\n                        target: this.n(j),\n                        color: this.color.default,\n                        size: 1,\n                        weight: refineByType(G[i][j])\n                    });\n                }\n            }\n        }\n\n        this.graph.read({\n            nodes: nodes,\n            edges: edges\n        });\n        this.s.camera.goTo({\n            x: 0,\n            y: 0,\n            angle: 0,\n            ratio: 1\n        });\n        this.refresh();\n\n        return false;\n    },\n    clear: function clear() {\n        DirectedGraphTracer.prototype.clear.call(this);\n\n        this.clearWeights();\n    },\n    clearWeights: function clearWeights() {\n        this.graph.nodes().forEach(function (node) {\n            node.weight = 0;\n        });\n    },\n    drawEdgeWeight: function drawEdgeWeight(edge, source, target, color, context, settings) {\n        if (source == target) return;\n\n        var prefix = settings('prefix') || '',\n            size = edge[prefix + 'size'] || 1;\n\n        if (size < settings('edgeLabelThreshold')) return;\n\n        if (0 === settings('edgeLabelSizePowRatio')) throw '\"edgeLabelSizePowRatio\" must not be 0.';\n\n        var fontSize,\n            x = (source[prefix + 'x'] + target[prefix + 'x']) / 2,\n            y = (source[prefix + 'y'] + target[prefix + 'y']) / 2,\n            dX = target[prefix + 'x'] - source[prefix + 'x'],\n            dY = target[prefix + 'y'] - source[prefix + 'y'],\n            angle = Math.atan2(dY, dX);\n\n        fontSize = settings('edgeLabelSize') === 'fixed' ? settings('defaultEdgeLabelSize') : settings('defaultEdgeLabelSize') * size * Math.pow(size, -1 / settings('edgeLabelSizePowRatio'));\n\n        context.save();\n\n        if (edge.active) {\n            context.font = [settings('activeFontStyle'), fontSize + 'px', settings('activeFont') || settings('font')].join(' ');\n\n            context.fillStyle = color;\n        } else {\n            context.font = [settings('fontStyle'), fontSize + 'px', settings('font')].join(' ');\n\n            context.fillStyle = color;\n        }\n\n        context.textAlign = 'center';\n        context.textBaseline = 'alphabetic';\n\n        context.translate(x, y);\n        context.rotate(angle);\n        context.fillText(edge.weight, 0, -size / 2 - 3);\n\n        context.restore();\n    },\n    drawNodeWeight: function drawNodeWeight(node, context, settings) {\n        var fontSize,\n            prefix = settings('prefix') || '',\n            size = node[prefix + 'size'];\n\n        if (size < settings('labelThreshold')) return;\n\n        fontSize = settings('labelSize') === 'fixed' ? settings('defaultLabelSize') : settings('labelSizeRatio') * size;\n\n        context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') + fontSize + 'px ' + settings('font');\n        context.fillStyle = settings('labelColor') === 'node' ? node.color || settings('defaultNodeColor') : settings('defaultLabelColor');\n\n        context.textAlign = 'left';\n        context.fillText(node.weight, Math.round(node[prefix + 'x'] + size * 1.5), Math.round(node[prefix + 'y'] + fontSize / 3));\n    }\n});\n\nvar WeightedDirectedGraph = {\n    random: function random(N, ratio, min, max) {\n        if (!N) N = 5;\n        if (!ratio) ratio = .3;\n        if (!min) min = 1;\n        if (!max) max = 5;\n        var G = new Array(N);\n        for (var i = 0; i < N; i++) {\n            G[i] = new Array(N);\n            for (var j = 0; j < N; j++) {\n                if (i != j && (Math.random() * (1 / ratio) | 0) == 0) {\n                    G[i][j] = (Math.random() * (max - min + 1) | 0) + min;\n                }\n            }\n        }\n        return G;\n    }\n};\n\nmodule.exports = {\n    WeightedDirectedGraph: WeightedDirectedGraph,\n    WeightedDirectedGraphTracer: WeightedDirectedGraphTracer\n};\n\n},{\"../tracer_manager/util\":52,\"./directed_graph\":31}],37:[function(require,module,exports){\n'use strict';\n\nvar _require = require('./weighted_directed_graph');\n\nvar WeightedDirectedGraph = _require.WeightedDirectedGraph;\nvar WeightedDirectedGraphTracer = _require.WeightedDirectedGraphTracer;\n\nvar _require2 = require('./undirected_graph');\n\nvar UndirectedGraphTracer = _require2.UndirectedGraphTracer;\n\n\nfunction WeightedUndirectedGraphTracer() {\n    if (WeightedDirectedGraphTracer.apply(this, arguments)) {\n        WeightedUndirectedGraphTracer.prototype.init.call(this);\n        return true;\n    }\n    return false;\n}\n\nWeightedUndirectedGraphTracer.prototype = $.extend(true, Object.create(WeightedDirectedGraphTracer.prototype), {\n    constructor: WeightedUndirectedGraphTracer,\n    init: function init() {\n        var tracer = this;\n\n        this.s.settings({\n            defaultEdgeType: 'def',\n            funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n                var color = tracer.getColor(edge, source, target, settings);\n                tracer.drawEdge(edge, source, target, color, context, settings);\n                tracer.drawEdgeWeight(edge, source, target, color, context, settings);\n            }\n        });\n    },\n    setData: function setData(G) {\n        if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n        this.graph.clear();\n        var nodes = [];\n        var edges = [];\n        var unitAngle = 2 * Math.PI / G.length;\n        var currentAngle = 0;\n        for (var i = 0; i < G.length; i++) {\n            currentAngle += unitAngle;\n            nodes.push({\n                id: this.n(i),\n                label: '' + i,\n                x: .5 + Math.sin(currentAngle) / 2,\n                y: .5 + Math.cos(currentAngle) / 2,\n                size: 1,\n                color: this.color.default,\n                weight: 0\n            });\n        }\n        for (var i = 0; i < G.length; i++) {\n            for (var j = 0; j <= i; j++) {\n                if (G[i][j] || G[j][i]) {\n                    edges.push({\n                        id: this.e(i, j),\n                        source: this.n(i),\n                        target: this.n(j),\n                        color: this.color.default,\n                        size: 1,\n                        weight: G[i][j]\n                    });\n                }\n            }\n        }\n\n        this.graph.read({\n            nodes: nodes,\n            edges: edges\n        });\n        this.s.camera.goTo({\n            x: 0,\n            y: 0,\n            angle: 0,\n            ratio: 1\n        });\n        this.refresh();\n\n        return false;\n    },\n    e: UndirectedGraphTracer.prototype.e,\n    drawOnHover: UndirectedGraphTracer.prototype.drawOnHover,\n    drawEdge: UndirectedGraphTracer.prototype.drawEdge,\n    drawEdgeWeight: function drawEdgeWeight(edge, source, target, color, context, settings) {\n        var prefix = settings('prefix') || '';\n        if (source[prefix + 'x'] > target[prefix + 'x']) {\n            var temp = source;\n            source = target;\n            target = temp;\n        }\n        WeightedDirectedGraphTracer.prototype.drawEdgeWeight.call(this, edge, source, target, color, context, settings);\n    }\n});\n\nvar WeightedUndirectedGraph = {\n    random: function random(N, ratio, min, max) {\n        if (!N) N = 5;\n        if (!ratio) ratio = .3;\n        if (!min) min = 1;\n        if (!max) max = 5;\n        var G = new Array(N);\n        for (var i = 0; i < N; i++) {\n            G[i] = new Array(N);\n        }for (var i = 0; i < N; i++) {\n            for (var j = 0; j < N; j++) {\n                if (i > j && (Math.random() * (1 / ratio) | 0) == 0) {\n                    G[i][j] = G[j][i] = (Math.random() * (max - min + 1) | 0) + min;\n                }\n            }\n        }\n        return G;\n    }\n};\n\nmodule.exports = {\n    WeightedUndirectedGraph: WeightedUndirectedGraph,\n    WeightedUndirectedGraphTracer: WeightedUndirectedGraphTracer\n};\n\n},{\"./undirected_graph\":35,\"./weighted_directed_graph\":36}],38:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url) {\n\n  return request(url, {\n    type: 'GET'\n  });\n};\n\n},{\"./request\":41}],39:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url) {\n  return request(url, {\n    dataType: 'json',\n    type: 'GET'\n  });\n};\n\n},{\"./request\":41}],40:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url, data) {\n  return request(url, {\n    dataType: 'json',\n    type: 'POST',\n    data: JSON.stringify(data)\n  });\n};\n\n},{\"./request\":41}],41:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar appInstance = require('../../app');\n\nvar _$ = $;\nvar ajax = _$.ajax;\nvar extend = _$.extend;\n\n\nvar defaults = {};\n\nmodule.exports = function (url) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  appInstance.setIsLoading(true);\n\n  return new RSVP.Promise(function (resolve, reject) {\n    var callbacks = {\n      success: function success(response) {\n        appInstance.setIsLoading(false);\n        resolve(response);\n      },\n      error: function error(reason) {\n        appInstance.setIsLoading(false);\n        reject(reason);\n      }\n    };\n\n    var opts = extend({}, defaults, options, callbacks, {\n      url: url\n    });\n\n    ajax(opts);\n  });\n};\n\n},{\"../../app\":3,\"rsvp\":57}],42:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar appInstance = require('../app');\nvar Toast = require('../dom/toast');\n\nvar checkLoading = function checkLoading() {\n  if (appInstance.getIsLoading()) {\n    Toast.showErrorToast('Wait until it completes loading of previous file.');\n    return true;\n  }\n  return false;\n};\n\nvar getParameterByName = function getParameterByName(name) {\n  var url = window.location.href;\n  var cleanName = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n\n  var results = regex.exec(url);\n\n  if (!results || results.length !== 3) {\n    return null;\n  }\n\n  var _results = _slicedToArray(results, 3);\n\n  var id = _results[2];\n\n\n  return id;\n};\n\nmodule.exports = {\n  checkLoading: checkLoading,\n  getParameterByName: getParameterByName\n};\n\n},{\"../app\":3,\"../dom/toast\":22}],43:[function(require,module,exports){\n'use strict';\n\nvar loadAlgorithm = require('./load_algorithm');\nvar loadCategories = require('./load_categories');\nvar loadFile = require('./load_file');\nvar loadScratchPaper = require('./load_scratch_paper');\nvar shareScratchPaper = require('./share_scratch_paper');\n\nmodule.exports = {\n  loadAlgorithm: loadAlgorithm,\n  loadCategories: loadCategories,\n  loadFile: loadFile,\n  loadScratchPaper: loadScratchPaper,\n  shareScratchPaper: shareScratchPaper\n};\n\n},{\"./load_algorithm\":44,\"./load_categories\":45,\"./load_file\":46,\"./load_scratch_paper\":47,\"./share_scratch_paper\":48}],44:[function(require,module,exports){\n'use strict';\n\nvar Utils = require('../utils');\nvar getJSON = require('./ajax/get_json');\n\nmodule.exports = function (category, algorithm) {\n  var dir = Utils.getAlgorithmDir(category, algorithm);\n  return getJSON(dir + 'desc.json');\n};\n\n},{\"../utils\":55,\"./ajax/get_json\":39}],45:[function(require,module,exports){\n'use strict';\n\nvar appInstance = require('../app');\nvar getJSON = require('./ajax/get_json');\n\nmodule.exports = function () {\n  return getJSON('./algorithm/category.json');\n};\n\n},{\"../app\":3,\"./ajax/get_json\":39}],46:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\n\nvar appInstance = require('../app');\nvar Utils = require('../utils');\n\nvar _require = require('./helpers');\n\nvar checkLoading = _require.checkLoading;\n\n\nvar get = require('./ajax/get');\n\nvar loadDataAndCode = function loadDataAndCode(dir) {\n  return RSVP.hash({\n    data: get(dir + 'data.js'),\n    code: get(dir + 'code.js')\n  });\n};\n\nvar loadFileAndUpdateContent = function loadFileAndUpdateContent(dir) {\n  appInstance.getEditor().clearContent();\n\n  return loadDataAndCode(dir).then(function (content) {\n    appInstance.updateCachedFile(dir, content);\n    appInstance.getEditor().setContent(content);\n  });\n};\n\nvar cachedContentExists = function cachedContentExists(cachedFile) {\n  return cachedFile && cachedFile.data !== undefined && cachedFile.code !== undefined;\n};\n\nmodule.exports = function (category, algorithm, file, explanation) {\n  return new RSVP.Promise(function (resolve, reject) {\n\n    if (checkLoading()) {\n      reject();\n    } else {\n      $('#explanation').html(explanation);\n\n      var dir = Utils.getFileDir(category, algorithm, file);\n      appInstance.setLastFileUsed(dir);\n      var cachedFile = appInstance.getCachedFile(dir);\n\n      if (cachedContentExists(cachedFile)) {\n        appInstance.getEditor().setContent(cachedFile);\n        resolve();\n      } else {\n        loadFileAndUpdateContent(dir).then(resolve, reject);\n      }\n    }\n  });\n};\n\n},{\"../app\":3,\"../utils\":55,\"./ajax/get\":38,\"./helpers\":42,\"rsvp\":57}],47:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\n\nvar Utils = require('../utils');\nvar appInstance = require('../app');\n\nvar getJSON = require('./ajax/get_json');\nvar loadAlgorithm = require('./load_algorithm');\n\nvar extractGistCode = function extractGistCode(files, name) {\n  return files[name + '.js'].content;\n};\n\nmodule.exports = function (gistID) {\n  return new RSVP.Promise(function (resolve, reject) {\n    getJSON('https://api.github.com/gists/' + gistID).then(function (_ref) {\n      var files = _ref.files;\n\n\n      var algorithm = 'scratch_paper';\n      var category = null;\n\n      loadAlgorithm(category, algorithm).then(function (data) {\n\n        var algoData = extractGistCode(files, 'data');\n        var algoCode = extractGistCode(files, 'code');\n\n        // update scratch paper algo code with the loaded gist code\n        var dir = Utils.getFileDir(category, algorithm, 'scratch_paper');\n        appInstance.updateCachedFile(dir, {\n          data: algoData,\n          code: algoCode,\n          'CREDIT.md': 'Shared by an anonymous user from http://parkjs814.github.io/AlgorithmVisualizer'\n        });\n\n        resolve({\n          category: category,\n          algorithm: algorithm,\n          data: data\n        });\n      });\n    });\n  });\n};\n\n},{\"../app\":3,\"../utils\":55,\"./ajax/get_json\":39,\"./load_algorithm\":44,\"rsvp\":57}],48:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar appInstance = require('../app');\n\nvar postJSON = require('./ajax/post_json');\n\nmodule.exports = function () {\n  return new RSVP.Promise(function (resolve, reject) {\n    var _appInstance$getEdito = appInstance.getEditor();\n\n    var dataEditor = _appInstance$getEdito.dataEditor;\n    var codeEditor = _appInstance$getEdito.codeEditor;\n\n\n    var gist = {\n      'description': 'temp',\n      'public': true,\n      'files': {\n        'data.js': {\n          'content': dataEditor.getValue()\n        },\n        'code.js': {\n          'content': codeEditor.getValue()\n        }\n      }\n    };\n\n    postJSON('https://api.github.com/gists', gist).then(function (_ref) {\n      var id = _ref.id;\n      var _location = location;\n      var protocol = _location.protocol;\n      var host = _location.host;\n      var pathname = _location.pathname;\n\n\n      var url = protocol + '//' + host + pathname + '?scratch-paper=' + id;\n      resolve(url);\n    });\n  });\n};\n\n},{\"../app\":3,\"./ajax/post_json\":40,\"rsvp\":57}],49:[function(require,module,exports){\n'use strict';\n\nvar TracerManager = require('./manager');\nvar Tracer = require('../module/tracer');\n\nmodule.exports = {\n  init: function init() {\n    var tm = new TracerManager();\n    Tracer.prototype.manager = tm;\n    return tm;\n  }\n};\n\n},{\"../module/tracer\":34,\"./manager\":50}],50:[function(require,module,exports){\n'use strict';\n\nvar stepLimit = 1e6;\n\nvar TracerManager = function TracerManager() {\n  this.timer = null;\n  this.pause = false;\n  this.capsules = [];\n  this.interval = 500;\n};\n\nTracerManager.prototype = {\n  add: function add(tracer) {\n\n    var $container = $('<section class=\"module_wrapper\">');\n    $('.module_container').append($container);\n\n    var capsule = {\n      module: tracer.module,\n      tracer: tracer,\n      allocated: true,\n      defaultName: null,\n      $container: $container,\n      isNew: true\n    };\n\n    this.capsules.push(capsule);\n    return capsule;\n  },\n  allocate: function allocate(newTracer) {\n    var selectedCapsule = null;\n    var count = 0;\n\n    $.each(this.capsules, function (i, capsule) {\n      if (capsule.module === newTracer.module) {\n        count++;\n        if (!capsule.allocated) {\n          capsule.tracer = newTracer;\n          capsule.allocated = true;\n          capsule.isNew = false;\n          selectedCapsule = capsule;\n          return false;\n        }\n      }\n    });\n\n    if (selectedCapsule === null) {\n      count++;\n      selectedCapsule = this.add(newTracer);\n    }\n\n    selectedCapsule.defaultName = newTracer.constructor.name + ' ' + count;\n    return selectedCapsule;\n  },\n  deallocateAll: function deallocateAll() {\n    this.reset();\n    $.each(this.capsules, function (i, capsule) {\n      capsule.allocated = false;\n    });\n  },\n  removeUnallocated: function removeUnallocated() {\n    var changed = false;\n\n    this.capsules = $.grep(this.capsules, function (capsule) {\n      var removed = !capsule.allocated;\n\n      if (capsule.isNew || removed) {\n        changed = true;\n      }\n      if (removed) {\n        capsule.$container.remove();\n      }\n\n      return !removed;\n    });\n\n    if (changed) {\n      this.place();\n    }\n  },\n  place: function place() {\n    var capsules = this.capsules;\n\n\n    $.each(capsules, function (i, capsule) {\n      var width = 100;\n      var height = 100 / capsules.length;\n      var top = height * i;\n\n      capsule.$container.css({\n        top: top + '%',\n        width: width + '%',\n        height: height + '%'\n      });\n\n      capsule.tracer.resize();\n    });\n  },\n  resize: function resize() {\n    this.command('resize');\n  },\n  isPause: function isPause() {\n    return this.pause;\n  },\n  setInterval: function setInterval(interval) {\n    $('#interval').val(interval);\n  },\n  reset: function reset() {\n    this.traces = [];\n    this.traceIndex = -1;\n    this.stepCnt = 0;\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    this.command('clear');\n  },\n  pushStep: function pushStep(capsule, step) {\n    if (this.stepCnt++ > stepLimit) throw \"Tracer's stack overflow\";\n    var len = this.traces.length;\n    var last = [];\n    if (len === 0) {\n      this.traces.push(last);\n    } else {\n      last = this.traces[len - 1];\n    }\n    last.push($.extend(step, {\n      capsule: capsule\n    }));\n  },\n  newStep: function newStep() {\n    this.traces.push([]);\n  },\n  pauseStep: function pauseStep() {\n    if (this.traceIndex < 0) return;\n    this.pause = true;\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    $('#btn_pause').addClass('active');\n  },\n  resumeStep: function resumeStep() {\n    this.pause = false;\n    this.step(this.traceIndex + 1);\n    $('#btn_pause').removeClass('active');\n  },\n  step: function step(i) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var tracer = this;\n\n    if (isNaN(i) || i >= this.traces.length || i < 0) return;\n\n    this.traceIndex = i;\n    var trace = this.traces[i];\n    trace.forEach(function (step) {\n      step.capsule.tracer.processStep(step, options);\n    });\n\n    if (!options.virtual) {\n      this.command('refresh');\n    }\n\n    if (this.pause) return;\n\n    this.timer = setTimeout(function () {\n      tracer.step(i + 1, options);\n    }, this.interval);\n  },\n  prevStep: function prevStep() {\n    this.command('clear');\n\n    var finalIndex = this.traceIndex - 1;\n    if (finalIndex < 0) {\n      this.traceIndex = -1;\n      this.command('refresh');\n      return;\n    }\n\n    for (var i = 0; i < finalIndex; i++) {\n      this.step(i, {\n        virtual: true\n      });\n    }\n\n    this.step(finalIndex);\n  },\n  nextStep: function nextStep() {\n    this.step(this.traceIndex + 1);\n  },\n  visualize: function visualize() {\n    this.traceIndex = -1;\n    this.resumeStep();\n  },\n  command: function command() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var functionName = args.shift();\n    $.each(this.capsules, function (i, capsule) {\n      if (capsule.allocated) {\n        capsule.tracer.module.prototype[functionName].apply(capsule.tracer, args);\n      }\n    });\n  },\n  findOwner: function findOwner(container) {\n    var selectedCapsule = null;\n    $.each(this.capsules, function (i, capsule) {\n      if (capsule.$container[0] === container) {\n        selectedCapsule = capsule;\n        return false;\n      }\n    });\n    return selectedCapsule.tracer;\n  }\n};\n\nmodule.exports = TracerManager;\n\n},{}],51:[function(require,module,exports){\n'use strict';\n\nvar parse = JSON.parse;\n\n\nvar fromJSON = function fromJSON(obj) {\n  return parse(obj, function (key, value) {\n    return value === 'Infinity' ? Infinity : value;\n  });\n};\n\nmodule.exports = fromJSON;\n\n},{}],52:[function(require,module,exports){\n'use strict';\n\nvar toJSON = require('./to_json');\nvar fromJSON = require('./from_json');\nvar refineByType = require('./refine_by_type');\n\nmodule.exports = {\n  toJSON: toJSON,\n  fromJSON: fromJSON,\n  refineByType: refineByType\n};\n\n},{\"./from_json\":51,\"./refine_by_type\":53,\"./to_json\":54}],53:[function(require,module,exports){\n'use strict';\n\nvar refineByType = function refineByType(item) {\n  return typeof item === 'number' ? refineNumber(item) : refineString(item);\n};\n\nvar refineString = function refineString(str) {\n  return str === '' ? ' ' : str;\n};\n\nvar refineNumber = function refineNumber(num) {\n  return num === Infinity ? '∞' : num;\n};\n\nmodule.exports = refineByType;\n\n},{}],54:[function(require,module,exports){\n'use strict';\n\nvar stringify = JSON.stringify;\n\n\nvar toJSON = function toJSON(obj) {\n  return stringify(obj, function (key, value) {\n    return value === Infinity ? 'Infinity' : value;\n  });\n};\n\nmodule.exports = toJSON;\n\n},{}],55:[function(require,module,exports){\n'use strict';\n\nvar isScratchPaper = function isScratchPaper(category, algorithm) {\n  return category === null && algorithm === 'scratch_paper';\n};\n\nvar getAlgorithmDir = function getAlgorithmDir(category, algorithm) {\n  if (isScratchPaper(category, algorithm)) {\n    return './algorithm/scratch_paper/';\n  }\n  return './algorithm/' + category + '/' + algorithm + '/';\n};\n\nvar getFileDir = function getFileDir(category, algorithm, file) {\n  if (isScratchPaper(category, algorithm)) {\n    return './algorithm/scratch_paper/';\n  }\n\n  return './algorithm/' + category + '/' + algorithm + '/' + file + '/';\n};\n\nmodule.exports = {\n  isScratchPaper: isScratchPaper,\n  getAlgorithmDir: getAlgorithmDir,\n  getFileDir: getFileDir\n};\n\n},{}],56:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],57:[function(require,module,exports){\n(function (process,global){\n/*!\n * @overview RSVP - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/tildeio/rsvp.js/master/LICENSE\n * @version   3.2.1\n */\n\n(function() {\n    \"use strict\";\n    function lib$rsvp$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$rsvp$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$rsvp$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$rsvp$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$rsvp$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$rsvp$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$rsvp$utils$$isArray = lib$rsvp$utils$$_isArray;\n\n    var lib$rsvp$utils$$now = Date.now || function() { return new Date().getTime(); };\n\n    function lib$rsvp$utils$$F() { }\n\n    var lib$rsvp$utils$$o_create = (Object.create || function (o) {\n      if (arguments.length > 1) {\n        throw new Error('Second argument not supported');\n      }\n      if (typeof o !== 'object') {\n        throw new TypeError('Argument must be an object');\n      }\n      lib$rsvp$utils$$F.prototype = o;\n      return new lib$rsvp$utils$$F();\n    });\n    function lib$rsvp$events$$indexOf(callbacks, callback) {\n      for (var i=0, l=callbacks.length; i<l; i++) {\n        if (callbacks[i] === callback) { return i; }\n      }\n\n      return -1;\n    }\n\n    function lib$rsvp$events$$callbacksFor(object) {\n      var callbacks = object._promiseCallbacks;\n\n      if (!callbacks) {\n        callbacks = object._promiseCallbacks = {};\n      }\n\n      return callbacks;\n    }\n\n    var lib$rsvp$events$$default = {\n\n      /**\n        `RSVP.EventTarget.mixin` extends an object with EventTarget methods. For\n        Example:\n\n        ```javascript\n        var object = {};\n\n        RSVP.EventTarget.mixin(object);\n\n        object.on('finished', function(event) {\n          // handle event\n        });\n\n        object.trigger('finished', { detail: value });\n        ```\n\n        `EventTarget.mixin` also works with prototypes:\n\n        ```javascript\n        var Person = function() {};\n        RSVP.EventTarget.mixin(Person.prototype);\n\n        var yehuda = new Person();\n        var tom = new Person();\n\n        yehuda.on('poke', function(event) {\n          console.log('Yehuda says OW');\n        });\n\n        tom.on('poke', function(event) {\n          console.log('Tom says OW');\n        });\n\n        yehuda.trigger('poke');\n        tom.trigger('poke');\n        ```\n\n        @method mixin\n        @for RSVP.EventTarget\n        @private\n        @param {Object} object object to extend with EventTarget methods\n      */\n      'mixin': function(object) {\n        object['on']      = this['on'];\n        object['off']     = this['off'];\n        object['trigger'] = this['trigger'];\n        object._promiseCallbacks = undefined;\n        return object;\n      },\n\n      /**\n        Registers a callback to be executed when `eventName` is triggered\n\n        ```javascript\n        object.on('event', function(eventInfo){\n          // handle the event\n        });\n\n        object.trigger('event');\n        ```\n\n        @method on\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName name of the event to listen for\n        @param {Function} callback function to be called when the event is triggered.\n      */\n      'on': function(eventName, callback) {\n        if (typeof callback !== 'function') {\n          throw new TypeError('Callback must be a function');\n        }\n\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks;\n\n        callbacks = allCallbacks[eventName];\n\n        if (!callbacks) {\n          callbacks = allCallbacks[eventName] = [];\n        }\n\n        if (lib$rsvp$events$$indexOf(callbacks, callback) === -1) {\n          callbacks.push(callback);\n        }\n      },\n\n      /**\n        You can use `off` to stop firing a particular callback for an event:\n\n        ```javascript\n        function doStuff() { // do stuff! }\n        object.on('stuff', doStuff);\n\n        object.trigger('stuff'); // doStuff will be called\n\n        // Unregister ONLY the doStuff callback\n        object.off('stuff', doStuff);\n        object.trigger('stuff'); // doStuff will NOT be called\n        ```\n\n        If you don't pass a `callback` argument to `off`, ALL callbacks for the\n        event will not be executed when the event fires. For example:\n\n        ```javascript\n        var callback1 = function(){};\n        var callback2 = function(){};\n\n        object.on('stuff', callback1);\n        object.on('stuff', callback2);\n\n        object.trigger('stuff'); // callback1 and callback2 will be executed.\n\n        object.off('stuff');\n        object.trigger('stuff'); // callback1 and callback2 will not be executed!\n        ```\n\n        @method off\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName event to stop listening to\n        @param {Function} callback optional argument. If given, only the function\n        given will be removed from the event's callback queue. If no `callback`\n        argument is given, all callbacks will be removed from the event's callback\n        queue.\n      */\n      'off': function(eventName, callback) {\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks, index;\n\n        if (!callback) {\n          allCallbacks[eventName] = [];\n          return;\n        }\n\n        callbacks = allCallbacks[eventName];\n\n        index = lib$rsvp$events$$indexOf(callbacks, callback);\n\n        if (index !== -1) { callbacks.splice(index, 1); }\n      },\n\n      /**\n        Use `trigger` to fire custom events. For example:\n\n        ```javascript\n        object.on('foo', function(){\n          console.log('foo event happened!');\n        });\n        object.trigger('foo');\n        // 'foo event happened!' logged to the console\n        ```\n\n        You can also pass a value as a second argument to `trigger` that will be\n        passed as an argument to all event listeners for the event:\n\n        ```javascript\n        object.on('foo', function(value){\n          console.log(value.name);\n        });\n\n        object.trigger('foo', { name: 'bar' });\n        // 'bar' logged to the console\n        ```\n\n        @method trigger\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName name of the event to be triggered\n        @param {*} options optional value to be passed to any event handlers for\n        the given `eventName`\n      */\n      'trigger': function(eventName, options, label) {\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks, callback;\n\n        if (callbacks = allCallbacks[eventName]) {\n          // Don't cache the callbacks.length since it may grow\n          for (var i=0; i<callbacks.length; i++) {\n            callback = callbacks[i];\n\n            callback(options, label);\n          }\n        }\n      }\n    };\n\n    var lib$rsvp$config$$config = {\n      instrument: false\n    };\n\n    lib$rsvp$events$$default['mixin'](lib$rsvp$config$$config);\n\n    function lib$rsvp$config$$configure(name, value) {\n      if (name === 'onerror') {\n        // handle for legacy users that expect the actual\n        // error to be passed to their function added via\n        // `RSVP.configure('onerror', someFunctionHere);`\n        lib$rsvp$config$$config['on']('error', value);\n        return;\n      }\n\n      if (arguments.length === 2) {\n        lib$rsvp$config$$config[name] = value;\n      } else {\n        return lib$rsvp$config$$config[name];\n      }\n    }\n\n    var lib$rsvp$instrument$$queue = [];\n\n    function lib$rsvp$instrument$$scheduleFlush() {\n      setTimeout(function() {\n        var entry;\n        for (var i = 0; i < lib$rsvp$instrument$$queue.length; i++) {\n          entry = lib$rsvp$instrument$$queue[i];\n\n          var payload = entry.payload;\n\n          payload.guid = payload.key + payload.id;\n          payload.childGuid = payload.key + payload.childId;\n          if (payload.error) {\n            payload.stack = payload.error.stack;\n          }\n\n          lib$rsvp$config$$config['trigger'](entry.name, entry.payload);\n        }\n        lib$rsvp$instrument$$queue.length = 0;\n      }, 50);\n    }\n\n    function lib$rsvp$instrument$$instrument(eventName, promise, child) {\n      if (1 === lib$rsvp$instrument$$queue.push({\n        name: eventName,\n        payload: {\n          key: promise._guidKey,\n          id:  promise._id,\n          eventName: eventName,\n          detail: promise._result,\n          childId: child && child._id,\n          label: promise._label,\n          timeStamp: lib$rsvp$utils$$now(),\n          error: lib$rsvp$config$$config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n        }})) {\n          lib$rsvp$instrument$$scheduleFlush();\n        }\n      }\n    var lib$rsvp$instrument$$default = lib$rsvp$instrument$$instrument;\n    function lib$rsvp$then$$then(onFulfillment, onRejection, label) {\n      var parent = this;\n      var state = parent._state;\n\n      if (state === lib$rsvp$$internal$$FULFILLED && !onFulfillment || state === lib$rsvp$$internal$$REJECTED && !onRejection) {\n        lib$rsvp$config$$config.instrument && lib$rsvp$instrument$$default('chained', parent, parent);\n        return parent;\n      }\n\n      parent._onError = null;\n\n      var child = new parent.constructor(lib$rsvp$$internal$$noop, label);\n      var result = parent._result;\n\n      lib$rsvp$config$$config.instrument && lib$rsvp$instrument$$default('chained', parent, child);\n\n      if (state) {\n        var callback = arguments[state - 1];\n        lib$rsvp$config$$config.async(function(){\n          lib$rsvp$$internal$$invokeCallback(state, child, callback, result);\n        });\n      } else {\n        lib$rsvp$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n      }\n\n      return child;\n    }\n    var lib$rsvp$then$$default = lib$rsvp$then$$then;\n    function lib$rsvp$promise$resolve$$resolve(object, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      lib$rsvp$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$rsvp$promise$resolve$$default = lib$rsvp$promise$resolve$$resolve;\n    function lib$rsvp$enumerator$$makeSettledResult(state, position, value) {\n      if (state === lib$rsvp$$internal$$FULFILLED) {\n        return {\n          state: 'fulfilled',\n          value: value\n        };\n      } else {\n         return {\n          state: 'rejected',\n          reason: value\n        };\n      }\n    }\n\n    function lib$rsvp$enumerator$$Enumerator(Constructor, input, abortOnReject, label) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      this._abortOnReject = abortOnReject;\n\n      if (this._validateInput(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._init();\n\n        if (this.length === 0) {\n          lib$rsvp$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$rsvp$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$rsvp$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    var lib$rsvp$enumerator$$default = lib$rsvp$enumerator$$Enumerator;\n\n    lib$rsvp$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$rsvp$utils$$isArray(input);\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length     = this.length;\n      var promise    = this.promise;\n      var input      = this._input;\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._settleMaybeThenable = function(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve = c.resolve;\n\n      if (resolve === lib$rsvp$promise$resolve$$default) {\n        var then = lib$rsvp$$internal$$getThen(entry);\n\n        if (then === lib$rsvp$then$$default &&\n            entry._state !== lib$rsvp$$internal$$PENDING) {\n          entry._onError = null;\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof then !== 'function') {\n          this._remaining--;\n          this._result[i] = this._makeResult(lib$rsvp$$internal$$FULFILLED, i, entry);\n        } else if (c === lib$rsvp$promise$$default) {\n          var promise = new c(lib$rsvp$$internal$$noop);\n          lib$rsvp$$internal$$handleMaybeThenable(promise, entry, then);\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n        }\n      } else {\n        this._willSettleAt(resolve(entry), i);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      if (lib$rsvp$utils$$isMaybeThenable(entry)) {\n        this._settleMaybeThenable(entry, i);\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult(lib$rsvp$$internal$$FULFILLED, i, entry);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$rsvp$$internal$$PENDING) {\n        this._remaining--;\n\n        if (this._abortOnReject && state === lib$rsvp$$internal$$REJECTED) {\n          lib$rsvp$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = this._makeResult(state, i, value);\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$rsvp$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._makeResult = function(state, i, value) {\n      return value;\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$rsvp$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$rsvp$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$rsvp$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$rsvp$promise$all$$all(entries, label) {\n      return new lib$rsvp$enumerator$$default(this, entries, true /* abort on reject */, label).promise;\n    }\n    var lib$rsvp$promise$all$$default = lib$rsvp$promise$all$$all;\n    function lib$rsvp$promise$race$$race(entries, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n\n      if (!lib$rsvp$utils$$isArray(entries)) {\n        lib$rsvp$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$rsvp$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$rsvp$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        lib$rsvp$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$rsvp$promise$race$$default = lib$rsvp$promise$race$$race;\n    function lib$rsvp$promise$reject$$reject(reason, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      lib$rsvp$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$rsvp$promise$reject$$default = lib$rsvp$promise$reject$$reject;\n\n    var lib$rsvp$promise$$guidKey = 'rsvp_' + lib$rsvp$utils$$now() + '-';\n    var lib$rsvp$promise$$counter = 0;\n\n    function lib$rsvp$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$rsvp$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    function lib$rsvp$promise$$Promise(resolver, label) {\n      this._id = lib$rsvp$promise$$counter++;\n      this._label = label;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      lib$rsvp$config$$config.instrument && lib$rsvp$instrument$$default('created', this);\n\n      if (lib$rsvp$$internal$$noop !== resolver) {\n        typeof resolver !== 'function' && lib$rsvp$promise$$needsResolver();\n        this instanceof lib$rsvp$promise$$Promise ? lib$rsvp$$internal$$initializePromise(this, resolver) : lib$rsvp$promise$$needsNew();\n      }\n    }\n\n    var lib$rsvp$promise$$default = lib$rsvp$promise$$Promise;\n\n    // deprecated\n    lib$rsvp$promise$$Promise.cast = lib$rsvp$promise$resolve$$default;\n    lib$rsvp$promise$$Promise.all = lib$rsvp$promise$all$$default;\n    lib$rsvp$promise$$Promise.race = lib$rsvp$promise$race$$default;\n    lib$rsvp$promise$$Promise.resolve = lib$rsvp$promise$resolve$$default;\n    lib$rsvp$promise$$Promise.reject = lib$rsvp$promise$reject$$default;\n\n    lib$rsvp$promise$$Promise.prototype = {\n      constructor: lib$rsvp$promise$$Promise,\n\n      _guidKey: lib$rsvp$promise$$guidKey,\n\n      _onError: function (reason) {\n        var promise = this;\n        lib$rsvp$config$$config.after(function() {\n          if (promise._onError) {\n            lib$rsvp$config$$config['trigger']('error', reason, promise._label);\n          }\n        });\n      },\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfillment\n      @param {Function} onRejection\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: lib$rsvp$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection, label) {\n        return this.then(undefined, onRejection, label);\n      },\n\n    /**\n      `finally` will be invoked regardless of the promise's fate just as native\n      try/catch/finally behaves\n\n      Synchronous example:\n\n      ```js\n      findAuthor() {\n        if (Math.random() > 0.5) {\n          throw new Error();\n        }\n        return new Author();\n      }\n\n      try {\n        return findAuthor(); // succeed or fail\n      } catch(error) {\n        return findOtherAuther();\n      } finally {\n        // always runs\n        // doesn't affect the return value\n      }\n      ```\n\n      Asynchronous example:\n\n      ```js\n      findAuthor().catch(function(reason){\n        return findOtherAuther();\n      }).finally(function(){\n        // author was either found, or not\n      });\n      ```\n\n      @method finally\n      @param {Function} callback\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      'finally': function(callback, label) {\n        var promise = this;\n        var constructor = promise.constructor;\n\n        return promise.then(function(value) {\n          return constructor.resolve(callback()).then(function() {\n            return value;\n          });\n        }, function(reason) {\n          return constructor.resolve(callback()).then(function() {\n            return constructor.reject(reason);\n          });\n        }, label);\n      }\n    };\n    function  lib$rsvp$$internal$$withOwnPromise() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$rsvp$$internal$$noop() {}\n\n    var lib$rsvp$$internal$$PENDING   = void 0;\n    var lib$rsvp$$internal$$FULFILLED = 1;\n    var lib$rsvp$$internal$$REJECTED  = 2;\n\n    var lib$rsvp$$internal$$GET_THEN_ERROR = new lib$rsvp$$internal$$ErrorObject();\n\n    function lib$rsvp$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$rsvp$$internal$$GET_THEN_ERROR.error = error;\n        return lib$rsvp$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$rsvp$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$rsvp$$internal$$handleForeignThenable(promise, thenable, then) {\n      lib$rsvp$config$$config.async(function(promise) {\n        var sealed = false;\n        var error = lib$rsvp$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$rsvp$$internal$$resolve(promise, value, undefined);\n          } else {\n            lib$rsvp$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$rsvp$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$rsvp$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$rsvp$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$rsvp$$internal$$FULFILLED) {\n        lib$rsvp$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$rsvp$$internal$$REJECTED) {\n        thenable._onError = null;\n        lib$rsvp$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$rsvp$$internal$$subscribe(thenable, undefined, function(value) {\n          if (thenable !== value) {\n            lib$rsvp$$internal$$resolve(promise, value, undefined);\n          } else {\n            lib$rsvp$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          lib$rsvp$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$rsvp$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n      if (maybeThenable.constructor === promise.constructor &&\n          then === lib$rsvp$then$$default &&\n          constructor.resolve === lib$rsvp$promise$resolve$$default) {\n        lib$rsvp$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        if (then === lib$rsvp$$internal$$GET_THEN_ERROR) {\n          lib$rsvp$$internal$$reject(promise, lib$rsvp$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$rsvp$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$rsvp$utils$$isFunction(then)) {\n          lib$rsvp$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$rsvp$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$rsvp$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      } else if (lib$rsvp$utils$$objectOrFunction(value)) {\n        lib$rsvp$$internal$$handleMaybeThenable(promise, value, lib$rsvp$$internal$$getThen(value));\n      } else {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$rsvp$$internal$$publishRejection(promise) {\n      if (promise._onError) {\n        promise._onError(promise._result);\n      }\n\n      lib$rsvp$$internal$$publish(promise);\n    }\n\n    function lib$rsvp$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$rsvp$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$rsvp$$internal$$FULFILLED;\n\n      if (promise._subscribers.length === 0) {\n        if (lib$rsvp$config$$config.instrument) {\n          lib$rsvp$instrument$$default('fulfilled', promise);\n        }\n      } else {\n        lib$rsvp$config$$config.async(lib$rsvp$$internal$$publish, promise);\n      }\n    }\n\n    function lib$rsvp$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$rsvp$$internal$$PENDING) { return; }\n      promise._state = lib$rsvp$$internal$$REJECTED;\n      promise._result = reason;\n      lib$rsvp$config$$config.async(lib$rsvp$$internal$$publishRejection, promise);\n    }\n\n    function lib$rsvp$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onError = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$rsvp$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$rsvp$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$rsvp$config$$config.async(lib$rsvp$$internal$$publish, parent);\n      }\n    }\n\n    function lib$rsvp$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (lib$rsvp$config$$config.instrument) {\n        lib$rsvp$instrument$$default(settled === lib$rsvp$$internal$$FULFILLED ? 'fulfilled' : 'rejected', promise);\n      }\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$rsvp$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$rsvp$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$rsvp$$internal$$TRY_CATCH_ERROR = new lib$rsvp$$internal$$ErrorObject();\n\n    function lib$rsvp$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$rsvp$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$rsvp$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$rsvp$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$rsvp$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$rsvp$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$rsvp$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$rsvp$$internal$$reject(promise, lib$rsvp$$internal$$withOwnPromise());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$rsvp$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$rsvp$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$rsvp$$internal$$reject(promise, error);\n      } else if (settled === lib$rsvp$$internal$$FULFILLED) {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      } else if (settled === lib$rsvp$$internal$$REJECTED) {\n        lib$rsvp$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$rsvp$$internal$$initializePromise(promise, resolver) {\n      var resolved = false;\n      try {\n        resolver(function resolvePromise(value){\n          if (resolved) { return; }\n          resolved = true;\n          lib$rsvp$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          if (resolved) { return; }\n          resolved = true;\n          lib$rsvp$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$rsvp$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$rsvp$all$settled$$AllSettled(Constructor, entries, label) {\n      this._superConstructor(Constructor, entries, false /* don't abort on reject */, label);\n    }\n\n    lib$rsvp$all$settled$$AllSettled.prototype = lib$rsvp$utils$$o_create(lib$rsvp$enumerator$$default.prototype);\n    lib$rsvp$all$settled$$AllSettled.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$all$settled$$AllSettled.prototype._makeResult = lib$rsvp$enumerator$$makeSettledResult;\n    lib$rsvp$all$settled$$AllSettled.prototype._validationError = function() {\n      return new Error('allSettled must be called with an array');\n    };\n\n    function lib$rsvp$all$settled$$allSettled(entries, label) {\n      return new lib$rsvp$all$settled$$AllSettled(lib$rsvp$promise$$default, entries, label).promise;\n    }\n    var lib$rsvp$all$settled$$default = lib$rsvp$all$settled$$allSettled;\n    function lib$rsvp$all$$all(array, label) {\n      return lib$rsvp$promise$$default.all(array, label);\n    }\n    var lib$rsvp$all$$default = lib$rsvp$all$$all;\n    var lib$rsvp$asap$$len = 0;\n    var lib$rsvp$asap$$toString = {}.toString;\n    var lib$rsvp$asap$$vertxNext;\n    function lib$rsvp$asap$$asap(callback, arg) {\n      lib$rsvp$asap$$queue[lib$rsvp$asap$$len] = callback;\n      lib$rsvp$asap$$queue[lib$rsvp$asap$$len + 1] = arg;\n      lib$rsvp$asap$$len += 2;\n      if (lib$rsvp$asap$$len === 2) {\n        // If len is 1, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        lib$rsvp$asap$$scheduleFlush();\n      }\n    }\n\n    var lib$rsvp$asap$$default = lib$rsvp$asap$$asap;\n\n    var lib$rsvp$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$rsvp$asap$$browserGlobal = lib$rsvp$asap$$browserWindow || {};\n    var lib$rsvp$asap$$BrowserMutationObserver = lib$rsvp$asap$$browserGlobal.MutationObserver || lib$rsvp$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$rsvp$asap$$isNode = typeof self === 'undefined' &&\n      typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$rsvp$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$rsvp$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$rsvp$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$rsvp$asap$$useVertxTimer() {\n      return function() {\n        lib$rsvp$asap$$vertxNext(lib$rsvp$asap$$flush);\n      };\n    }\n\n    function lib$rsvp$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$rsvp$asap$$BrowserMutationObserver(lib$rsvp$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$rsvp$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$rsvp$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$rsvp$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$rsvp$asap$$flush, 1);\n      };\n    }\n\n    var lib$rsvp$asap$$queue = new Array(1000);\n    function lib$rsvp$asap$$flush() {\n      for (var i = 0; i < lib$rsvp$asap$$len; i+=2) {\n        var callback = lib$rsvp$asap$$queue[i];\n        var arg = lib$rsvp$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$rsvp$asap$$queue[i] = undefined;\n        lib$rsvp$asap$$queue[i+1] = undefined;\n      }\n\n      lib$rsvp$asap$$len = 0;\n    }\n\n    function lib$rsvp$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$rsvp$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$rsvp$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$rsvp$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$rsvp$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$rsvp$asap$$isNode) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useNextTick();\n    } else if (lib$rsvp$asap$$BrowserMutationObserver) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useMutationObserver();\n    } else if (lib$rsvp$asap$$isWorker) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useMessageChannel();\n    } else if (lib$rsvp$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$attemptVertex();\n    } else {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useSetTimeout();\n    }\n    function lib$rsvp$defer$$defer(label) {\n      var deferred = {};\n\n      deferred['promise'] = new lib$rsvp$promise$$default(function(resolve, reject) {\n        deferred['resolve'] = resolve;\n        deferred['reject'] = reject;\n      }, label);\n\n      return deferred;\n    }\n    var lib$rsvp$defer$$default = lib$rsvp$defer$$defer;\n    function lib$rsvp$filter$$filter(promises, filterFn, label) {\n      return lib$rsvp$promise$$default.all(promises, label).then(function(values) {\n        if (!lib$rsvp$utils$$isFunction(filterFn)) {\n          throw new TypeError(\"You must pass a function as filter's second argument.\");\n        }\n\n        var length = values.length;\n        var filtered = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          filtered[i] = filterFn(values[i]);\n        }\n\n        return lib$rsvp$promise$$default.all(filtered, label).then(function(filtered) {\n          var results = new Array(length);\n          var newLength = 0;\n\n          for (var i = 0; i < length; i++) {\n            if (filtered[i]) {\n              results[newLength] = values[i];\n              newLength++;\n            }\n          }\n\n          results.length = newLength;\n\n          return results;\n        });\n      });\n    }\n    var lib$rsvp$filter$$default = lib$rsvp$filter$$filter;\n\n    function lib$rsvp$promise$hash$$PromiseHash(Constructor, object, label) {\n      this._superConstructor(Constructor, object, true, label);\n    }\n\n    var lib$rsvp$promise$hash$$default = lib$rsvp$promise$hash$$PromiseHash;\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype = lib$rsvp$utils$$o_create(lib$rsvp$enumerator$$default.prototype);\n    lib$rsvp$promise$hash$$PromiseHash.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$promise$hash$$PromiseHash.prototype._init = function() {\n      this._result = {};\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._validateInput = function(input) {\n      return input && typeof input === 'object';\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._validationError = function() {\n      return new Error('Promise.hash must be called with an object');\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._enumerate = function() {\n      var enumerator = this;\n      var promise    = enumerator.promise;\n      var input      = enumerator._input;\n      var results    = [];\n\n      for (var key in input) {\n        if (promise._state === lib$rsvp$$internal$$PENDING && Object.prototype.hasOwnProperty.call(input, key)) {\n          results.push({\n            position: key,\n            entry: input[key]\n          });\n        }\n      }\n\n      var length = results.length;\n      enumerator._remaining = length;\n      var result;\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        result = results[i];\n        enumerator._eachEntry(result.entry, result.position);\n      }\n    };\n\n    function lib$rsvp$hash$settled$$HashSettled(Constructor, object, label) {\n      this._superConstructor(Constructor, object, false, label);\n    }\n\n    lib$rsvp$hash$settled$$HashSettled.prototype = lib$rsvp$utils$$o_create(lib$rsvp$promise$hash$$default.prototype);\n    lib$rsvp$hash$settled$$HashSettled.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$hash$settled$$HashSettled.prototype._makeResult = lib$rsvp$enumerator$$makeSettledResult;\n\n    lib$rsvp$hash$settled$$HashSettled.prototype._validationError = function() {\n      return new Error('hashSettled must be called with an object');\n    };\n\n    function lib$rsvp$hash$settled$$hashSettled(object, label) {\n      return new lib$rsvp$hash$settled$$HashSettled(lib$rsvp$promise$$default, object, label).promise;\n    }\n    var lib$rsvp$hash$settled$$default = lib$rsvp$hash$settled$$hashSettled;\n    function lib$rsvp$hash$$hash(object, label) {\n      return new lib$rsvp$promise$hash$$default(lib$rsvp$promise$$default, object, label).promise;\n    }\n    var lib$rsvp$hash$$default = lib$rsvp$hash$$hash;\n    function lib$rsvp$map$$map(promises, mapFn, label) {\n      return lib$rsvp$promise$$default.all(promises, label).then(function(values) {\n        if (!lib$rsvp$utils$$isFunction(mapFn)) {\n          throw new TypeError(\"You must pass a function as map's second argument.\");\n        }\n\n        var length = values.length;\n        var results = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          results[i] = mapFn(values[i]);\n        }\n\n        return lib$rsvp$promise$$default.all(results, label);\n      });\n    }\n    var lib$rsvp$map$$default = lib$rsvp$map$$map;\n\n    function lib$rsvp$node$$Result() {\n      this.value = undefined;\n    }\n\n    var lib$rsvp$node$$ERROR = new lib$rsvp$node$$Result();\n    var lib$rsvp$node$$GET_THEN_ERROR = new lib$rsvp$node$$Result();\n\n    function lib$rsvp$node$$getThen(obj) {\n      try {\n       return obj.then;\n      } catch(error) {\n        lib$rsvp$node$$ERROR.value= error;\n        return lib$rsvp$node$$ERROR;\n      }\n    }\n\n\n    function lib$rsvp$node$$tryApply(f, s, a) {\n      try {\n        f.apply(s, a);\n      } catch(error) {\n        lib$rsvp$node$$ERROR.value = error;\n        return lib$rsvp$node$$ERROR;\n      }\n    }\n\n    function lib$rsvp$node$$makeObject(_, argumentNames) {\n      var obj = {};\n      var name;\n      var i;\n      var length = _.length;\n      var args = new Array(length);\n\n      for (var x = 0; x < length; x++) {\n        args[x] = _[x];\n      }\n\n      for (i = 0; i < argumentNames.length; i++) {\n        name = argumentNames[i];\n        obj[name] = args[i + 1];\n      }\n\n      return obj;\n    }\n\n    function lib$rsvp$node$$arrayResult(_) {\n      var length = _.length;\n      var args = new Array(length - 1);\n\n      for (var i = 1; i < length; i++) {\n        args[i - 1] = _[i];\n      }\n\n      return args;\n    }\n\n    function lib$rsvp$node$$wrapThenable(then, promise) {\n      return {\n        then: function(onFulFillment, onRejection) {\n          return then.call(promise, onFulFillment, onRejection);\n        }\n      };\n    }\n\n    function lib$rsvp$node$$denodeify(nodeFunc, options) {\n      var fn = function() {\n        var self = this;\n        var l = arguments.length;\n        var args = new Array(l + 1);\n        var arg;\n        var promiseInput = false;\n\n        for (var i = 0; i < l; ++i) {\n          arg = arguments[i];\n\n          if (!promiseInput) {\n            // TODO: clean this up\n            promiseInput = lib$rsvp$node$$needsPromiseInput(arg);\n            if (promiseInput === lib$rsvp$node$$GET_THEN_ERROR) {\n              var p = new lib$rsvp$promise$$default(lib$rsvp$$internal$$noop);\n              lib$rsvp$$internal$$reject(p, lib$rsvp$node$$GET_THEN_ERROR.value);\n              return p;\n            } else if (promiseInput && promiseInput !== true) {\n              arg = lib$rsvp$node$$wrapThenable(promiseInput, arg);\n            }\n          }\n          args[i] = arg;\n        }\n\n        var promise = new lib$rsvp$promise$$default(lib$rsvp$$internal$$noop);\n\n        args[l] = function(err, val) {\n          if (err)\n            lib$rsvp$$internal$$reject(promise, err);\n          else if (options === undefined)\n            lib$rsvp$$internal$$resolve(promise, val);\n          else if (options === true)\n            lib$rsvp$$internal$$resolve(promise, lib$rsvp$node$$arrayResult(arguments));\n          else if (lib$rsvp$utils$$isArray(options))\n            lib$rsvp$$internal$$resolve(promise, lib$rsvp$node$$makeObject(arguments, options));\n          else\n            lib$rsvp$$internal$$resolve(promise, val);\n        };\n\n        if (promiseInput) {\n          return lib$rsvp$node$$handlePromiseInput(promise, args, nodeFunc, self);\n        } else {\n          return lib$rsvp$node$$handleValueInput(promise, args, nodeFunc, self);\n        }\n      };\n\n      fn.__proto__ = nodeFunc;\n\n      return fn;\n    }\n\n    var lib$rsvp$node$$default = lib$rsvp$node$$denodeify;\n\n    function lib$rsvp$node$$handleValueInput(promise, args, nodeFunc, self) {\n      var result = lib$rsvp$node$$tryApply(nodeFunc, self, args);\n      if (result === lib$rsvp$node$$ERROR) {\n        lib$rsvp$$internal$$reject(promise, result.value);\n      }\n      return promise;\n    }\n\n    function lib$rsvp$node$$handlePromiseInput(promise, args, nodeFunc, self){\n      return lib$rsvp$promise$$default.all(args).then(function(args){\n        var result = lib$rsvp$node$$tryApply(nodeFunc, self, args);\n        if (result === lib$rsvp$node$$ERROR) {\n          lib$rsvp$$internal$$reject(promise, result.value);\n        }\n        return promise;\n      });\n    }\n\n    function lib$rsvp$node$$needsPromiseInput(arg) {\n      if (arg && typeof arg === 'object') {\n        if (arg.constructor === lib$rsvp$promise$$default) {\n          return true;\n        } else {\n          return lib$rsvp$node$$getThen(arg);\n        }\n      } else {\n        return false;\n      }\n    }\n    var lib$rsvp$platform$$platform;\n\n    /* global self */\n    if (typeof self === 'object') {\n      lib$rsvp$platform$$platform = self;\n\n    /* global global */\n    } else if (typeof global === 'object') {\n      lib$rsvp$platform$$platform = global;\n    } else {\n      throw new Error('no global: `self` or `global` found');\n    }\n\n    var lib$rsvp$platform$$default = lib$rsvp$platform$$platform;\n    function lib$rsvp$race$$race(array, label) {\n      return lib$rsvp$promise$$default.race(array, label);\n    }\n    var lib$rsvp$race$$default = lib$rsvp$race$$race;\n    function lib$rsvp$reject$$reject(reason, label) {\n      return lib$rsvp$promise$$default.reject(reason, label);\n    }\n    var lib$rsvp$reject$$default = lib$rsvp$reject$$reject;\n    function lib$rsvp$resolve$$resolve(value, label) {\n      return lib$rsvp$promise$$default.resolve(value, label);\n    }\n    var lib$rsvp$resolve$$default = lib$rsvp$resolve$$resolve;\n    function lib$rsvp$rethrow$$rethrow(reason) {\n      setTimeout(function() {\n        throw reason;\n      });\n      throw reason;\n    }\n    var lib$rsvp$rethrow$$default = lib$rsvp$rethrow$$rethrow;\n\n    // defaults\n    lib$rsvp$config$$config.async = lib$rsvp$asap$$default;\n    lib$rsvp$config$$config.after = function(cb) {\n      setTimeout(cb, 0);\n    };\n    var lib$rsvp$$cast = lib$rsvp$resolve$$default;\n    function lib$rsvp$$async(callback, arg) {\n      lib$rsvp$config$$config.async(callback, arg);\n    }\n\n    function lib$rsvp$$on() {\n      lib$rsvp$config$$config['on'].apply(lib$rsvp$config$$config, arguments);\n    }\n\n    function lib$rsvp$$off() {\n      lib$rsvp$config$$config['off'].apply(lib$rsvp$config$$config, arguments);\n    }\n\n    // Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\n    if (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {\n      var lib$rsvp$$callbacks = window['__PROMISE_INSTRUMENTATION__'];\n      lib$rsvp$config$$configure('instrument', true);\n      for (var lib$rsvp$$eventName in lib$rsvp$$callbacks) {\n        if (lib$rsvp$$callbacks.hasOwnProperty(lib$rsvp$$eventName)) {\n          lib$rsvp$$on(lib$rsvp$$eventName, lib$rsvp$$callbacks[lib$rsvp$$eventName]);\n        }\n      }\n    }\n\n    var lib$rsvp$umd$$RSVP = {\n      'race': lib$rsvp$race$$default,\n      'Promise': lib$rsvp$promise$$default,\n      'allSettled': lib$rsvp$all$settled$$default,\n      'hash': lib$rsvp$hash$$default,\n      'hashSettled': lib$rsvp$hash$settled$$default,\n      'denodeify': lib$rsvp$node$$default,\n      'on': lib$rsvp$$on,\n      'off': lib$rsvp$$off,\n      'map': lib$rsvp$map$$default,\n      'filter': lib$rsvp$filter$$default,\n      'resolve': lib$rsvp$resolve$$default,\n      'reject': lib$rsvp$reject$$default,\n      'all': lib$rsvp$all$$default,\n      'rethrow': lib$rsvp$rethrow$$default,\n      'defer': lib$rsvp$defer$$default,\n      'EventTarget': lib$rsvp$events$$default,\n      'configure': lib$rsvp$config$$configure,\n      'async': lib$rsvp$$async\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$rsvp$umd$$RSVP; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$rsvp$umd$$RSVP;\n    } else if (typeof lib$rsvp$platform$$default !== 'undefined') {\n      lib$rsvp$platform$$default['RSVP'] = lib$rsvp$umd$$RSVP;\n    }\n}).call(this);\n\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":56}]},{},[26])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}